{
  "swagger": "2.0",
  "info": {
    "version": "AU",
    "title": "Australia",
    "x-swagger-net-version": "8.4.14.301"
  },
  "host": "api.yourpayroll.com.au",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/v2/brand": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "List Brand Labels",
        "description": "Lists all the brand labels to which you have access.",
        "operationId": "Brand_GetWhiteLabels",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/BrandModel"
              },
              "xml": {
                "name": "BrandModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<BrandModel>"
            }
          }
        }
      }
    },
    "/api/v2/brand/{brandId}/business/{businessId}/cancel": {
      "delete": {
        "tags": [
          "Brand"
        ],
        "summary": "Cancel Business",
        "description": "Delete all pay runs and employees. Disassociates users who have access to other businesses or brands. Deactivates users only associated with this business.\r\nThis endpoint is for brand users only.",
        "operationId": "CancelBusiness_Cancel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "brandId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/brand/{brandId}/business-templates": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "List Business Templates",
        "operationId": "BusinessTemplates_GetBusinessTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/BusinessTemplateModel"
              },
              "xml": {
                "name": "BusinessTemplateModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<BusinessTemplateModel>"
            }
          }
        }
      }
    },
    "/api/v2/brand/{brandId}/Invoice": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Brand Invoices",
        "description": "Get invoices for the specified Brand.",
        "operationId": "Invoice_GetBrandInvoices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "options.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "options.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/InvoiceModel"
              },
              "xml": {
                "name": "InvoiceModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<InvoiceModel>"
            }
          }
        }
      }
    },
    "/api/v2/brand/{brandId}/Invoice/{id}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Brand Invoice By ID",
        "description": "Gets the Brand invoice with the specified ID.",
        "operationId": "Invoice_GetBrandInvoiceById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "brandId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvoiceModel"
            }
          }
        }
      }
    },
    "/api/v2/brand/{brandId}/Invoice/{id}/excel": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Brand Invoice Excel By ID",
        "description": "Gets the Brand invoice Excel with the specified ID.",
        "operationId": "Invoice_GetBrandInvoiceExcelById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "brandId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/brand/{brandId}/Invoice/{id}/pdf": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Brand Invoice PDF By ID",
        "description": "Gets the Brand invoice PDF with the specified ID.",
        "operationId": "Invoice_GetBrandInvoicePdfById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "brandId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/brand/{brandId}/reports/activeemployees": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Active Employees Report",
        "description": "Brand Active Employees Report",
        "operationId": "AuBrandActiveEmployeeReport_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.emailAddresses",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "title": "String"
          },
          {
            "name": "request.includeInactiveBusinesses",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuActiveEmployeesModel"
              },
              "xml": {
                "name": "AuActiveEmployeesModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<AuActiveEmployeesModel>"
            }
          }
        }
      }
    },
    "/api/v2/brand/{brandId}/reports/signups": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Signup Report",
        "description": "Brand sign up report",
        "operationId": "BrandReport_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.emailAddresses",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "title": "String"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/SignupModel"
              },
              "xml": {
                "name": "SignupModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<SignupModel>"
            }
          }
        }
      }
    },
    "/api/v2/brand/{id}": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get Brand Label by ID",
        "description": "Gets the brand label with the specified ID.",
        "operationId": "Brand_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrandModel"
            }
          }
        }
      }
    },
    "/api/v2/business": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "List Businesses",
        "description": "Lists all the businesses associated with the current user.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuBusiness_GetBusinesses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuBusinessExportModel"
              },
              "xml": {
                "name": "AuBusinessExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuBusinessExportModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Create New Business",
        "description": "Creates a new business.",
        "operationId": "AuBusiness_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuBusinessExportModel"
            }
          },
          {
            "name": "setupDefaultData",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true,
            "title": "Boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuBusinessExportModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get Business Details",
        "description": "Retrieves the details of the business with the specified ID.",
        "operationId": "AuBusiness_GetBusiness",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuBusinessExportModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/{businessTemplateId}": {
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Copy Business Settings From Template",
        "operationId": "AuBusiness_CopyBusinessSettingsFromTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessTemplateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/aba": {
      "get": {
        "tags": [
          "AbaSettings"
        ],
        "summary": "List ABA Settings",
        "description": "Retrieves all the ABA settings associated with the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuAba_GetAbaDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/BusinessAbaModel"
              },
              "xml": {
                "name": "BusinessAbaModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<BusinessAbaModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AbaSettings"
        ],
        "summary": "Create ABA Settings Record",
        "description": "Creates a new ABA settings record for the business.",
        "operationId": "AuAba_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "abaDetails",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusinessAbaModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/aba/{id}": {
      "get": {
        "tags": [
          "AbaSettings"
        ],
        "summary": "Get ABA Settings Record by ID",
        "description": "Gets the details for the ABA settings record with the specified ID.",
        "operationId": "AuAba_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BusinessAbaModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AbaSettings"
        ],
        "summary": "Update ABA Settings Record",
        "description": "Updates the ABA settings record with the specified ID.",
        "operationId": "AuAba_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "abaDetails",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusinessAbaModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "AbaSettings"
        ],
        "summary": "Delete ABA Settings Record",
        "description": "Deletes the ABA settings record with the specified ID.",
        "operationId": "AuAba_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/access": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "List All Business Access Users",
        "description": "Lists all of the users with access to this business, as well as the types of access they each have.\n\nThis operation supports OData queries.",
        "operationId": "BusinessAccess_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/BusinessAccessModel"
              },
              "xml": {
                "name": "BusinessAccessModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IQueryable<BusinessAccessModel>"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Business"
        ],
        "summary": "Update details of an associated user",
        "description": "Updates the user details (name / email) of a user that is associated with the business.\r\nThis endpoint will only work if the user is already associated with the business and is not associated with any other business",
        "operationId": "BusinessAccess_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "viewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Assign Business Access",
        "description": "Assigns business access to a name/email.",
        "operationId": "BusinessAccess_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "viewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBusinessAccessModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Business"
        ],
        "summary": "Revoke Business Access",
        "description": "Revokes a user's access to the business.",
        "operationId": "BusinessAccess_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/access/user": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get User Business Access",
        "description": "Returns the business access assigned to the user with the specified email address.",
        "operationId": "BusinessAccess_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BusinessAccessModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/accounts": {
      "get": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Get Journal Accounts",
        "description": "Gets the list of available journal accounts for the business.",
        "operationId": "Accounts_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalAccountModel"
              },
              "xml": {
                "name": "JournalAccountModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<JournalAccountModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Create a new Journal Account",
        "description": "Create a new journal account for the Business.",
        "operationId": "Accounts_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalAccountModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JournalAccountModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/accounts/{id}": {
      "get": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Get Journal Account by ID",
        "description": "Gets the journal account with the specified ID.",
        "operationId": "Accounts_GetApiV2BusinessByBusinessIdAccountsById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JournalAccountModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Update an existing Journal Account",
        "description": "Update an existing journal account for the Business.",
        "operationId": "Accounts_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalAccountModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JournalAccountModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Delete an existing Journal Account",
        "description": "Delete an existing journal account for the Business.",
        "operationId": "Accounts_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/accounts/bulk": {
      "post": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Bulk insert Journal Accounts",
        "description": "Create new journal accounts for the Business. This will not replace any existing journal accounts.",
        "operationId": "Accounts_PostBulk",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalAccountModel"
              },
              "xml": {
                "name": "JournalAccountModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<JournalAccountModel>"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JournalAccountBulkCreateModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/accounts/journalservice": {
      "get": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Get Journal Service provider",
        "description": "Gets the name of the journal service provider.",
        "operationId": "Accounts_GetJournalService",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JournalServiceProviderModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Update Journal Service provider",
        "description": "Updates the journal service provider.",
        "operationId": "Accounts_PutJournalService",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalServiceProviderModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JournalServiceProviderModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/accounts/journalservices": {
      "get": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Get Journal Service providers",
        "description": "Gets the Journal Service providers that can be configured via the API.",
        "operationId": "Accounts_GetJournalServices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "string",
                "title": "String"
              },
              "type": "array",
              "title": "List<String>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/accounts/types": {
      "get": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Get Journal Account Types",
        "description": "Gets the reference list of Journal Account Types.",
        "operationId": "Accounts_GetAccountTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "string",
                "title": "String"
              },
              "type": "array",
              "title": "List<String>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/actionitems/businessnotifications": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "List Business Notifications",
        "description": "Lists the notifications, that appear on the Dashboard in the application, for the business.",
        "operationId": "ActionItems_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/BusinessAction"
              },
              "xml": {
                "name": "BusinessAction",
                "wrapped": true
              },
              "type": "array",
              "title": "List<BusinessAction>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/actionitems/businessnotifications/{id}/dismiss": {
      "delete": {
        "tags": [
          "Business"
        ],
        "summary": "Dismiss Business Notifications",
        "description": "Dismisses a business notification, so that it won't be shown again.",
        "operationId": "ActionItems_Dismiss",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/ato": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get ATO Details",
        "description": "Gets the ATO details for the business.",
        "operationId": "ATO_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BusinessAtoSupplierModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Set ATO Details",
        "description": "Sets the ATO details for the business.",
        "operationId": "ATO_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusinessAtoSupplierModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BusinessAtoSupplierModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/chartofaccounts": {
      "get": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Get Chart of Accounts",
        "description": "Gets the default chart of accounts configuration for the business.",
        "operationId": "AuChartOfAccounts_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuChartOfAccountsModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Update Chart of Accounts",
        "description": "Updates the default chart of accounts configuration for the business.",
        "operationId": "AuChartOfAccounts_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "chartOfAccounts",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuChartOfAccountsGroupModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuChartOfAccountsModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/chartofaccounts/location/{locationId}": {
      "get": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Get Location Specific Chart of Accounts",
        "description": "Gets the location specific chart of accounts configuration for a given location.",
        "operationId": "AuChartOfAccounts_GetApiV2BusinessByBusinessIdChartofaccountsLocationByLocationId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuChartOfAccountsLocationGroupModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Update Location Specific Chart of Accounts",
        "description": "Updates the location specific chart of accounts configuration for the business.",
        "operationId": "AuChartOfAccounts_PostApiV2BusinessByBusinessIdChartofaccountsLocationByLocationId",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "chartOfAccounts",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuChartOfAccountsLocationGroupModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuChartOfAccountsLocationGroupModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Delete Location Specific Chart of Accounts",
        "description": "Deletes a location specific chart of accounts configuration for the business.",
        "operationId": "AuChartOfAccounts_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/deductioncategory": {
      "get": {
        "tags": [
          "DeductionCategories"
        ],
        "summary": "List Deduction Categories",
        "description": "Lists all the deduction categories for the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuDeductionCategory_GetDeductionCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuDeductionCategoryModel"
              },
              "xml": {
                "name": "AuDeductionCategoryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuDeductionCategoryModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "DeductionCategories"
        ],
        "summary": "Create Deduction Category",
        "description": "Creates a deduction category for the business.",
        "operationId": "AuDeductionCategory_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deductionCategory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuDeductionCategoryModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuDeductionCategoryModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/deductioncategory/{id}": {
      "get": {
        "tags": [
          "DeductionCategories"
        ],
        "summary": "Get Deduction Category By ID",
        "description": "Gets the deduction category with the specified ID.",
        "operationId": "AuDeductionCategory_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuDeductionCategoryModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DeductionCategories"
        ],
        "summary": "Update Deduction Category",
        "description": "Updates the deduction category with the specified ID.",
        "operationId": "AuDeductionCategory_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "deductionCategory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuDeductionCategoryModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuDeductionCategoryModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeductionCategories"
        ],
        "summary": "Delete Deduction Category",
        "description": "Deletes the deduction category with the specified ID.",
        "operationId": "AuDeductionCategory_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/dimension": {
      "get": {
        "tags": [
          "ReportingDimensions"
        ],
        "summary": "List Dimensions",
        "description": "Lists all the dimensions defined for the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "ReportingDimension_GetDimensions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportingDimensionApiModel"
              },
              "xml": {
                "name": "ReportingDimensionApiModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<ReportingDimensionApiModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReportingDimensions"
        ],
        "summary": "Create Dimension",
        "description": "Creates a new dimension for the business.",
        "operationId": "ReportingDimension_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dimension",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportingDimensionApiModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportingDimensionApiModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/dimension/{dimensionId}/value": {
      "get": {
        "tags": [
          "ReportingDimensions"
        ],
        "summary": "List Dimension Values",
        "description": "Lists all the values defined for the specified dimension.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "ReportingDimensionValue_GetDimensionValues",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dimensionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportingDimensionValueApiModel"
              },
              "xml": {
                "name": "ReportingDimensionValueApiModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<ReportingDimensionValueApiModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReportingDimensions"
        ],
        "summary": "Create Dimension Value",
        "description": "Creates a new value for the specified dimension.",
        "operationId": "ReportingDimensionValue_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dimensionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "dimensionValue",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportingDimensionValueApiModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportingDimensionValueApiModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/dimension/{dimensionId}/value/{id}": {
      "get": {
        "tags": [
          "ReportingDimensions"
        ],
        "summary": "Get Dimension Value by ID",
        "description": "Gets the dimension value with the specified ID.",
        "operationId": "ReportingDimensionValue_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dimensionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportingDimensionValueApiModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReportingDimensions"
        ],
        "summary": "Update Dimension Value",
        "description": "Updates the dimension value with the specified ID.",
        "operationId": "ReportingDimensionValue_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dimensionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "dimensionValueModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportingDimensionValueApiModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportingDimensionValueApiModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReportingDimensions"
        ],
        "summary": "Delete Dimension Value",
        "description": "Deletes the dimension value with the specified ID.",
        "operationId": "ReportingDimensionValue_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dimensionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/dimension/{id}": {
      "get": {
        "tags": [
          "ReportingDimensions"
        ],
        "summary": "Get Dimension by ID",
        "description": "Gets the dimension with the specified ID.",
        "operationId": "ReportingDimension_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportingDimensionApiModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReportingDimensions"
        ],
        "summary": "Update Dimension",
        "description": "Updates the dimension with the specified ID.",
        "operationId": "ReportingDimension_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "dimensionModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportingDimensionApiModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportingDimensionApiModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReportingDimensions"
        ],
        "summary": "Delete Dimension",
        "description": "Deletes the dimension with the specified ID.",
        "operationId": "ReportingDimension_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/document": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "List Business Document Details",
        "description": "Lists the details for all of the documents in the business.",
        "operationId": "Document_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/DocumentModel"
              },
              "xml": {
                "name": "DocumentModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<DocumentModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Create Business Document",
        "description": "Uploads new document(s) for business. The request should be a MIME multipart file upload request.",
        "operationId": "Document_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "visibleToAll",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false,
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/DocumentModel"
              },
              "xml": {
                "name": "DocumentModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<DocumentModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/document/{id}": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get Business Document Details",
        "description": "Gets the details for the specified business document.",
        "operationId": "Document_GetApiV2BusinessByBusinessIdDocumentById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Business"
        ],
        "summary": "Update Business Document Permissions",
        "description": "Updates permissions for the business document with the specified ID.",
        "operationId": "Document_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDocumentPermissionsModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Business"
        ],
        "summary": "Delete Business Document",
        "description": "Deletes the business document with the specified ID.",
        "operationId": "Document_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/document/{id}/content": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get Business Document Content",
        "description": "Gets the file content for the business document with the specified ID.",
        "operationId": "Document_Content",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentFile"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}": {
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete Employee",
        "description": "Deletes the employee with the specified ID.",
        "operationId": "AuEmployee_DeleteEmployee",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/access": {
      "get": {
        "tags": [
          "EmployeeAccess"
        ],
        "summary": "Get Users With Access to Employee",
        "description": "Gets a list of all users with access to this employee.\n\nThis operation supports OData queries.",
        "operationId": "EmployeeAccess_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeAccessModel"
              },
              "xml": {
                "name": "EmployeeAccessModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IQueryable<EmployeeAccessModel>"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeAccess"
        ],
        "summary": "Update Employee Access Record",
        "description": "Updates the employee access record for the specified user.",
        "operationId": "EmployeeAccess_UpdateUserAccess",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "viewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeAccess"
        ],
        "summary": "Grant Employee Access",
        "description": "Grants a user access to the employee.",
        "operationId": "EmployeeAccess_AddEmployeeAccess",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "viewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEmployeeAccessModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeAccess"
        ],
        "summary": "Revoke Employee Access",
        "description": "Revoke a user's access to the employee.",
        "operationId": "EmployeeAccess_DeleteEmployeeAccess",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/access/email": {
      "get": {
        "tags": [
          "EmployeeAccess"
        ],
        "summary": "Get Employee Access for User",
        "description": "Gets a list of all employees to which the user (specified by email) has access.",
        "operationId": "EmployeeAccess_ListEmployeeAccess",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeAccessModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/additional-earnings": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "List Employee Additional Earnings",
        "description": "Lists all the additional earnings for the employee",
        "operationId": "EmployeeRecurringAdditionalEarnings_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AdditionalEarningsModel"
              },
              "xml": {
                "name": "AdditionalEarningsModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AdditionalEarningsModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Create Employee Additional Earning",
        "description": "Creates a new additional earning for the employee.",
        "operationId": "EmployeeRecurringAdditionalEarnings_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdditionalEarningsInputModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdditionalEarningsModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/additional-earnings/{id}": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Get Employee Additional Earning by ID",
        "description": "Gets the employee's additional earning with the specified ID.",
        "operationId": "EmployeeRecurringAdditionalEarnings_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "title": "Int64"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdditionalEarningsModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Update Employee Additional Earning",
        "description": "Updates the employee's additional earning with the specified ID.",
        "operationId": "EmployeeRecurringAdditionalEarnings_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "title": "Int64"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdditionalEarningsInputModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdditionalEarningsModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Delete Employee Additional Earning",
        "description": "Deletes the employee's additional earning with the specified ID.",
        "operationId": "EmployeeRecurringAdditionalEarnings_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "title": "Int64"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/bankaccount": {
      "get": {
        "tags": [
          "EmployeeBankAccount"
        ],
        "summary": "List Bank Accounts",
        "description": "Lists all of the bank accounts for this employee.",
        "operationId": "AuBankAccount_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuBankAccountModel"
              },
              "xml": {
                "name": "AuBankAccountModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuBankAccountModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeBankAccount"
        ],
        "summary": "Create Bank Account",
        "description": "Creates a new bank account for the employee.",
        "operationId": "AuBankAccount_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuBankAccountModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuSaveBankAccountResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/bankaccount/{bankAccountId}": {
      "get": {
        "tags": [
          "EmployeeBankAccount"
        ],
        "summary": "Get Bank Account by ID",
        "description": "Gets the bank account for this employee with the specified ID.",
        "operationId": "AuBankAccount_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuBankAccountModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeBankAccount"
        ],
        "summary": "Delete Bank Account",
        "description": "Deletes the employee's bank account with the specified ID.",
        "operationId": "AuBankAccount_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuSaveBankAccountResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/bankaccount/{id}": {
      "put": {
        "tags": [
          "EmployeeBankAccount"
        ],
        "summary": "Update Bank Account",
        "description": "Updates the employee's bank account with the specified ID.",
        "operationId": "AuBankAccount_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuBankAccountModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuSaveBankAccountResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/deduction": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "List Employee Deductions",
        "description": "Lists all the recurring employee deductions for the employee",
        "operationId": "AuEmployeeRecurringDeduction_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuEmployeeRecurringDeductionModel"
              },
              "xml": {
                "name": "AuEmployeeRecurringDeductionModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuEmployeeRecurringDeductionModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Create Employee Deduction",
        "description": "Creates a new recurring deduction for the employee.",
        "operationId": "AuEmployeeRecurringDeduction_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEmployeeRecurringDeductionModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEmployeeRecurringDeductionModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/deduction/{externalReferenceId}": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Get Employee Deduction by External Reference Id",
        "description": "Gets the employee's recurring deduction with the specified external reference ID.",
        "operationId": "AuEmployeeRecurringDeduction_GetByExternalReferenceId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "externalReferenceId",
            "in": "path",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEmployeeRecurringDeductionModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/deduction/{id}": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Get Employee Deduction by ID",
        "description": "Gets the employee's recurring deduction with the specified ID.",
        "operationId": "AuEmployeeRecurringDeduction_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEmployeeRecurringDeductionModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Update Employee Deduction",
        "description": "Updates the employee's recurring deduction with the specified ID.",
        "operationId": "AuEmployeeRecurringDeduction_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEmployeeRecurringDeductionModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEmployeeRecurringDeductionModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Delete Employee Deduction",
        "description": "Deletes the employee recurring deduction with the specified ID.",
        "operationId": "AuEmployeeRecurringDeduction_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/details": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee basic details by ID",
        "description": "returns the basic employee details for the specified employee",
        "operationId": "EmployeeDetails_GetEmployee",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeDetailsModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/document": {
      "get": {
        "tags": [
          "EmployeeDocument"
        ],
        "summary": "List Employee Documents",
        "description": "Lists all the documents for this employee.",
        "operationId": "EmployeeDocument_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeDocumentModel"
              },
              "xml": {
                "name": "EmployeeDocumentModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<EmployeeDocumentModel>"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeDocument"
        ],
        "summary": "Update Employee Document Permissions",
        "description": "Updates permissions for the employee document with the specified ID.",
        "operationId": "EmployeeDocument_UpdatePermissions",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateEmployeeDocumentPermissionsModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeDocumentModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeDocument"
        ],
        "summary": "Create Employee Document",
        "description": "Uploads new document(s) for this employee. The request should be a MIME multipart file upload request.",
        "operationId": "EmployeeDocument_Upload",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "visible",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false,
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeDocumentModel"
              },
              "xml": {
                "name": "EmployeeDocumentModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<EmployeeDocumentModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/document/{documentId}/expense/{id}": {
      "post": {
        "tags": [
          "EmployeeDocument"
        ],
        "summary": "Link Employee Document to Expense Request",
        "description": "Takes the specified employee document and adds it as an attachment to the expense request with the specified ID.",
        "operationId": "EmployeeDocumentEmployeeExpenseLink_CreateLink",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeDocument"
        ],
        "summary": "Unlink Employee Document from Expense Request",
        "description": "If the specified employee document is attached to the specified expense request, unattach it.",
        "operationId": "EmployeeDocumentEmployeeExpenseLink_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/document/{documentId}/leave/{id}": {
      "post": {
        "tags": [
          "EmployeeDocument"
        ],
        "summary": "Link Employee Document to Leave Request",
        "description": "Takes the specified employee document and adds it as an attachment to the leave request with the specified ID.",
        "operationId": "EmployeeDocumentLeaveLink_CreateLink",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeDocument"
        ],
        "summary": "Unlink Employee Document from Leave Request",
        "description": "If the specified employee document is attached to the specified leave request, unattach it.",
        "operationId": "EmployeeDocumentLeaveLink_RemoveLink",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/document/{documentId}/timesheet/{id}": {
      "post": {
        "tags": [
          "EmployeeDocument"
        ],
        "summary": "Link Employee Document to Timesheet",
        "description": "Takes the specified employee document and adds it as an attachment to the timesheet with the specified ID.",
        "operationId": "EmployeeDocumentTimesheetLink_CreateLink",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeDocument"
        ],
        "summary": "Unlink Employee Document from Timesheet",
        "description": "If the specified employee document is attached to the specified timesheet, unattach it.",
        "operationId": "EmployeeDocumentTimesheetLink_RemoveLink",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/document/{id}": {
      "get": {
        "tags": [
          "EmployeeDocument"
        ],
        "summary": "Get Employee Document Details",
        "description": "Gets the details for the employee document with the specified ID.",
        "operationId": "EmployeeDocument_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeDocumentModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeDocument"
        ],
        "summary": "Delete Employee Document",
        "description": "Deletes the employee document with the specified ID.",
        "operationId": "EmployeeDocument_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/document/{id}/content": {
      "get": {
        "tags": [
          "EmployeeDocument"
        ],
        "summary": "Get Employee Document Content",
        "description": "Get the file content for the employee document with the specified ID.",
        "operationId": "EmployeeDocument_Content",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentFile"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/earningslinesplit": {
      "get": {
        "tags": [
          "EmployeeEarningsLineSplit"
        ],
        "summary": "Get Employee location earnings line splits",
        "description": "Lists all the location earnings line splits for this employee.\n\nThis operation supports OData queries.",
        "operationId": "GenericEarningsLineSplit_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EarningsLineSplitApiModel"
              },
              "xml": {
                "name": "EarningsLineSplitApiModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IQueryable<EarningsLineSplitApiModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeEarningsLineSplit"
        ],
        "summary": "Create Earnings line split",
        "description": "Creates a new earnings line split for the employee.",
        "operationId": "GenericEarningsLineSplit_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "earningsLineSplit",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EarningsLineSplitEditModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/earningslinesplit/{locationId}": {
      "get": {
        "tags": [
          "EmployeeEarningsLineSplit"
        ],
        "summary": "Get Earnings line split by location ID",
        "description": "Gets the earnings line split for this employee with the specified location ID.",
        "operationId": "GenericEarningsLineSplit_GetApiV2BusinessByBusinessIdEmployeeByEmployeeIdEarningslinesplitByLocationId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EarningsLineSplitApiModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeEarningsLineSplit"
        ],
        "summary": "Update Earnings line split",
        "description": "Updates the employee's earnings line split for the specified location ID.",
        "operationId": "GenericEarningsLineSplit_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "earningsLineSplit",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EarningsLineSplitEditModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeEarningsLineSplit"
        ],
        "summary": "Delete Earnings line split",
        "description": "Deletes the employee's earnings line split with the specified location ID.",
        "operationId": "GenericEarningsLineSplit_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/earningslinesplit/dimension": {
      "get": {
        "tags": [
          "EmployeeReportingDimensionEarningsLineSplit"
        ],
        "summary": "Get Employee Dimension Earnings Line Splits",
        "description": "Lists all the dimension earnings line splits for this employee.\n\nThis operation supports OData queries.",
        "operationId": "GenericDimensionEarningsLineSplit_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/DimensionEarningsLineSplitApiModel"
              },
              "xml": {
                "name": "DimensionEarningsLineSplitApiModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IQueryable<DimensionEarningsLineSplitApiModel>"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeReportingDimensionEarningsLineSplit"
        ],
        "summary": "Update Dimension Earnings Line Split",
        "description": "Updates a dimension earnings line split by matching against existing reporting dimension values",
        "operationId": "GenericDimensionEarningsLineSplit_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EarningsLineSplitEditModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeReportingDimensionEarningsLineSplit"
        ],
        "summary": "Create Dimension Earnings Line Split",
        "description": "Creates a dimension earnings line split for a specific employee",
        "operationId": "GenericDimensionEarningsLineSplit_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EarningsLineSplitEditModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/earningslinesplit/dimension/{dimensionId}/value/{dimensionValueId}": {
      "get": {
        "tags": [
          "EmployeeReportingDimensionEarningsLineSplit"
        ],
        "summary": "Get Employee Dimension Earnings Line Split By Id",
        "description": "Lists all the dimension earnings line splits for this employee.\n\nThis operation supports OData queries.",
        "operationId": "GenericDimensionEarningsLineSplit_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dimensionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "dimensionValueId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeReportingDimensionEarningsLineSplit"
        ],
        "summary": "Delete Dimension Earnings Line Split",
        "description": "Deletes the employee's earnings line split with the specified reporting dimension ID",
        "operationId": "GenericDimensionEarningsLineSplit_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dimensionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "dimensionValueId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/employerliability": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "List Employer liabilities",
        "description": "Lists all the recurring employer liabilities for the employee",
        "operationId": "Employerrecurringliability_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployerRecurringLiabilityModel"
              },
              "xml": {
                "name": "EmployerRecurringLiabilityModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<EmployerRecurringLiabilityModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Create Employer liability",
        "description": "Creates a new recurring employer liability for the employee.",
        "operationId": "Employerrecurringliability_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployerRecurringLiabilityModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployerRecurringLiabilityModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/employerliability/{id}": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Get Employer liability by ID",
        "description": "Gets the employee's recurring employer liabilities with the specified ID.",
        "operationId": "Employerrecurringliability_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployerRecurringLiabilityModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Update Employer liability",
        "description": "Updates the employee's recurring employer liability with the specified ID.",
        "operationId": "Employerrecurringliability_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployerRecurringLiabilityModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployerRecurringLiabilityModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Delete Employer liability",
        "description": "Deletes the recurring employer liability with the specified ID.",
        "operationId": "Employerrecurringliability_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/expense": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "List Employee Expenses",
        "description": "Lists all the recurring employee expenses for the employee",
        "operationId": "EmployeeRecurringExpense_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeRecurringExpenseModel"
              },
              "xml": {
                "name": "EmployeeRecurringExpenseModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<EmployeeRecurringExpenseModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Create Employee Expense",
        "description": "Creates a new recurring expense for the employee.",
        "operationId": "EmployeeRecurringExpense_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringExpenseModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringExpenseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/expense/{id}": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Get Employee Expense by ID",
        "description": "Gets the employee's recurring expense with the specified ID.",
        "operationId": "EmployeeRecurringExpense_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringExpenseModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Update Employee Expense",
        "description": "Updates the employee's recurring expense with the specified ID.",
        "operationId": "EmployeeRecurringExpense_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringExpenseModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringExpenseModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Delete Employee Expense",
        "description": "Deletes the employee recurring expense with the specified ID.",
        "operationId": "EmployeeRecurringExpense_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/expenserequest": {
      "get": {
        "tags": [
          "EmployeeExpenseRequest"
        ],
        "summary": "List Expense Requests",
        "description": "Lists all of the expense requests for this employee.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "ExpenseRequest_GetExpenseRequests",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ExpenseRequestResponseModel"
              },
              "xml": {
                "name": "ExpenseRequestResponseModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<ExpenseRequestResponseModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeExpenseRequest"
        ],
        "summary": "Create Expense Request",
        "description": "Creates a new expense request for this employee.",
        "operationId": "ExpenseRequest_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpenseRequestEditModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/expenserequest/{expenseRequestId}": {
      "get": {
        "tags": [
          "EmployeeExpenseRequest"
        ],
        "summary": "Get Expense Request by ID",
        "description": "Gets the expense request with the specified ID.",
        "operationId": "ExpenseRequest_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExpenseRequestResponseModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeExpenseRequest"
        ],
        "summary": "Update Expense Request",
        "description": "Updates the expense request with the specified ID.",
        "operationId": "ExpenseRequest_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpenseRequestEditModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeExpenseRequest"
        ],
        "summary": "Delete Expense Request",
        "description": "Deletes the expense request with the specified ID.",
        "operationId": "ExpenseRequest_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/expenserequest/{expenseRequestId}/approve": {
      "post": {
        "tags": [
          "EmployeeExpenseRequest"
        ],
        "summary": "Approve Expense Request",
        "description": "Approves the expense request with the specified ID.",
        "operationId": "ExpenseRequest_Approve",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/expenserequest/{expenseRequestId}/attachment": {
      "put": {
        "tags": [
          "EmployeeExpenseRequest"
        ],
        "summary": "Upload Attachment to Expense Request",
        "description": "Uploads an attachment to the expense request with the specified ID.\r\nThe request should be a MIME multipart file upload request.",
        "operationId": "ExpenseRequest_UploadAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "title": "IHttpActionResult"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/expenserequest/{expenseRequestId}/decline": {
      "post": {
        "tags": [
          "EmployeeExpenseRequest"
        ],
        "summary": "Decline Expense Request",
        "description": "Declines the expense request with the specified ID. The request body should just be a string, enclosed in double quotes, for the Decline Reason. Do not encase in {}\r\neg. \"Not a valid expense request\"",
        "operationId": "ExpenseRequest_Decline",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "title": "String"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/image": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee Profile Image",
        "description": "Returns the file content for the employee's current profile image.",
        "operationId": "EmployeeProfileImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Set Employee Profile Image",
        "description": "Uploads a new employee profile image. The request should be a MIME multipart file upload request.",
        "operationId": "EmployeeProfileImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProfileImageMetadata"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete Employee Profile Image",
        "description": "Delete's the employee's profile image.",
        "operationId": "EmployeeProfileImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/leaveallowances": {
      "get": {
        "tags": [
          "EmployeeLeaveAllowances"
        ],
        "summary": "Get Leave Allowances",
        "description": "Gets the leave allowances for the specified employee",
        "operationId": "AuEmployeeLeaveAllowance_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuLeaveAllowanceModel"
              },
              "xml": {
                "name": "AuLeaveAllowanceModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<AuLeaveAllowanceModel>"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeLeaveAllowances"
        ],
        "summary": "Set Leave Allowances",
        "description": "Sets the leave allowances for the specified employee",
        "operationId": "AuEmployeeLeaveAllowance_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "leaveAllowances",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/AuLeaveAllowanceModel"
              },
              "xml": {
                "name": "AuLeaveAllowanceModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<AuLeaveAllowanceModel>"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/leaveallowancetemplate": {
      "get": {
        "tags": [
          "LeaveAllowance"
        ],
        "summary": "Get Leave Allowance Template for Employee",
        "description": "Gets the current leave allowance template for the specified employee",
        "operationId": "AuEmployeeLeaveAllowanceTemplate_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuLeaveAllowanceTemplateModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/leaveallowancetemplate/assign/{leaveAllowanceTemplateId}": {
      "post": {
        "tags": [
          "LeaveAllowance"
        ],
        "summary": "Assign Leave Allowance Template",
        "description": "Assigns employee to existing leave allowance template",
        "operationId": "AuEmployeeLeaveAllowanceTemplate_AssignLeaveAllowanceTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "leaveAllowanceTemplateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/leavebalances": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Leave Balances",
        "description": "Gets leave balances for this employee.",
        "operationId": "LeaveBalances_GetLeaveBalances",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "asAtDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/LeaveBalanceModel"
              },
              "xml": {
                "name": "LeaveBalanceModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<LeaveBalanceModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/leaverequest": {
      "get": {
        "tags": [
          "LeaveRequests"
        ],
        "summary": "Get Leave Requests for Employee",
        "description": "Returns all leave requests for this employee, optionally filtered by OData parameters.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuHoursLeaveRequest_GetLeaveRequests",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/HourLeaveRequestResponseModel"
              },
              "xml": {
                "name": "HourLeaveRequestResponseModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<HourLeaveRequestResponseModel>"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LeaveRequests"
        ],
        "summary": "Update Leave Request",
        "description": "Updates the leave request with the specified ID.",
        "operationId": "AuHoursLeaveRequest_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HourLeaveRequestModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "LeaveRequests"
        ],
        "summary": "Create Leave Request",
        "description": "Creates a new leave request for an employee.",
        "operationId": "AuHoursLeaveRequest_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HourLeaveRequestModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HourLeaveRequestResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/leaverequest/{leaveRequestId}": {
      "get": {
        "tags": [
          "LeaveRequests"
        ],
        "summary": "Get Leave Request by ID",
        "description": "Gets the details for a leave request with the specified ID.",
        "operationId": "AuHoursLeaveRequest_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HourLeaveRequestResponseModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LeaveRequests"
        ],
        "summary": "Update Leave Request",
        "description": "Updates the leave request with the specified ID.",
        "operationId": "AuHoursLeaveRequest_PutApiV2BusinessByBusinessIdEmployeeByEmployeeIdLeaverequestByLeaveRequestId",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HourLeaveRequestModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "LeaveRequests"
        ],
        "summary": "Delete Leave Request",
        "description": "Deletes the leave request with the specified ID.",
        "operationId": "AuHoursLeaveRequest_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HourLeaveRequestResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/leaverequest/{leaveRequestId}/approve": {
      "post": {
        "tags": [
          "LeaveRequests"
        ],
        "summary": "Approve Leave Request",
        "description": "Approves the leave request with the specified ID.",
        "operationId": "AuHoursLeaveRequest_Approve",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HourLeaveRequestResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/leaverequest/{leaveRequestId}/decline": {
      "post": {
        "tags": [
          "LeaveRequests"
        ],
        "summary": "Decline Leave Request",
        "description": "Declines the leave request with the specified ID.",
        "operationId": "AuHoursLeaveRequest_Decline",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "decline",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclineLeaveRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HourLeaveRequestResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/leaverequest/estimate": {
      "get": {
        "tags": [
          "LeaveRequests"
        ],
        "summary": "Estimate Leave Hours",
        "description": "Estimates the leave hours required for a leave request between fromDate and toDate.",
        "operationId": "AuHoursLeaveRequest_Estimate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "leaveCategoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HourLeaveEstimateModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/location": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "List Employee Locations",
        "description": "Lists all the locations for an employee.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuLocation_GetEmployeeLocations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuLocationModel"
              },
              "xml": {
                "name": "AuLocationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuLocationModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/notes": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee Notes",
        "description": "Gets the notes for the specified employee.",
        "operationId": "Notes_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeNoteModel"
              },
              "xml": {
                "name": "EmployeeNoteModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<EmployeeNoteModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Set Employee Notes",
        "description": "Sets the notes for the specified employee.",
        "operationId": "Notes_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEmployeeNoteModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/openingbalances": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Opening Balances",
        "description": "Gets the opening balances for this employee.",
        "operationId": "AuOpeningBalances_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuOpeningBalancesModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Set Opening Balances",
        "description": "Sets the opening balances for this employee.",
        "operationId": "AuOpeningBalances_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuOpeningBalancesModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/payrate": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Pay Rates",
        "description": "Gets the pay rates for this employee.",
        "operationId": "AuEmployeePayRates_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuEmployeePayRateModel"
              },
              "xml": {
                "name": "AuEmployeePayRateModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<AuEmployeePayRateModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/payrateschedule": {
      "get": {
        "tags": [
          "EmployeePayRateSchedule"
        ],
        "summary": "List pay rate adjustment schedule",
        "description": "Lists pay rate adjustment schedule for this employee.",
        "operationId": "EmployeePayRateSchedule_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/PayRateScheduleModel"
              },
              "xml": {
                "name": "PayRateScheduleModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<PayRateScheduleModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeePayRateSchedule"
        ],
        "summary": "Create pay rate adjustment schedule record",
        "description": "Creates a new pay rate adjustment schedule record for the employee.",
        "operationId": "EmployeePayRateSchedule_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayRateScheduleModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRateScheduleModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/payrateschedule/{id}": {
      "put": {
        "tags": [
          "EmployeePayRateSchedule"
        ],
        "summary": "Update pay rate adjustment schedule record",
        "description": "Updates the employee's pay rate adjustment schedule record with the specified ID.",
        "operationId": "EmployeePayRateSchedule_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayRateScheduleModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRateScheduleModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeePayRateSchedule"
        ],
        "summary": "Delete pay rate adjustment schedule record",
        "description": "Deletes the employee's pay rate adjustment schedule record with the specified ID.",
        "operationId": "EmployeePayRateSchedule_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/payrateschedule/{recordId}": {
      "get": {
        "tags": [
          "EmployeePayRateSchedule"
        ],
        "summary": "Get pay rate adjustment schedule record by ID",
        "description": "Gets pay rate adjustment schedule record for this employee with the specified ID.",
        "operationId": "EmployeePayRateSchedule_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "recordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRateScheduleModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/payruntotals": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "List Pay Run Totals for Employee",
        "description": "Lists all the pay run totals for the employee with the specified ID.",
        "operationId": "EmployeePayRunTotal_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/PayRunTotalModel"
              },
              "xml": {
                "name": "PayRunTotalModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<PayRunTotalModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/qualification": {
      "get": {
        "tags": [
          "EmployeeQualifications"
        ],
        "summary": "Get Qualifications for Employee",
        "description": "Retrieves the qualification details for a single employee.",
        "operationId": "EmployeeQualification_GetQualifications",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeQualificationModel"
              },
              "xml": {
                "name": "EmployeeQualificationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IQueryable<EmployeeQualificationModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeQualifications"
        ],
        "summary": "Add/Update Employee Qualification",
        "description": "Adds or updates a qualification for an employee.",
        "operationId": "EmployeeQualification_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "qualification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeQualificationRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeQualifications"
        ],
        "summary": "Delete Employee Qualification",
        "description": "Deletes an employee qualification. Denotes that the employee is no longer qualified for the specified qualification.",
        "operationId": "EmployeeQualification_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/qualification/{id}": {
      "get": {
        "tags": [
          "EmployeeQualifications"
        ],
        "summary": "Get Qualification Details",
        "description": "Gets the details for the qualification with a specific ID.",
        "operationId": "EmployeeQualification_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeQualificationModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/qualification/{qualificationId}/document": {
      "get": {
        "tags": [
          "EmployeeQualifications"
        ],
        "summary": "List Documents for Employee Qualification",
        "description": "Lists all the documents associated with a specific employee qualification.",
        "operationId": "EmployeeQualificationDocument_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "qualificationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeQualificationDocumentModel"
              },
              "xml": {
                "name": "EmployeeQualificationDocumentModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<EmployeeQualificationDocumentModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeQualifications"
        ],
        "summary": "Create Employee Qualification Document",
        "description": "Uploads an employee qualification document. Note: the request should be a MIME multipart file upload request.",
        "operationId": "EmployeeQualificationDocument_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "qualificationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "visible",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false,
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeQualificationDocumentModel"
              },
              "xml": {
                "name": "EmployeeQualificationDocumentModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<EmployeeQualificationDocumentModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/qualification/{qualificationId}/document/{id}": {
      "get": {
        "tags": [
          "EmployeeQualifications"
        ],
        "summary": "Get Qualification Document by ID",
        "description": "Gets the details for a qualification document by ID.",
        "operationId": "EmployeeQualificationDocument_GetApiV2BusinessByBusinessIdEmployeeByEmployeeIdQualificationByQualificationIdDocumentById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "qualificationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeQualificationDocumentModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeQualifications"
        ],
        "summary": "Delete Employee Qualification Document",
        "description": "Deletes a specific employee qualification document.",
        "operationId": "EmployeeQualificationDocument_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "qualificationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/qualification/{qualificationId}/document/{id}/content": {
      "get": {
        "tags": [
          "EmployeeQualifications"
        ],
        "summary": "Get Qualification Document File",
        "description": "Gets the file for an employee qualification document by ID.",
        "operationId": "EmployeeQualificationDocument_Content",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "qualificationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentFile"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/selfmanagedsuperfund": {
      "get": {
        "tags": [
          "EmployeeSelfManagedSuperFund"
        ],
        "summary": "List Self Managed Super Funds",
        "description": "Lists all the self managed super funds for the employee.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuEmployeeSelfManagedSuperFund_GetFunds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/SelfManagedSuperFundModel"
              },
              "xml": {
                "name": "SelfManagedSuperFundModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<SelfManagedSuperFundModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeSelfManagedSuperFund"
        ],
        "summary": "Create Employee Self Managed Super Fund",
        "description": "Create a new self managed super fund for the employee. \r\nTo update existing self managed super funds, please use the PUT method.",
        "operationId": "AuEmployeeSelfManagedSuperFund_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fund",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SelfManagedSuperFundModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/selfmanagedsuperfund/{id}": {
      "get": {
        "tags": [
          "EmployeeSelfManagedSuperFund"
        ],
        "summary": "Get Employee Self Managed Super Fund by id",
        "description": "Gets the Self Managed Super Fund by the specified id.",
        "operationId": "AuEmployeeSelfManagedSuperFund_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SelfManagedSuperFundModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeSelfManagedSuperFund"
        ],
        "summary": "Update Employee Self Managed Super Fund",
        "description": "Updates the Self Managed Super Fund with the specified ID.",
        "operationId": "AuEmployeeSelfManagedSuperFund_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "fund",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SelfManagedSuperFundModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/shiftcondition": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee Shift Conditions",
        "description": "Lists all the shift conditions for this employee.\n\nThis operation supports OData queries.",
        "operationId": "AuEmployeeShiftCondition_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuWorkTypeModel"
              },
              "xml": {
                "name": "AuWorkTypeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IQueryable<AuWorkTypeModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/singlesignon": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Single Sign On",
        "description": "Request for SSO URL that provides authenticated access to KeyPay. See the guide on <a href=\"http://api.keypay.com.au/guides/SSO\">SSO Requests</a> for more details.",
        "operationId": "SingleSignOn_PostApiV2BusinessByBusinessIdEmployeeByEmployeeIdSinglesignon",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleSignOnRequestModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleSignOnResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/standardhours": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get standard hours for employee",
        "description": "Gets the standard hours for this employee.",
        "operationId": "EmployeeStandardHours_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StandardHoursModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Set standard hours for employee",
        "description": "Sets the standard hours for this employee.",
        "operationId": "EmployeeStandardHours_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StandardHoursModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StandardHoursModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/superadjustment": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "List Employee Super Adjustments",
        "description": "Lists all the recurring employee super adjustments for the employee",
        "operationId": "EmployeeRecurringSuperAdjustment_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeRecurringSuperAdjustmentModel"
              },
              "xml": {
                "name": "EmployeeRecurringSuperAdjustmentModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<EmployeeRecurringSuperAdjustmentModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Create Employee Super Adjustment",
        "description": "Creates a new recurring super adjustment for the employee.",
        "operationId": "EmployeeRecurringSuperAdjustment_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringSuperAdjustmentModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringSuperAdjustmentModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/superadjustment/{id}": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Get Employee Super Adjustment by ID",
        "description": "Gets the employee's recurring super adjustment with the specified ID.",
        "operationId": "EmployeeRecurringSuperAdjustment_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringSuperAdjustmentModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Update Employee Super Adjustment",
        "description": "Updates the employee's recurring super adjustment with the specified ID.",
        "operationId": "EmployeeRecurringSuperAdjustment_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringSuperAdjustmentModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringSuperAdjustmentModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Delete Employee Super Adjustment",
        "description": "Deletes the employee recurring super adjustment with the specified ID.",
        "operationId": "EmployeeRecurringSuperAdjustment_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/superfund": {
      "get": {
        "tags": [
          "EmployeeSuperFund"
        ],
        "summary": "List Super Funds",
        "description": "Lists all of the super funds for this employee.",
        "operationId": "AuEmployeeSuperFund_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/SuperFundModel"
              },
              "xml": {
                "name": "SuperFundModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<SuperFundModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeSuperFund"
        ],
        "summary": "Create Super Fund",
        "description": "Creates a new super fund for the employee.",
        "operationId": "AuEmployeeSuperFund_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveSuperFundModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveSuperFundResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/superfund/{id}": {
      "put": {
        "tags": [
          "EmployeeSuperFund"
        ],
        "summary": "Update Super Fund",
        "description": "Updates the employee's super fund with the specified ID.",
        "operationId": "AuEmployeeSuperFund_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveSuperFundModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveSuperFundResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/superfund/{superfundId}": {
      "delete": {
        "tags": [
          "EmployeeSuperFund"
        ],
        "summary": "Delete Super Fund",
        "description": "Deletes the employee's super fund with the specified ID.",
        "operationId": "AuEmployeeSuperFund_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "superfundId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveSuperFundResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/superfund/{superFundId}": {
      "get": {
        "tags": [
          "EmployeeSuperFund"
        ],
        "summary": "Get Super Fund by ID",
        "description": "Gets the super fund for this employee with the specified ID.",
        "operationId": "AuEmployeeSuperFund_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "superFundId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SuperFundModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/synctoqbo": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Sync Employee to QBO",
        "description": "Syncs an employee record to QBO.",
        "operationId": "AuEmployee_SyncEmployeeToQBO",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/taxadjustment": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "List Employee Tax Adjustments",
        "description": "Lists all the recurring employee tax adjustments for the employee",
        "operationId": "EmployeeRecurringTaxAdjustment_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeRecurringTaxAdjustmentModel"
              },
              "xml": {
                "name": "EmployeeRecurringTaxAdjustmentModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<EmployeeRecurringTaxAdjustmentModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Create Employee Tax Adjustment",
        "description": "Creates a new recurring tax adjustment for the employee.",
        "operationId": "EmployeeRecurringTaxAdjustment_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringTaxAdjustmentModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringTaxAdjustmentModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/taxadjustment/{id}": {
      "get": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Get Employee Tax Adjustment by ID",
        "description": "Gets the employee's recurring tax adjustment with the specified ID.",
        "operationId": "EmployeeRecurringTaxAdjustment_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringTaxAdjustmentModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Update Employee Tax Adjustment",
        "description": "Updates the employee's recurring tax adjustment with the specified ID.",
        "operationId": "EmployeeRecurringTaxAdjustment_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringTaxAdjustmentModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeRecurringTaxAdjustmentModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "Delete Employee Tax Adjustment",
        "description": "Deletes the employee recurring tax adjustment with the specified ID.",
        "operationId": "EmployeeRecurringTaxAdjustment_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/timesheet/shiftcosting": {
      "post": {
        "tags": [
          "EmploymentAgreement"
        ],
        "summary": "Get Shift Costings for Employee",
        "description": "Gets the shift costings for the specified employee.",
        "operationId": "EmploymentAgreement_EvaluateEmployee",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShiftCostingsRequestModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ShiftCostingsResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/timesheet/shiftperiods": {
      "post": {
        "tags": [
          "EmploymentAgreement"
        ],
        "summary": "Get Shift Periods for Employee",
        "description": "Gets the shift periods for the specified employee.",
        "operationId": "EmploymentAgreement_EmployeeShiftPeriods",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetShiftPeriodsModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ShiftPeriodModel"
              },
              "xml": {
                "name": "ShiftPeriodModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<ShiftPeriodModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/{employeeId}/worktype": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee Work Types",
        "description": "Lists all the work types for the employee.\n\nThis operation supports OData queries.",
        "operationId": "AuEmployeeWorkType_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuWorkTypeModel"
              },
              "xml": {
                "name": "AuWorkTypeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IQueryable<AuWorkTypeModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/activate/{employeeId}": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Activate Employee",
        "description": "Activates the employee with the specified ID.",
        "operationId": "EmployeeActivate_PostActivate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/deduction": {
      "post": {
        "tags": [
          "EmployeeRecurringTransactions"
        ],
        "summary": "List Employee Deductions By External Reference Id",
        "description": "Lists all the recurring employee deductions that have a matching external reference ID",
        "operationId": "AuEmployeeRecurringDeductionList_List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "externalReferenceIds",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "type": "string",
                "title": "String"
              },
              "type": "array",
              "title": "IList<String>"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuEmployeeRecurringDeductionModel"
              },
              "xml": {
                "name": "AuEmployeeRecurringDeductionModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuEmployeeRecurringDeductionModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/details": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "List basic details for employees",
        "description": "This endpoint returns a list of employees. The details are a subset of the 'unstructured' employee endpoint.\r\nThis data can be filtered much more efficiently though so if you only need the basic employee details, this endpoint is preferred.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "EmployeeDetails_GetEmployees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeDetailsModel"
              },
              "xml": {
                "name": "EmployeeDetailsModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<EmployeeDetailsModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/grantkioskaccess/{employeeId}": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Grant Kiosk Access",
        "description": "Grants kiosk access to the specified employee.",
        "operationId": "EmployeeKioskAccess_PostGrantKioskAccess",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/revokekioskaccess/{employeeId}": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Revoke Kiosk Access",
        "description": "Revokes kiosk access from the specified employee.",
        "operationId": "EmployeeKioskAccess_PostRevokeKioskAccess",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/unstructured": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "List Employees",
        "description": "This endpoint returns the unstructured employee details for all matching employees.\r\n<p>\r\nSee also: List basic details for employees (which is much more efficient if that is all the information that is required)\r\n</p>\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuEmployee_GetEmployees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "options",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuUnstructuredEmployeeModel"
              },
              "xml": {
                "name": "AuUnstructuredEmployeeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<AuUnstructuredEmployeeModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create or Update Employee",
        "description": "<p>If an ID is passed or an existing employee is matched (according to the matchType parameter), it will\r\n            be updated. Otherwise a new employee will be created. \r\n            </p>\r\n<p>\r\n            MatchType parameter values:\r\n            <list><li>Standard (default): attempts to match an existing employee - first, based on the tax file number,\r\n                    then based on first name + surname + date of birth + email address\r\n                </li><li>None: do not attempt to match an existing employee (create a new one)\r\n                </li></list></p>\r\n<p>\r\n            An employee may be created with a status of 'Incomplete' by specifying at least the minimum fields; firstName, surname, startDate, employmentType and taxFileNumber.<br />\r\n            For an employee record to be considered 'Complete' the following groups of data are required:\r\n              <list><li>Basic Details (Name, Start Date, Date of Birth and Address Details)</li><li>Tax File Declaration (TFN and Employment Type)</li><li>Pay Run Defaults (Default Pay Category, Pay Cycle and Location)</li><li>Locations (at least one)</li><li>Bank Account/s (at least one)</li><li>Super Fund/s (at least one)</li></list></p>\r\n<p>\r\n            If reporting dimensions are enabled for the business, add primary reporting dimension values using \"|\" as a separator between values.\r\n            </p>",
        "operationId": "AuEmployee_PostEmployee",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuUnstructuredEmployeeModel"
            }
          },
          {
            "name": "matchType",
            "in": "query",
            "required": false,
            "type": "string",
            "default": 1,
            "enum": [
              "None",
              "Standard"
            ],
            "title": "EmployeeMatchType"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeUpdateResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/unstructured/{employeeId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee By ID",
        "description": "Gets the employee with the specified ID.",
        "operationId": "AuEmployee_GetEmployeeById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuUnstructuredEmployeeModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Update Employee",
        "description": "Updates the employee with the specified ID.\r\nOnly fields to be updated need be specified. Fields left unspecified or null will not be changed.\r\nTo update a field provide the new value, to specifically clear a value use the string \"(clear)\" or \"0\".",
        "operationId": "AuEmployee_PutEmployee",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuUnstructuredEmployeeModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeUpdateResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/unstructured/externalid/{externalId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee By External ID",
        "description": "Gets the employee with the specified external ID.",
        "operationId": "AuEmployee_GetEmployeeByExternalId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuUnstructuredEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employee/unstructured/externalreferenceid/{externalReferenceId}/{source}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee By External Reference ID",
        "description": "Gets the employee with the specified external reference ID.",
        "operationId": "AuEmployee_GetByExternalReferenceId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "externalReferenceId",
            "in": "path",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "source",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "Saasu",
              "Xero",
              "MYOB",
              "Deputy",
              "EmployeeTimePunch",
              "ClickSuper",
              "IntegratedTimesheets",
              "FileImport",
              "FileExport",
              "QuickBooks",
              "Harmony",
              "AwardStore",
              "Attache",
              "IntegratedRostering",
              "ReckonAccounts",
              "API",
              "MicroPower",
              "RosterLive",
              "NetSuite",
              "Kounta",
              "TimeAndAttendanceKiosk",
              "DetailedFileExport",
              "JonasPremier",
              "WageEasy",
              "Maestrano",
              "WorkZone",
              "EmployeePortal",
              "RosterTemplate",
              "Onboarding",
              "Admin",
              "WorkZoneClockOnOff",
              "NetSuiteOneWorld",
              "Sage50",
              "PensionSync",
              "FinancialsOffice",
              "ProntoXI",
              "PayRunDefault",
              "StandardWorkDay",
              "Beam",
              "PayRunAutomation",
              "BureauDashboard",
              "Wiise",
              "QBOMigrationTool",
              "AbridgedFileImport",
              "QBOForcedMigration",
              "HmrcDpsUpdate",
              "HmrcDpsStudentLoan",
              "HmrcDpsPostGradLoan",
              "Sage50FileImporter",
              "FPSFileImporter",
              "OAuth",
              "FreshBooks",
              "StarFileImporter",
              "ActiveCampaign",
              "SummaryAndDetailsExport",
              "Telleroo",
              "EmployeeAdvancedHoursUpload",
              "BusinessCentral",
              "Paytron",
              "AccessFinancials",
              "Comma",
              "Zoho",
              "FlatFileEmployeeImporter",
              "Twinfield",
              "SageAccounting",
              "Square",
              "Quickfile",
              "Tide",
              "TideSso",
              "FreeAgent",
              "Akahu",
              "InstaPay",
              "Zepto",
              "Slack",
              "Caxton",
              "QuickbooksStandalonePayroll",
              "ImportEmployeeSelfSetup",
              "XeroIdentityPayrollSignUp",
              "XeroIdentityHrSignUp",
              "SageIntacct",
              "InstaPayDaily",
              "Salesforce",
              "AutomatedPublicHolidayNotWorked",
              "EmployeePayRatesUpload",
              "Zapier",
              "StapledSuperFund",
              "Swag"
            ],
            "title": "ExternalService"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuUnstructuredEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employeeexpensecategory": {
      "get": {
        "tags": [
          "EmployeeExpenseCategories"
        ],
        "summary": "List Employee Expense Categories",
        "description": "Lists all the employee expense categories for the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "EmployeeExpenseCategory_GetEmployeeExpenseCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeExpenseCategoryModel"
              },
              "xml": {
                "name": "EmployeeExpenseCategoryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<EmployeeExpenseCategoryModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeExpenseCategories"
        ],
        "summary": "Create Employee Expense Category",
        "description": "Creates an employee expense category for the business.",
        "operationId": "EmployeeExpenseCategory_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeExpenseCategory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeExpenseCategoryModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeExpenseCategoryModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employeeexpensecategory/{id}": {
      "get": {
        "tags": [
          "EmployeeExpenseCategories"
        ],
        "summary": "Get Employee Expense Category by ID",
        "description": "Gets the employee expense category with the specified ID.",
        "operationId": "EmployeeExpenseCategory_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeExpenseCategoryModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeExpenseCategories"
        ],
        "summary": "Update Employee Expense Category",
        "description": "Updates the employee expense category with the specified ID.",
        "operationId": "EmployeeExpenseCategory_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeExpenseCategory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeExpenseCategoryModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeExpenseCategories"
        ],
        "summary": "Delete Employee Expense Category",
        "description": "Deletes the employee expense category with the specified ID.",
        "operationId": "EmployeeExpenseCategory_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employeeexpensecategory/taxcodes": {
      "get": {
        "tags": [
          "EmployeeExpenseCategories"
        ],
        "summary": "Get Tax Codes",
        "description": "Gets a list of the business' tax codes.",
        "operationId": "EmployeeExpenseCategory_TaxCodes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalServiceTaxCode"
              },
              "xml": {
                "name": "JournalServiceTaxCode",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<JournalServiceTaxCode>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employeegroup": {
      "get": {
        "tags": [
          "EmployeeGroups"
        ],
        "summary": "List Employee Groups",
        "description": "Lists all the employee groups for the business.\n\nThis operation supports OData queries.",
        "operationId": "AuEmployeeGroup_GetGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuEmployeeGroupModel"
              },
              "xml": {
                "name": "AuEmployeeGroupModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IQueryable<AuEmployeeGroupModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeGroups"
        ],
        "summary": "Create Employee Group",
        "description": "Creates a new employee group for the business.",
        "operationId": "AuEmployeeGroup_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEmployeeGroupModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEmployeeGroupModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employeegroup/{id}": {
      "get": {
        "tags": [
          "EmployeeGroups"
        ],
        "summary": "Get Employee Group by ID",
        "description": "Gets the employee group with the specified ID.",
        "operationId": "AuEmployeeGroup_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuDetailedEmployeeGroupModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeGroups"
        ],
        "summary": "Update Employee Group",
        "description": "Updates the specified employee group.",
        "operationId": "AuEmployeeGroup_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEmployeeGroupModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEmployeeGroupModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeGroups"
        ],
        "summary": "Delete Employee Group",
        "description": "Deletes the employee group with the specified ID.",
        "operationId": "AuEmployeeGroup_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employeeonboarding/initiateselfservice": {
      "post": {
        "tags": [
          "EmployeeOnboarding"
        ],
        "summary": "Initiate Employee Self Setup",
        "description": "Initiate the Self Setup process for an Employee.\r\nIf the employee has an existing employee record, the id should be specified. If the Email and Mobile provided\r\nare not the same as those on the employee record, they will be updated.\r\nIf the employee does not yet have an employee record do not specify an id, one will be created with the\r\ndetails provided.",
        "operationId": "AuBusinessEmployeeOnboarding_InitiateSelfService",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuInitiateEmployeeOnboardingApiModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employeeportalsettings": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get Employee Portal Settings",
        "description": "Updates the business employee portal settings",
        "operationId": "AuEmployeePortalSettings_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEmployeePortalSettingsModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Update Employee Portal Settings",
        "description": "Updates the business employee portal settings",
        "operationId": "AuEmployeePortalSettings_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEmployeePortalSettingsModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEmployeePortalSettingsModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employerliabilitycategory": {
      "get": {
        "tags": [
          "EmployerLiabilityCategories"
        ],
        "summary": "List Employer Liability Categories",
        "description": "Lists all the employer liability categories for this business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "EmployerLiabilityCategory_GetEmployerLiabilityCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployerLiabilityCategoryModel"
              },
              "xml": {
                "name": "EmployerLiabilityCategoryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<EmployerLiabilityCategoryModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployerLiabilityCategories"
        ],
        "summary": "Create Employer Liability Category",
        "description": "Creates an employer liability category for the business.",
        "operationId": "EmployerLiabilityCategory_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employerLiabilityCategory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployerLiabilityCategoryModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employerliabilitycategory/{id}": {
      "get": {
        "tags": [
          "EmployerLiabilityCategories"
        ],
        "summary": "Get Employer Liability Category",
        "description": "Gets the employer liability category with the specified ID.",
        "operationId": "EmployerLiabilityCategory_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployerLiabilityCategoryModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployerLiabilityCategories"
        ],
        "summary": "Update Employer Liability Category",
        "description": "Updates the employer liability category with the specified ID.",
        "operationId": "EmployerLiabilityCategory_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employerLiabilityCategory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployerLiabilityCategoryModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "EmployerLiabilityCategories"
        ],
        "summary": "Delete Employer Liability Category",
        "description": "Deletes the employer liability category with the specified ID.",
        "operationId": "EmployerLiabilityCategory_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employingentity": {
      "get": {
        "tags": [
          "EmployingEntities"
        ],
        "summary": "List Employing Entities",
        "description": "Lists all the employing entities for the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuEmployingEntity_GetEmployingEntities",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuEmployingEntityModel"
              },
              "xml": {
                "name": "AuEmployingEntityModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuEmployingEntityModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployingEntities"
        ],
        "summary": "Create Employing Entity",
        "description": "Creates a new employing entity for the business.",
        "operationId": "AuEmployingEntity_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employingEntity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEmployingEntityModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEmployingEntityModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employingentity/{id}": {
      "get": {
        "tags": [
          "EmployingEntities"
        ],
        "summary": "Get Employing Entity By ID",
        "description": "Gets the employing entity with the specified ID.",
        "operationId": "AuEmployingEntity_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEmployingEntityModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployingEntities"
        ],
        "summary": "Update Employing Entity",
        "description": "Updates the employing entity with the specified ID.",
        "operationId": "AuEmployingEntity_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employingEntity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEmployingEntityModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEmployingEntityModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployingEntities"
        ],
        "summary": "Delete Employing Entity",
        "description": "Deletes the employing entity with the specified ID.",
        "operationId": "AuEmployingEntity_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employmentagreement": {
      "get": {
        "tags": [
          "EmploymentAgreement"
        ],
        "summary": "List Employment Agreements",
        "description": "Lists all of the employment agreements for the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuEmploymentAgreement_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/BasicEmploymentAgreementModel"
              },
              "xml": {
                "name": "BasicEmploymentAgreementModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IQueryable<BasicEmploymentAgreementModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employmentagreement/{id}": {
      "get": {
        "tags": [
          "EmploymentAgreement"
        ],
        "summary": "Get Employment Agreement by ID",
        "description": "Gets the employment agreement with the specified ID.",
        "operationId": "AuEmploymentAgreement_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmploymentAgreementModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employmentagreement/{id}/shiftcosting": {
      "post": {
        "tags": [
          "EmploymentAgreement"
        ],
        "summary": "Evaluate Shift Costings",
        "description": "Evaluates shift costings for the employment agreement with the specified ID.",
        "operationId": "AuEmploymentAgreement_Evaluate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShiftCostingsRequestModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ShiftCostingsResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employmentagreement/{id}/shiftcosting/bulk": {
      "post": {
        "tags": [
          "EmploymentAgreement"
        ],
        "summary": "Bulk Evaluate Shift Costings",
        "description": "Bulk Evaluates shift costings for the employment agreement with the specified ID.\r\nLimited to 100 entries per request",
        "operationId": "AuEmploymentAgreement_BulkEvaluate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "requests",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/ShiftCostingsRequestModel"
              },
              "xml": {
                "name": "ShiftCostingsRequestModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<ShiftCostingsRequestModel>"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ShiftCostingsResponseModel"
              },
              "xml": {
                "name": "ShiftCostingsResponseModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<ShiftCostingsResponseModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/employmentagreement/{id}/shiftperiods": {
      "post": {
        "tags": [
          "EmploymentAgreement"
        ],
        "summary": "Get Shift Periods",
        "description": "Gets all the shift periods for the employment agreement with the specified ID.",
        "operationId": "AuEmploymentAgreement_ShiftPeriods",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetShiftPeriodsModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ShiftPeriodModel"
              },
              "xml": {
                "name": "ShiftPeriodModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<ShiftPeriodModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/entitlements": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "List Entitlements",
        "description": "Lists all of the entitlements for the business.",
        "operationId": "Entitlements_GetEntitlements",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntitlementsModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/initialfinancialyear": {
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Change the tax year",
        "description": "Changes the initial tax year for the current business. This is the tax year that",
        "operationId": "BusinessChangeTaxYear_ChangeFinancialYear",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/Invoice": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Business Invoices",
        "description": "Get invoices for the specified Business.",
        "operationId": "Invoice_GetBusinessInvoices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "options.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "options.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/InvoiceModel"
              },
              "xml": {
                "name": "InvoiceModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<InvoiceModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/Invoice/{id}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Business Invoice By ID",
        "description": "Gets the Business invoice with the specified ID.",
        "operationId": "Invoice_GetBusinessInvoiceById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvoiceModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/Invoice/{id}/pdf": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Business Invoice PDF By ID",
        "description": "Gets the Business invoice with the specified ID.",
        "operationId": "Invoice_GetBusinessInvoicePdfById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/journal/{payRunId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Journal Details",
        "description": "Gets the journal details for this pay run.",
        "operationId": "AuJournal_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuJournalItemResponse"
              },
              "xml": {
                "name": "AuJournalItemResponse",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuJournalItemResponse>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk": {
      "get": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "List Kiosks",
        "description": "Lists all kiosks for the specified business.\n\nThis operation supports OData queries.",
        "operationId": "Kiosk_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/TimeAndAttendanceKioskModel"
              },
              "xml": {
                "name": "TimeAndAttendanceKioskModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IQueryable<TimeAndAttendanceKioskModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Create Kiosk",
        "description": "Creates a new kiosk for the business.",
        "operationId": "Kiosk_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kiosk",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeAndAttendanceKioskModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TimeAndAttendanceKioskModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{id}": {
      "get": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Get Kiosk by ID",
        "description": "Gets the kiosk with the specified ID.",
        "operationId": "Kiosk_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TimeAndAttendanceKioskModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Update Kiosk",
        "description": "Updates the kiosk with the specified ID.",
        "operationId": "Kiosk_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "kiosk",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeAndAttendanceKioskModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TimeAndAttendanceKioskModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Delete Kiosk",
        "description": "Deletes the kiosk with the specified ID.",
        "operationId": "Kiosk_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/addshift": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Add Complete Shift for Employee",
        "description": "Clocks in / out an employee for a complete shift.",
        "operationId": "GenericTimeAndAttendance_AddShift",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuAddShiftModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/changepin": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Change PIN",
        "description": "Changes the kiosk PIN for an employee, given their old PIN.",
        "operationId": "GenericTimeAndAttendance_ChangePin",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeKioskPinModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/checkid": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Check Employee",
        "description": "If the specified employee has kiosk access, returns details about the employee and their current shift.",
        "operationId": "GenericTimeAndAttendance_CheckId",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BasicKioskEmployeeModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/checkpin": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Verify Kiosk PIN",
        "description": "Verifies the employee's kiosk PIN. Returns error code 400 if the PIN is incorrect.",
        "operationId": "GenericTimeAndAttendance_CheckPin",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckKioskPinModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KioskEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/clockoff": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Clock Out Employee",
        "description": "Clocks out an employee from their existing shift.\r\nIf they are on a break, it will be ended automatically.",
        "operationId": "GenericTimeAndAttendance_ClockOff",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClockOffModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/clockon": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Clock In Employee",
        "description": "Clocks in an employee for a new shift.",
        "operationId": "GenericTimeAndAttendance_ClockOn",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuClockOnModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/discard": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Discard current shift",
        "description": "Discards the current shift for an employee.\r\nIf they are on a break, it will be ended automatically.",
        "operationId": "GenericTimeAndAttendance_DiscardShift",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClockOffModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/emailreset": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Send PIN Reset Email",
        "description": "Sends kiosk PIN reset instructions to an employee by email.",
        "operationId": "GenericTimeAndAttendance_EmailReset",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PinResetModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/endbreak": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "End Break",
        "description": "Ends the employee's current break.",
        "operationId": "GenericTimeAndAttendance_EndBreak",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndBreakModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/lookupdata/{employeeId}": {
      "get": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Get Employee Lookup Data",
        "description": "Gets relevant lookup data for an employee in relation to a kiosk.",
        "operationId": "AuTimeAndAttendance_GetLookupData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuTimeAndAttendanceLookupDataModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/shift/{shiftId}/notes": {
      "get": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Get Shift Notes",
        "description": "Gets all the notes for a specific shift.",
        "operationId": "GenericTimeAndAttendance_GetShiftNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model.isAdminInitiated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "model.type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Shift",
              "ClockOn",
              "ClockOff"
            ],
            "title": "Nullable<TimeAttendanceShiftNoteType>"
          },
          {
            "name": "model.visibility",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Hidden",
              "Visible"
            ],
            "title": "Nullable<TimeAttendanceShiftNoteVisibility>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Add Note to Shift",
        "description": "Adds a note to an existing shift.",
        "operationId": "GenericTimeAndAttendance_AddNote",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddNoteModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/shift/{shiftId}/notes/{noteId}": {
      "delete": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Delete Note from Shift",
        "description": "Deletes a note from an existing shift.",
        "operationId": "GenericTimeAndAttendance_DeleteNote",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/shift/{shiftId}/notes/read-state": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Mark Shift Notes Read",
        "description": "Marks some shift notes as either read or unread.",
        "operationId": "GenericTimeAndAttendance_MarkNotesRead",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarkNotesReadViewModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/smsreset": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Send PIN Reset SMS",
        "description": "Sends kiosk PIN reset instructions to an employee by SMS. Note that the current business must have SMS notifications enabled.",
        "operationId": "GenericTimeAndAttendance_SmsReset",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PinResetModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/staff": {
      "get": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "List Kiosk Staff",
        "description": "Lists all the staff associated with a kiosk and their current shifts.",
        "operationId": "GenericTimeAndAttendance_GetStaff",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "description": "The ID of the kiosk",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "restrictCurrentShiftsToCurrentKioskLocation",
            "in": "query",
            "description": "The default value is set to false which will return current shifts for employees against this particular location.\r\nSetting the value to true will return employees shift details with access to this location.",
            "required": false,
            "type": "boolean",
            "default": false,
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/BasicKioskEmployeeModel"
              },
              "xml": {
                "name": "BasicKioskEmployeeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<BasicKioskEmployeeModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Add an Employee",
        "description": "Quickly add an employee with minimal details and kiosk enabled.",
        "operationId": "GenericTimeAndAttendance_PostStaff",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KioskCreateEmployeeModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasicKioskEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/{kioskId}/startbreak": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Start Break",
        "description": "Starts a break for an employee who is clocked on for a shift.",
        "operationId": "GenericTimeAndAttendance_StartBreak",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartBreakModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/hasaccess/{employeeId}": {
      "get": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Employee Has Access",
        "description": "Check if an employee has access to a kiosk.",
        "operationId": "GenericTimeAndAttendance_GetHasAccess",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/kiosk/shifts": {
      "post": {
        "tags": [
          "TimeAndAttendance"
        ],
        "summary": "Shifts",
        "description": "Gets shifts based on certain optional criteria.",
        "operationId": "AuTimeAndAttendance_Shifts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetShiftsModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuTimeAndAttendanceShiftModel"
              },
              "xml": {
                "name": "AuTimeAndAttendanceShiftModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<AuTimeAndAttendanceShiftModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/leaveallowances": {
      "get": {
        "tags": [
          "LeaveAllowance"
        ],
        "summary": "Get Leave Allowances for All Employees",
        "description": "Gets the leave allowances for all employees in the business",
        "operationId": "AuLeaveAllowances_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "items": {
                  "$ref": "#/definitions/AuLeaveAllowanceModel"
                },
                "xml": {
                  "name": "AuLeaveAllowanceModel",
                  "wrapped": true
                },
                "type": "array",
                "title": "IList<AuLeaveAllowanceModel>"
              },
              "type": "object",
              "title": "Dictionary<String,IList`1>"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LeaveAllowance"
        ],
        "summary": "Set Leave Allowances",
        "description": "Sets the leave allowances for the specified employees (dictionary keyed by employee ID).",
        "operationId": "AuLeaveAllowances_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuLeaveAllowancesRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuLeaveAllowanceModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/leaveallowances/{employeeId}": {
      "get": {
        "tags": [
          "LeaveAllowance"
        ],
        "summary": "Get Leave Allowances for Employee",
        "description": "Get leave Allowances for a single employee",
        "operationId": "AuLeaveAllowances_GetApiV2BusinessByBusinessIdLeaveallowancesByEmployeeId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "items": {
                  "$ref": "#/definitions/AuLeaveAllowanceModel"
                },
                "xml": {
                  "name": "AuLeaveAllowanceModel",
                  "wrapped": true
                },
                "type": "array",
                "title": "IList<AuLeaveAllowanceModel>"
              },
              "type": "object",
              "title": "Dictionary<String,IList`1>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/leaveallowancetemplate": {
      "get": {
        "tags": [
          "LeaveAllowance"
        ],
        "summary": "List Leave Allowance Templates",
        "description": "Lists all the leave allowance templates for this business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuLeaveAllowanceTemplate_GetLeaveAllowanceTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuLeaveAllowanceTemplateModel"
              },
              "xml": {
                "name": "AuLeaveAllowanceTemplateModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuLeaveAllowanceTemplateModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "LeaveAllowance"
        ],
        "summary": "Create Leave Allowance Template",
        "description": "Creates a new leave allowance template for the business.",
        "operationId": "AuLeaveAllowanceTemplate_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "leaveAllowanceTemplate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuLeaveAllowanceTemplateModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuLeaveAllowanceTemplateModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/leaveallowancetemplate/{id}": {
      "get": {
        "tags": [
          "LeaveAllowance"
        ],
        "summary": "Get Leave Allowance Template by ID",
        "description": "Gets the details for the leave allowance template with the specified ID.",
        "operationId": "AuLeaveAllowanceTemplate_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuLeaveAllowanceTemplateModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LeaveAllowance"
        ],
        "summary": "Update Leave Allowance Template",
        "description": "Updates the leave allowance template with the specified ID.",
        "operationId": "AuLeaveAllowanceTemplate_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveAllowanceTemplate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuLeaveAllowanceTemplateModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuLeaveAllowanceTemplateModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LeaveAllowance"
        ],
        "summary": "Delete Leave Allowance Template",
        "description": "Deletes the leave allowance template with the specified ID.",
        "operationId": "AuLeaveAllowanceTemplate_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/leaveallowancetemplate/reapply/{id}": {
      "post": {
        "tags": [
          "LeaveAllowance"
        ],
        "summary": "Reapply Leave Allowance Template",
        "description": "Reapply the leave allowance template with the specified ID.",
        "operationId": "AuLeaveAllowanceTemplate_ReapplyLeaveAllowanceTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/leavecategory": {
      "get": {
        "tags": [
          "LeaveCategories"
        ],
        "summary": "List Leave Categories",
        "description": "Lists all of the leave categories for the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuLeaveCategory_GetLeaveCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuLeaveCategoryModel"
              },
              "xml": {
                "name": "AuLeaveCategoryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuLeaveCategoryModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "LeaveCategories"
        ],
        "summary": "Create Leave Category",
        "description": "Creates a new leave category for the business.",
        "operationId": "AuLeaveCategory_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "leaveCategory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuLeaveCategoryModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuLeaveCategoryModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/leavecategory/{id}": {
      "get": {
        "tags": [
          "LeaveCategories"
        ],
        "summary": "Get Leave Category by ID",
        "description": "Gets the leave category with the specified ID.",
        "operationId": "AuLeaveCategory_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuLeaveCategoryModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LeaveCategories"
        ],
        "summary": "Update Leave Category",
        "description": "Updates the leave category with the specified ID.",
        "operationId": "AuLeaveCategory_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveCategory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuLeaveCategoryModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuLeaveCategoryModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LeaveCategories"
        ],
        "summary": "Delete Leave Category",
        "description": "Deletes the leave category with the specified ID.",
        "operationId": "AuLeaveCategory_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/leaverequest": {
      "get": {
        "tags": [
          "LeaveRequests"
        ],
        "summary": "List Leave Requests",
        "description": "Lists all the leave requests for the business.",
        "operationId": "AuBusinessHoursLeaveRequest_ListLeaveRequests",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "filter.status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Approved",
              "Pending",
              "Rejected",
              "Cancelled"
            ],
            "title": "Nullable<LeaveRequestStatus>"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "filter.leaveCategoryId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.groupBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Employee",
              "LeaveType"
            ],
            "title": "LeaveRequestGroupBy"
          },
          {
            "name": "filter.restrictOverlappingLeave",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/HourLeaveRequestResponseModel"
              },
              "xml": {
                "name": "HourLeaveRequestResponseModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<HourLeaveRequestResponseModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/leavesettings": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get the leave settings for the business",
        "operationId": "AuBusinessLeaveSettings_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Business"
        ],
        "summary": "Update the leave settings for the business",
        "operationId": "AuBusinessLeaveSettings_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuBusinessLeaveSettingsModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/location": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "List Business Locations",
        "description": "Lists all the locations for a business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuLocation_GetLocations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuLocationModel"
              },
              "xml": {
                "name": "AuLocationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuLocationModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create Location",
        "description": "Creates a business location.",
        "operationId": "AuLocation_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuLocationModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuLocationModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/location/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get Location By Id",
        "description": "Retrieves the details of the location with the specified ID.",
        "operationId": "AuLocation_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuSingleLocationModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Location"
        ],
        "summary": "Update Location",
        "description": "Updates the business location with the specified ID.",
        "operationId": "AuLocation_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "location",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuLocationModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Delete Location",
        "description": "Deletes the location with the specified ID.",
        "operationId": "AuLocation_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/lookupdata/timezones": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "List Time Zone Types",
        "description": "Lists all of the time zone types.",
        "operationId": "LookupData_GetApiV2BusinessByBusinessIdLookupdataTimezones",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/NameIdPair"
              },
              "xml": {
                "name": "NameIdPair",
                "wrapped": true
              },
              "type": "array",
              "title": "List<NameIdPair>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/document/download/{documentId}": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Download Document",
        "description": "Downloads the document with the specified ID so long as it is visible to the manager.",
        "operationId": "ManagerDocument_Download",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/expense": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Create expense request",
        "description": "Creates an expense request for the employee",
        "operationId": "ManagerEmployeeExpense_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "expenseRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpenseRequestEditModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerExpenseRequestModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/expense/{expenseRequestId}": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get expense request",
        "description": "Gets the expense request  with the specified ID.",
        "operationId": "ManagerEmployeeExpense_GetApiV2BusinessByBusinessIdManagerByEmployeeIdExpenseByExpenseRequestId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerExpenseRequestModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Manager"
        ],
        "summary": "Edit Expense Request",
        "description": "Edits the Expense Request with the specified ID.",
        "operationId": "ManagerEmployeeExpense_Edit",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "expenseRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpenseRequestEditModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerExpenseRequestModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manager"
        ],
        "summary": "Delete Expense Request",
        "description": "Deletes the Expense Request with the specified ID.",
        "operationId": "ManagerEmployeeExpense_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/expense/{expenseRequestId}/approve": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Approve Expense Request",
        "description": "Approves the Expense Request with the specified ID.",
        "operationId": "ManagerEmployeeExpense_Approve",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerExpenseRequestModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/expense/{expenseRequestId}/attachment": {
      "put": {
        "tags": [
          "Manager"
        ],
        "summary": "Upload Attachment to Expense Request",
        "description": "Uploads an attachment to the expense request with the specified ID.\r\nThe request should be a MIME multipart file upload request.",
        "operationId": "ManagerEmployeeExpense_UploadAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/expense/{expenseRequestId}/decline": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Decline Expense Request",
        "description": "Declines the Expense Request with the specified ID.",
        "operationId": "ManagerEmployeeExpense_Decline",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclineReason"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerExpenseRequestModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/expense/reference": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get expenses reference data",
        "description": "Gets the Tax Codes, Expense Categories, and Locations for this Employee.",
        "operationId": "ManagerEmployeeExpense_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExpenseReferenceData"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/leaverequest": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Create Leave Request",
        "description": "Creates a new leave request.",
        "operationId": "ManagerEmployeeLeaveRequest_CreateLeave",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveApplication",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerLeaveApplicationModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerLeaveRequestModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/leaverequest/{leaveRequestId}": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Leave Request by ID",
        "description": "Gets the details for a leave request with the specified ID.",
        "operationId": "ManagerEmployeeLeaveRequest_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerLeaveRequestModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Update Leave Request",
        "description": "Updates the leave request with the specified ID.",
        "operationId": "ManagerEmployeeLeaveRequest_UpdateLeave",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveApplication",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerLeaveApplicationModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerLeaveRequestModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manager"
        ],
        "summary": "Delete Leave Request",
        "description": "Deletes the leave request with the specified ID.",
        "operationId": "ManagerEmployeeLeaveRequest_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerLeaveRequestModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/leaverequest/{leaveRequestId}/approve": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Approve Leave Request",
        "description": "Approves the leave request with the specified ID.",
        "operationId": "ManagerEmployeeLeaveRequest_Approve",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerLeaveRequestModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/leaverequest/{leaveRequestId}/attachment": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Leave Request Attachment",
        "description": "Gets the file for an employee leave request by ID.",
        "operationId": "ManagerEmployeeLeaveRequest_Attachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentFile"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/leaverequest/{leaveRequestId}/decline": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Decline Leave Request",
        "description": "Declines the leave request with the specified ID.",
        "operationId": "ManagerEmployeeLeaveRequest_Decline",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "declineReason",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclineReason"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerLeaveRequestModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/leaverequest/{leaveRequestId}/overlapping": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Overlapping Leave Requests",
        "description": "Lists all the overlapping leave requests for the given date range.",
        "operationId": "ManagerEmployeeLeaveRequest_OverlappingLeave",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ManagerLeaveRequestModel"
              },
              "xml": {
                "name": "ManagerLeaveRequestModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<ManagerLeaveRequestModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/leaverequest/balances": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Leave Balances",
        "description": "Gets the leave balances for the employee.",
        "operationId": "ManagerEmployeeLeaveRequest_Balances",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "asAtDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/LeaveBalanceModel"
              },
              "xml": {
                "name": "LeaveBalanceModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<LeaveBalanceModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/leaverequest/categories": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Leave Categories",
        "description": "Lists all of the leave categories for this employee.",
        "operationId": "ManagerEmployeeLeaveRequest_GetLeaveCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ManagerLeaveCategoryModel"
              },
              "xml": {
                "name": "ManagerLeaveCategoryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<ManagerLeaveCategoryModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/leaverequest/estimate": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Estimate Leave Hours",
        "description": "Estimates the number of hours of leave required based on date and leave category.",
        "operationId": "ManagerEmployeeLeaveRequest_Estimate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "leaveCategoryId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerLeaveEstimate"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/rostershift/unavailability": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Create Unavailability",
        "description": "Create an unavailability for an employee.",
        "operationId": "ManagerEmployeeRosterShift_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnavailabilityEditModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerUnavailabilityModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/rostershift/unavailability/{unavailabilityId}": {
      "put": {
        "tags": [
          "Manager"
        ],
        "summary": "Update Unavailability",
        "description": "Updates the unavailability with the specified ID.",
        "operationId": "ManagerEmployeeRosterShift_Save",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "unavailabilityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnavailabilityEditModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerUnavailabilityModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manager"
        ],
        "summary": "Delete Unavailability",
        "description": "Deletes the unavailability with the specified ID.",
        "operationId": "ManagerEmployeeRosterShift_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "unavailabilityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/timesheet/{timesheetId}": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get timesheet",
        "description": "Gets the timesheet with the specified ID.",
        "operationId": "AuManagerEmployeeTimesheet_GetApiV2BusinessByBusinessIdManagerByEmployeeIdTimesheetByTimesheetId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "timesheetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerTimesheetLineModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Edit Timesheet",
        "description": "Edits the timesheet with the specified ID.\r\nclassificationId field left unspecified or null will not be changed.\r\nTo update classificationId field provide the new value, to specifically clear a value use \"0\".",
        "operationId": "AuManagerEmployeeTimesheet_Edit",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "timesheetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "timesheet",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerTimesheetSubmitModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerTimesheetLineModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manager"
        ],
        "summary": "Delete Timesheet",
        "description": "Deletes the timesheet with the specified ID.",
        "operationId": "AuManagerEmployeeTimesheet_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "timesheetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/timesheet/{timesheetId}/approve": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Approve Timesheet",
        "description": "Approves the timesheet with the specified ID.",
        "operationId": "AuManagerEmployeeTimesheet_Approve",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "timesheetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerTimesheetLineModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/timesheet/{timesheetId}/reject": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Reject Timesheet",
        "description": "Rejects the timesheet with the specified ID.",
        "operationId": "AuManagerEmployeeTimesheet_Reject",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "timesheetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerTimesheetLineModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/{employeeId}/timesheet/reference": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get timesheet reference data",
        "description": "Gets the Work Types, Shift Conditions, Locations, Classifications, and Reporting Dimension Values (if enabled) for this Employee.",
        "operationId": "AuManagerEmployeeTimesheet_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuTimesheetReferenceData"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/dashboard": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Dashboard",
        "description": "Gets a set of useful information that the manager may need.",
        "operationId": "Manager_GetDashboard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagerDashboardModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/employee/{employeeId}/image": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Employee Profile Image",
        "description": "Returns the file content for the employee's current profile image.",
        "operationId": "ManagerEmployeeProfileImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Set Employee Profile Image",
        "description": "Uploads a new employee profile image. The request should be a MIME multipart file upload request.",
        "operationId": "ManagerEmployeeProfileImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProfileImageMetadata"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manager"
        ],
        "summary": "Delete Employee Profile Image",
        "description": "Delete's the employee's profile image.",
        "operationId": "ManagerEmployeeProfileImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/employee/{employeeId}/location": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Employee Locations",
        "description": "Lists all the locations for an employee that are available to the manager.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "ManagerLocation_GetApiV2BusinessByBusinessIdManagerEmployeeByEmployeeIdLocation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/LocationModel"
              },
              "xml": {
                "name": "LocationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<LocationModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/employeeonboarding/initiateselfservice": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Initiate Employee Self Setup",
        "description": "Initiate the Self Setup process for an Employee.\r\nIf the employee has an existing employee record, the id should be specified. If the Email and Mobile provided\r\nare not the same as those on the employee record, they will be updated.\r\nIf the employee does not yet have an employee record do not specify an id, one will be created with the\r\ndetails provided.",
        "operationId": "AuManagerEmployeeOnboarding_ManagerInitiateSelfService",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuInitiateEmployeeOnboardingApiModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/employees": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get List of Employees",
        "description": "Lists all employees the manager can access.",
        "operationId": "Manager_GetEmployees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeDetailsModel"
              },
              "xml": {
                "name": "EmployeeDetailsModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<EmployeeDetailsModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/expense": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Business Expense Requests",
        "description": "Retrieves expense request for the specified business which manager can access",
        "operationId": "ManagerExpense_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Pending",
              "Approved",
              "Cancelled",
              "Declined",
              "Processed"
            ],
            "title": "Nullable<EmployeeExpenseRequestStatus>"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "filter.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.expenseCategoryId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.groupBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Employee",
              "ExpenseCategory"
            ],
            "title": "Nullable<EmployeeExpenseRequestGroupBy>"
          },
          {
            "name": "filter.currentPage",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "filter.pageSize",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultModelOfManagerExpenseRequestModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/expense/categories": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Expense Categories",
        "description": "Lists all of the expense categories",
        "operationId": "ManagerExpense_GetExpenseCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ExpenseCategoryResponseModel"
              },
              "xml": {
                "name": "ExpenseCategoryResponseModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<ExpenseCategoryResponseModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/expense/employees": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Expense Request Employees",
        "description": "Lists all of the employees this manager has approve expense request permissions on.",
        "operationId": "ManagerExpense_GetExpensesEmployees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ManagerExpenseEmployeeModel"
              },
              "xml": {
                "name": "ManagerExpenseEmployeeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<ManagerExpenseEmployeeModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/expense/locations": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Expense Request Locations",
        "description": "Lists all locations of employees this manager has approve expense request permissions on.",
        "operationId": "ManagerExpense_GetLocations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/LocationModel"
              },
              "xml": {
                "name": "LocationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<LocationModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/expense/taxcodes": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Tax Codes",
        "description": "Lists all of the tax codes",
        "operationId": "ManagerExpense_GetTaxCodes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ExpenseTaxCode"
              },
              "xml": {
                "name": "ExpenseTaxCode",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<ExpenseTaxCode>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Kiosks",
        "description": "Returns all kiosks that the user has access to for this business",
        "operationId": "ManagerKiosk_Kiosks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/TimeAndAttendanceKioskModel"
              },
              "xml": {
                "name": "TimeAndAttendanceKioskModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IQueryable<TimeAndAttendanceKioskModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{id}": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Kiosk by ID",
        "description": "Gets the kiosk with the specified ID.",
        "operationId": "ManagerKiosk_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TimeAndAttendanceKioskModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/changepin": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Change PIN",
        "description": "Changes the kiosk PIN for an employee, given their old PIN.",
        "operationId": "GenericManagerTimeAndAttendance_ChangePin",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeKioskPinModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KioskEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/checkid": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Check Employee",
        "description": "If the specified employee has kiosk access, returns details about the employee and their current shift.",
        "operationId": "GenericManagerTimeAndAttendance_CheckId",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckKioskEmployeeIdModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasicKioskEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/checkpin": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Verify Kiosk PIN",
        "description": "Verifies the employee's kiosk PIN. Returns error code 400 if the PIN is incorrect.",
        "operationId": "GenericManagerTimeAndAttendance_CheckPin",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckKioskPinModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KioskEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/clockoff": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Clock Out Employee",
        "description": "Clocks out an employee from their existing shift.\r\nIf they are on a break, it will be ended automatically.",
        "operationId": "GenericManagerTimeAndAttendance_ClockOff",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClockOffModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KioskEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/clockon": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Clock In Employee",
        "description": "Clocks in an employee for a new shift.",
        "operationId": "GenericManagerTimeAndAttendance_ClockOn",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClockOnModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KioskEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/discard": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Discard current shift",
        "description": "Discards the current shift for an employee.\r\nIf they are on a break, it will be ended automatically.",
        "operationId": "GenericManagerTimeAndAttendance_DiscardShift",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClockOffModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KioskEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/emailreset": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Send PIN Reset Email",
        "description": "Sends kiosk PIN reset instructions to an employee by email.",
        "operationId": "GenericManagerTimeAndAttendance_EmailReset",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PinResetModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/endbreak": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "End Break",
        "description": "Ends the employee's current break.",
        "operationId": "GenericManagerTimeAndAttendance_EndBreak",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndBreakModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KioskEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/lookupdata/{employeeId}": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Employee Lookup Data",
        "description": "Gets relevant lookup data for an employee in relation to a kiosk.",
        "operationId": "AuManagerTimeAndAttendance_GetLookupData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuTimeAndAttendanceLookupDataModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/shift/{shiftId}/notes": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Shift Notes",
        "description": "Gets all the notes for a specific shift.",
        "operationId": "GenericManagerTimeAndAttendance_GetShiftNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model.isAdminInitiated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "model.type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Shift",
              "ClockOn",
              "ClockOff"
            ],
            "title": "Nullable<TimeAttendanceShiftNoteType>"
          },
          {
            "name": "model.visibility",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Hidden",
              "Visible"
            ],
            "title": "Nullable<TimeAttendanceShiftNoteVisibility>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ShiftNoteViewModel"
              },
              "xml": {
                "name": "ShiftNoteViewModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<ShiftNoteViewModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Add Note to Shift",
        "description": "Adds a note to an existing shift.",
        "operationId": "GenericManagerTimeAndAttendance_AddNote",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddNoteModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ShiftNoteViewModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/shift/{shiftId}/notes/{noteId}": {
      "delete": {
        "tags": [
          "Manager"
        ],
        "summary": "Delete Note from Shift",
        "description": "Deletes a note from an existing shift.",
        "operationId": "GenericManagerTimeAndAttendance_DeleteNote",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/shift/{shiftId}/notes/read-state": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Mark Shift Notes Read",
        "description": "Marks some shift notes as either read or unread.",
        "operationId": "GenericManagerTimeAndAttendance_MarkNotesRead",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarkNotesReadViewModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/smsreset": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Send PIN Reset SMS",
        "description": "Sends kiosk PIN reset instructions to an employee by SMS. Note that the current business must have SMS notifications enabled.",
        "operationId": "GenericManagerTimeAndAttendance_SmsReset",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PinResetModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/staff": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Kiosk Staff",
        "description": "Lists all the staff associated with a kiosk and their current shifts.",
        "operationId": "GenericManagerTimeAndAttendance_GetStaff",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "description": "The ID of the kiosk",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "restrictCurrentShiftsToCurrentKioskLocation",
            "in": "query",
            "description": "The default value is set to false which will return current shifts for employees against this particular location.\r\nSetting the value to true will return employees shift details with access to this location.",
            "required": false,
            "type": "boolean",
            "default": false,
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/BasicKioskEmployeeModel"
              },
              "xml": {
                "name": "BasicKioskEmployeeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<BasicKioskEmployeeModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Add an Employee",
        "description": "Quickly add an employee with minimal details and kiosk enabled. If the employee already exists, the kiosk will be enabled for that employee.",
        "operationId": "GenericManagerTimeAndAttendance_PostStaff",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KioskCreateEmployeeModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/{kioskId}/startbreak": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Start Break",
        "description": "Starts a break for an employee who is clocked on for a shift.",
        "operationId": "GenericManagerTimeAndAttendance_StartBreak",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kioskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartBreakModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KioskEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/shifts": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Shifts",
        "description": "Gets shifts based on certain optional criteria.",
        "operationId": "AuManagerTimeAndAttendance_Shifts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetShiftsModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuTimeAndAttendanceShiftModel"
              },
              "xml": {
                "name": "AuTimeAndAttendanceShiftModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<AuTimeAndAttendanceShiftModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/timesheet": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Business Timesheets",
        "description": "Retrieves all timesheets that the manager has access to for the specified business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "ManagerKiosk_GetApiV2BusinessByBusinessIdManagerKioskTimesheet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/TimesheetLineModel"
              },
              "xml": {
                "name": "TimesheetLineModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<TimesheetLineModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Create kiosk timesheet line",
        "description": "Create an individual timesheet line\r\nIMPORTANT NOTICE: If units are specified the start and end time will be changed to midnight",
        "operationId": "AuManagerKiosk_PostIndividual",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/timesheet/{timesheetLineId}": {
      "put": {
        "tags": [
          "Manager"
        ],
        "summary": "Update kiosk timesheet line",
        "description": "Update an individual timesheet line\r\nIMPORTANT NOTICE: If units are specified the start and end time will be changed to midnight",
        "operationId": "AuManagerKiosk_PutIndividual",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timesheetLineId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/kiosk/timesheetcomments/{timesheetLineId}": {
      "put": {
        "tags": [
          "Manager"
        ],
        "summary": "Update comments in a timesheet",
        "description": "Update an individual timesheet line with comments",
        "operationId": "AuManagerKiosk_PutIndividualComments",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimesheetLineCommentsModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "timesheetLineId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/leaverequest": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Leave Requests",
        "description": "Lists all the leave requests for this manager.",
        "operationId": "ManagerLeaveRequest_ListLeaveRequests",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Approved",
              "Pending",
              "Rejected",
              "Cancelled"
            ],
            "title": "Nullable<LeaveRequestStatus>"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "filter.leaveCategoryId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.groupBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Employee",
              "LeaveType"
            ],
            "title": "LeaveRequestGroupBy"
          },
          {
            "name": "filter.restrictOverlappingLeave",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ManagerLeaveRequestModel"
              },
              "xml": {
                "name": "ManagerLeaveRequestModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<ManagerLeaveRequestModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/leaverequest/categories": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Leave Categories",
        "description": "Lists all of the leave categories for this business.",
        "operationId": "ManagerLeaveRequest_GetLeaveCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ManagerLeaveCategoryModel"
              },
              "xml": {
                "name": "ManagerLeaveCategoryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<ManagerLeaveCategoryModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/leaverequest/employees": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Leave Employees",
        "description": "Lists all of the employees this manager has leave permissions on.",
        "operationId": "ManagerLeaveRequest_GetLeaveEmployees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ManagerLeaveEmployeeModel"
              },
              "xml": {
                "name": "ManagerLeaveEmployeeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<ManagerLeaveEmployeeModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/leaverequest/locations": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Leave Locations",
        "description": "Lists all locations of employees this manager has leave permissions on.",
        "operationId": "ManagerLeaveRequest_GetLocations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/LocationModel"
              },
              "xml": {
                "name": "LocationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<LocationModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/leaverequest/overlapping": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Overlapping Leave Requests",
        "description": "Lists all the overlapping leave requests for the given date range.",
        "operationId": "ManagerLeaveRequest_OverlappingLeave",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ManagerLeaveRequestModel"
              },
              "xml": {
                "name": "ManagerLeaveRequestModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<ManagerLeaveRequestModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/location": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Employee Locations",
        "description": "Lists all the locations for an employee that are available to the manager.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "ManagerLocation_GetLocations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/LocationModel"
              },
              "xml": {
                "name": "LocationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<LocationModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/locations": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get List of Locations",
        "description": "Lists all locations the manager can access.",
        "operationId": "Manager_GetLocations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/LocationModel"
              },
              "xml": {
                "name": "LocationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<LocationModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/rostershift": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Roster Shifts",
        "description": "Gets roster shifts, optionally filtered by a number of parameters. Query parameters 'fromDate' and 'toDate' are required.\r\nNOTE: By default, only shifts with no role assigned are returned. To return shifts with roles, either specify some SelectedRoles,\r\nor specify SelectAllRoles = true.",
        "operationId": "AuManagerRosterShift_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "filter.shiftStatus",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "Published",
              "Unpublished",
              "Accepted"
            ],
            "title": "RosterShiftStatus"
          },
          {
            "name": "filter.shiftStatuses",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "All",
                "Published",
                "Unpublished",
                "Accepted"
              ],
              "title": "RosterShiftStatus"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<RosterShiftStatus>"
          },
          {
            "name": "filter.selectedLocations",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "title": "String"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<String>"
          },
          {
            "name": "filter.selectedEmployees",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "title": "String"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<String>"
          },
          {
            "name": "filter.selectedRoles",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "title": "String"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<String>"
          },
          {
            "name": "filter.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.employeeGroupId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.unassignedShiftsOnly",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "filter.selectAllRoles",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "filter.excludeShiftsOverlappingFromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "filter.pageSize",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.currentPage",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.includeWarnings",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuRosterShiftGenerateTimesheetModel"
              },
              "xml": {
                "name": "AuRosterShiftGenerateTimesheetModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<AuRosterShiftGenerateTimesheetModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Create roster shift",
        "description": "Create or update an individual roster shift",
        "operationId": "AuManagerRosterShift_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "shiftModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RosterShiftEditModel"
            }
          },
          {
            "name": "publish",
            "in": "query",
            "required": true,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/rostershift/{employeeId}/matchingclockoff": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Find Matching Clock Off Roster Shift",
        "description": "If a roster shift exists that could match for this employee to clock off at this time\r\ngiven kiosk settings for shift matching, returns that shift.\r\nOtherwise, the Shift result will be null.\r\nNote that if the time matches a shift exactly, the Shift result will also be null.",
        "operationId": "AuManagerRosterShift_MatchingClockOffRosterShift",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "kioskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "dateUtc",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuRosterShiftMatchingResultModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/rostershift/{employeeId}/matchingclockon": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Find Matching Clock On Roster Shift",
        "description": "If a roster shift exists that could match for this employee to clock on at this time\r\ngiven kiosk settings for shift matching, returns that shift.\r\nOtherwise, the Shift result will be null.\r\nNote that if the time matches a shift exactly, the Shift result will also be null.",
        "operationId": "AuManagerRosterShift_MatchingClockOnRosterShift",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "kioskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "dateUtc",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuRosterShiftMatchingResultModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/rostershift/{employeeId}/nearby": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Find Nearby Roster Shifts",
        "description": "Finds any of the employee's roster shifts that are nearby to the specified local time.",
        "operationId": "AuManagerRosterShift_NearbyRosterShifts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "localTime",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuEssRosterShiftModel"
              },
              "xml": {
                "name": "AuEssRosterShiftModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<AuEssRosterShiftModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/rostershift/{rosterShiftId}": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Roster Shift by ID",
        "description": "Gets the details for a roster shift with the specified ID.",
        "operationId": "AuManagerRosterShift_GetRosterShift",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "rosterShiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "includeCosts",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false,
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuManagerRosterShiftModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Manager"
        ],
        "summary": "Update roster shift",
        "description": "Update an individual roster shift",
        "operationId": "AuManagerRosterShift_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "shiftModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RosterShiftEditModel"
            }
          },
          {
            "name": "rosterShiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "publish",
            "in": "query",
            "required": true,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "clearBreaks",
            "in": "query",
            "required": true,
            "type": "boolean",
            "title": "Nullable<Boolean>"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/rostershift/{rosterShiftId}/stub": {
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Stub Shift Timesheets",
        "description": "Generates timesheets for the roster shift with the specified ID.",
        "operationId": "AuManagerRosterShift_StubShiftTimesheets",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "rosterShiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StubRosterShiftViewModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/rostershift/employees": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Roster Employees",
        "description": "Lists all of the employees this manager has roster permissions on.",
        "operationId": "AuManagerRosterShift_GetLeaveEmployees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ManagerRosterEmployeeModel"
              },
              "xml": {
                "name": "ManagerRosterEmployeeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<ManagerRosterEmployeeModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/rostershift/locations": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Roster Locations",
        "description": "Lists all locations of employees this manager has roster permissions on.",
        "operationId": "AuManagerRosterShift_GetLocations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/LocationModel"
              },
              "xml": {
                "name": "LocationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<LocationModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/rostershift/manage": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Manage Roster Data",
        "description": "For the single date selected returns data about all published rostered shifts, published unassigned shifts,\r\nemployee unavailablity, and leave requests.",
        "operationId": "AuManagerRosterShift_ManageRosterData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterModel.date",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "filterModel.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filterModel.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filterModel.roleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filterModel.includeCosts",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Nullable<Boolean>"
          },
          {
            "name": "filterModel.includeSubLocations",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Nullable<Boolean>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuManagerRosterDataModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/rostershift/manageemployees": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Manager Roster Employees",
        "description": "Lists all of the employees this manager has manage roster permissions on.",
        "operationId": "AuManagerRosterShift_GetManageEmployees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ManagerRosterEmployeeModel"
              },
              "xml": {
                "name": "ManagerRosterEmployeeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<ManagerRosterEmployeeModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/rostershift/roles": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get the list of roles available",
        "operationId": "AuManagerRosterShift_GetRoles",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/RosterShiftRole"
              },
              "xml": {
                "name": "RosterShiftRole",
                "wrapped": true
              },
              "type": "array",
              "title": "List<RosterShiftRole>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/roundingrules": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Rounding Rules",
        "description": "Gets the rounding rules for the business.",
        "operationId": "ManagerRoundingRules_GetRoundingRules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TimesheetRoundingRulesModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Set Rounding Rules",
        "description": "Sets the rounding rules for the business.",
        "operationId": "ManagerRoundingRules_SetRoundingRules",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "roundingRules",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimesheetRoundingRulesModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/timesheet": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "Get Business Timesheets",
        "description": "Retrieves timesheets for the specified business which manager can access",
        "operationId": "GenericManagerTimesheet_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "filter.status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Submitted",
              "Approved",
              "Rejected",
              "Processed",
              "AnyExceptRejected"
            ],
            "title": "Nullable<TimesheetLineFilterStatus>"
          },
          {
            "name": "filter.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.employeeGroupId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.includeCosts",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "filter.currentPage",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.pageSize",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.orderBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Location",
              "WorkType",
              "Employee",
              "Date",
              "DefaultLocation",
              "PaySchedule"
            ],
            "title": "Nullable<TimesheetGrouping>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultModelOfManagerTimesheetLineModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manager"
        ],
        "summary": "Create timesheet line",
        "description": "Create an individual timesheet line\r\nIMPORTANT NOTICE: If units are specified the start and end time will be changed to midnight",
        "operationId": "AuManagerTimesheet_PostIndividual",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/timesheet/{timesheetLineId}": {
      "put": {
        "tags": [
          "Manager"
        ],
        "summary": "Update timesheet line",
        "description": "Update an individual timesheet line\r\nIMPORTANT NOTICE: If units are specified the start and end time will be changed to midnight",
        "operationId": "AuManagerTimesheet_PutIndividual",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timesheetLineId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/timesheet/employeegroups": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Employee Groups",
        "description": "Lists all of the employees this manager has approve timesheet permissions on.",
        "operationId": "GenericManagerTimesheet_GetEmployeeGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ManagerEmployeeGroup"
              },
              "xml": {
                "name": "ManagerEmployeeGroup",
                "wrapped": true
              },
              "type": "array",
              "title": "List<ManagerEmployeeGroup>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/timesheet/employees": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Timesheet Employees",
        "description": "Lists all of the employees this manager has approve timesheet permissions on.",
        "operationId": "GenericManagerTimesheet_GetTimesheetEmployees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ManagerTimesheetEmployeeModel"
              },
              "xml": {
                "name": "ManagerTimesheetEmployeeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<ManagerTimesheetEmployeeModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/manager/timesheet/locations": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Timesheet Locations",
        "description": "Lists all locations of employees this manager has approve timesheet permissions on.",
        "operationId": "GenericManagerTimesheet_GetLocations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/LocationModel"
              },
              "xml": {
                "name": "LocationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<LocationModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/paycategory": {
      "get": {
        "tags": [
          "PayCategory"
        ],
        "summary": "List Pay Categories",
        "description": "Lists all the pay categories for the business\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuPayCategory_GetPayCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuPayCategoryModel"
              },
              "xml": {
                "name": "AuPayCategoryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuPayCategoryModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayCategory"
        ],
        "summary": "Create Pay Category",
        "description": "Creates a new pay category for the business.",
        "operationId": "AuPayCategory_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payCategory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuPayCategoryModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayCategoryModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/paycategory/{id}": {
      "get": {
        "tags": [
          "PayCategory"
        ],
        "summary": "Get Pay Category by ID",
        "description": "Gets the pay category with the specified ID.",
        "operationId": "AuPayCategory_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayCategoryModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayCategory"
        ],
        "summary": "Update Pay Category",
        "description": "Updates the pay category with the specified ID.",
        "operationId": "AuPayCategory_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "payCategory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuPayCategoryModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayCategoryModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayCategory"
        ],
        "summary": "Delete Pay Category",
        "description": "Deletes the pay category with the specified ID.",
        "operationId": "AuPayCategory_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/paymentsummary/{financialYearEnding}": {
      "get": {
        "tags": [
          "PaymentSummary"
        ],
        "summary": "List Payment Summaries",
        "description": "Lists all the payment summaries for the specified financial year.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuPaymentSummary_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "financialYearEnding",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/PaygPaymentSummaryModel"
              },
              "xml": {
                "name": "PaygPaymentSummaryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<PaygPaymentSummaryModel>"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PaymentSummary"
        ],
        "summary": "Generate Payment Summaries",
        "description": "Generates (or regenerates) payment summaries for the specified financial year/business. Only unpublished payment summaries will be regenerated.",
        "operationId": "AuPaymentSummary_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "financialYearEnding",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "employingEntityId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaygPaymentSummaryModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PaymentSummary"
        ],
        "summary": "Publish Payment Summaries",
        "description": "Publish payment summaries for the specified financial year.",
        "operationId": "AuPaymentSummary_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "financialYearEnding",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "employingEntityId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "PaymentSummary"
        ],
        "summary": "Unpublish Payment Summaries",
        "description": "Unpublish payment summaries for the specified financial year.",
        "operationId": "AuPaymentSummary_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "financialYearEnding",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "employingEntityId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payratetemplate": {
      "get": {
        "tags": [
          "PayRateTemplate"
        ],
        "summary": "List Pay Rate Templates",
        "description": "Lists all the pay rate templates for the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuPayRateTemplate_GetPayRateTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuPayRateTemplateModel"
              },
              "xml": {
                "name": "AuPayRateTemplateModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuPayRateTemplateModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayRateTemplate"
        ],
        "summary": "Create Pay Rate Template",
        "description": "Creates a new pay rate template for the business.",
        "operationId": "AuPayRateTemplate_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRateTemplate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuPayRateTemplateModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayRateTemplateModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payratetemplate/{id}": {
      "get": {
        "tags": [
          "PayRateTemplate"
        ],
        "summary": "Get Pay Rate Template by ID",
        "description": "Gets the pay rate template with the specified ID.",
        "operationId": "AuPayRateTemplate_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayRateTemplateModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayRateTemplate"
        ],
        "summary": "Update Pay Rate Template",
        "description": "Updates the pay rate template with the specified ID.",
        "operationId": "AuPayRateTemplate_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "payRateTemplate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuPayRateTemplateModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayRateTemplateModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayRateTemplate"
        ],
        "summary": "Delete Pay Rate Template",
        "description": "Deletes the pay rate template with the specified ID.",
        "operationId": "AuPayRateTemplate_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "List Pay Runs",
        "description": "Get a list of pay runs associated with the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuPayRun_GetPayRuns",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/PayRunModel"
              },
              "xml": {
                "name": "PayRunModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<PayRunModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Create Pay Run",
        "description": "Creates a new pay run for this business.",
        "operationId": "AuPayRun_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayRunCreateRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Pay Run",
        "description": "Gets the pay run with the specified ID.",
        "operationId": "AuPayRun_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayRun"
        ],
        "summary": "Delete Pay Run",
        "description": "Deletes the pay run with the specified ID.",
        "operationId": "AuPayRun_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/approval/start": {
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Start Approval Process",
        "description": "Start the approval process for a pay run that requires approval, notifying the default contacts for this pay schedule.",
        "operationId": "PayRunApproval_StartApprovalProcess",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/bulkapplyleaverequests": {
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Bulk Apply Leave Requests",
        "description": "Bulk apply leave requests",
        "operationId": "AuPayRun_BulkApplyLeaveRequests",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "bulkApplyLeaveRequestModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkApplyLeaveRequestModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplyLeaveRequestResult"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/deductions": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "List Deductions",
        "description": "Gets all the deductions for a pay run.",
        "operationId": "AuPayRunDeductions_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayRunDeductionResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Create Deductions",
        "description": "Add deductions to the specified pay run.",
        "operationId": "AuPayRunDeductions_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitPayRunDeductionRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "PayRun"
        ],
        "summary": "Delete Deduction",
        "description": "Deletes the deduction with the specified ID from the pay run.",
        "operationId": "AuPayRunDeductions_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/deductions/{employeeId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Deductions by Employee ID",
        "description": "Gets all the deductions for a specific employee in a pay run.",
        "operationId": "AuPayRunDeductions_GetByEmployee",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayRunDeductionResponse"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/details": {
      "get": {
        "tags": [
          "Other"
        ],
        "operationId": "AuPayRunDetails_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayRunDetailsModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/earningslines": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "List Earnings Lines",
        "description": "Lists all the earnings lines for a pay run.",
        "operationId": "AuPayRunEarningsLine_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayRunEarningsLineResponseModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Create Earnings Lines",
        "description": "Adds earnings lines to the specified pay run.",
        "operationId": "AuPayRunEarningsLine_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuSubmitPayRunEarningsLineRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "PayRun"
        ],
        "summary": "Delete Earnings Line",
        "description": "Deletes the earnings with the specified ID from the pay run.",
        "operationId": "AuPayRunEarningsLine_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "title": "Int64"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/earningslines/{employeeId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Earnings Lines by Employee ID",
        "description": "Gets all the earnings lines for a specific employee in a pay run.",
        "operationId": "AuPayRunEarningsLine_GetApiV2BusinessByBusinessIdPayrunByPayRunIdEarningslinesByEmployeeId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayRunEarningsLineResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/employee/{employeeId}": {
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Include Employee",
        "description": "Includes an employee in a pay run.",
        "operationId": "AuPayRun_IncludeEmployee",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunTotalModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayRun"
        ],
        "summary": "Remove Employee from Pay Run",
        "description": "Removes an employee from a pay run.",
        "operationId": "AuPayRun_RemoveEmployee",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/EmployeeExpenses": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "List Employee Expenses",
        "description": "Lists all the employee expenses for a pay run.",
        "operationId": "PayRunEmployeeExpenses_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunEmployeeExpenseResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Create Employee Expenses",
        "description": "Add employee expenses to the specified pay run.",
        "operationId": "PayRunEmployeeExpenses_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitPayRunEmployeeExpenseRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "PayRun"
        ],
        "summary": "Delete Employee Expense",
        "description": "Deletes the employee expense with the specified ID from the pay run.",
        "operationId": "PayRunEmployeeExpenses_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/EmployeeExpenses/{employeeId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Employee Expenses by Employee ID",
        "description": "Gets all the employee expenses for a specific employee in a pay run.",
        "operationId": "PayRunEmployeeExpenses_GetApiV2BusinessByBusinessIdPayrunByPayRunIdEmployeeExpensesByEmployeeId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunEmployeeExpenseResponse"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/employerliabilities": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "List Employer Liabilities",
        "description": "Lists all the employer liabilities for a pay run.",
        "operationId": "PayRunEmployerLiabilities_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunEmployerLiabilityResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Create Employer Liabilities",
        "description": "Add employer liabilities to the specified pay run.",
        "operationId": "PayRunEmployerLiabilities_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitPayRunEmployerLiabilityRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "PayRun"
        ],
        "summary": "Delete Employer Liability",
        "description": "Deletes the employer liability with the specified ID from the pay run.",
        "operationId": "PayRunEmployerLiabilities_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/employerliabilities/{employeeId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Employer Liabilities by Employee ID",
        "description": "Gets all the employer liabilities for a specific employee in a pay run.",
        "operationId": "PayRunEmployerLiabilities_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunEmployerLiabilityResponse"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/file/aba/{abaId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get ABA File",
        "description": "Gets an ABA file associated with a pay run.",
        "operationId": "AuPayRun_AbaFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "abaId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/file/payslip/{employeeId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Pay Slip File",
        "description": "Gets the pay slip for an employee in a pay run.",
        "operationId": "AuPayRun_PaySlipFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/finalise": {
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Finalise Pay Run",
        "description": "Finalises the specified pay run. A pay run can only be finalised if there are no calculations in progress.",
        "operationId": "PayRunFinalise_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinalisePayRunOptions"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunFinaliseResult"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/leaveaccrued": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Leave Accruals",
        "description": "Lists all the leave accruals for the pay run.",
        "operationId": "PayRunLeaveAccrued_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "includeLeaveTaken",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false,
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LeaveAccrualResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Save Leave Accruals",
        "description": "Saves a set of leave accruals for the pay run.",
        "operationId": "PayRunLeaveAccrued_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitLeaveAccrualsModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "PayRun"
        ],
        "summary": "Delete Leave Accrual",
        "description": "Deletes the manually added leave accrual, leave taken or leave adjustment with the specified ID from the pay run.",
        "operationId": "PayRunLeaveAccrued_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/leaveaccrued/{employeeId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Leave Accruals for Employee",
        "description": "Gets the leave accruals for the specified employee in the pay run.",
        "operationId": "PayRunLeaveAccrued_GetApiV2BusinessByBusinessIdPayrunByPayRunIdLeaveaccruedByEmployeeId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "includeLeaveTaken",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false,
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LeaveAccrualResponse"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/nettogross": {
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Net to Gross",
        "description": "Calculates net to gross for a given pay run.",
        "operationId": "AuPayRun_NetToGross",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "netToGrossRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetToGrossRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetToGrossModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/notation": {
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Set Pay Run Notation",
        "description": "Sets the notation for this pay run. The pay run notation is the message that is shown on all pay slips for this pay run.",
        "operationId": "AuPayRun_Notation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayRunNotationModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "PayRun"
        ],
        "summary": "Delete Pay Run Notation",
        "description": "Deletes the notation for this pay run. The pay run notation is the message that is shown on all pay slips for this pay run.",
        "operationId": "AuPayRun_DeleteApiV2BusinessByBusinessIdPayrunByPayRunIdNotation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/notation/{employeeId}": {
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Create Note for Employee",
        "description": "Creates a note for an employee record in a pay run.",
        "operationId": "AuPayRunTotals_Notation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayRunTotalNotationModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunTotalNotationModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayRun"
        ],
        "summary": "Delete Note for Employee",
        "description": "Deletes the note for an employee record in a pay run.",
        "operationId": "AuPayRunTotals_DeleteApiV2BusinessByBusinessIdPayrunByPayRunIdNotationByEmployeeId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/paygadjustments": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "List PAYG Adjustments",
        "description": "Lists all the PAYG adjustments for a pay run.",
        "operationId": "AuPayRunTaxAdjustments_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunPaygAdjustmentResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Create PAYG Adjustments",
        "description": "Adds PAYG adjustments to the specified pay run.",
        "operationId": "AuPayRunTaxAdjustments_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitPayRunPaygAdjustmentRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "PayRun"
        ],
        "summary": "Delete PAYG Adjustment",
        "description": "Deletes the PAYG adjustment with the specified ID from the pay run.",
        "operationId": "AuPayRunTaxAdjustments_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/paygadjustments/{employeeId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get PAYG Adjustments by Employee ID",
        "description": "Gets all the PAYG adjustments for a specific employee in a pay run.",
        "operationId": "AuPayRunTaxAdjustments_GetApiV2BusinessByBusinessIdPayrunByPayRunIdPaygadjustmentsByEmployeeId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunPaygAdjustmentResponse"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/paymentapproval/start": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Start Payment Approval Process",
        "description": "Start the payment approval process for a unfinalised payrun can be with finalised with payment approval required\r\nAll default notification user configured on the pay schedule notified to approve the following payment",
        "operationId": "PaymentApproval_StartPaymentApprovalProcess",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/payments": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get pay run payments",
        "description": "Gets the payments associated with a pay run.",
        "operationId": "AuPayRun_Payments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuBankPaymentModel"
              },
              "xml": {
                "name": "AuBankPaymentModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<AuBankPaymentModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/payslips": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "List Pay Slip Data",
        "description": "Lists all the pay slips for the specified pay run.",
        "operationId": "AuPayRunPaySlip_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "showAllData",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false,
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "$ref": "#/definitions/AuApiPaySlipModel"
              },
              "type": "object",
              "title": "Dictionary<String,AuApiPaySlipModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/payslips/{employeeId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Pay Slip Data by Employee ID",
        "description": "Gets the pay slip data for an employee in a payrun.",
        "operationId": "AuPayRunPaySlip_GetApiV2BusinessByBusinessIdPayrunByPayRunIdPayslipsByEmployeeId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "showAllData",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false,
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuApiPaySlipModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/recalculate": {
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Recalculate",
        "description": "Recalculates a pay run.",
        "operationId": "AuPayRun_Recalculate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/setuiunlockstate": {
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Set UI Unlock enabled",
        "description": "Sets whether a pay run can be unlocked by the UI or not. Only applies to finalized pay runs.",
        "operationId": "PayRunUnlockState_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPayRunUIUnlockStateRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/summary": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Pay Run Summary",
        "description": "Gets the pay run summary information with the specified ID.",
        "operationId": "AuPayRun_GetPayRunSummary",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunSummaryModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/superadjustments": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "List Super Adjustments",
        "description": "Lists all the super adjustments for a pay run.",
        "operationId": "PayRunSuperAdjustments_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunSuperAdjustmentResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Create Super Adjustments",
        "description": "Adds super adjustments to the specified pay run.",
        "operationId": "PayRunSuperAdjustments_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitPayRunSuperAdjustmentRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "PayRun"
        ],
        "summary": "Delete Super Adjustment",
        "description": "Deletes the super adjustment with the specified ID from the pay run.",
        "operationId": "PayRunSuperAdjustments_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/superadjustments/{employeeId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Super Adjustments by Employee ID",
        "description": "Gets all super adjustments for a specific employee in a pay run.",
        "operationId": "PayRunSuperAdjustments_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunSuperAdjustmentResponse"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/terminate": {
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Terminate Employee in Pay Run",
        "description": "Terminates an employee in the specified pay run.",
        "operationId": "AuPayRunTerminate_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TerminateEmployeeRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/totals": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "List Pay Run Totals",
        "description": "Lists all of the pay run totals in a pay run.",
        "operationId": "AuPayRunTotals_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayRunTotalResponse"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/totals/{employeeId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Pay Run Totals by Employee ID",
        "description": "Gets the pay run totals for a specific employee in a pay run.",
        "operationId": "AuPayRunTotals_GetApiV2BusinessByBusinessIdPayrunByPayRunIdTotalsByEmployeeId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayRunTotalResponse"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/unlock": {
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Unlock Pay Run",
        "description": "Unlocks the specified pay run.",
        "operationId": "PayRunUnlock_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayRunUnlockRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/{payRunId}/warnings": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "List Pay Run Warnings",
        "description": "Lists all of the warnings in a pay run.",
        "operationId": "AuPayRun_GetWarnings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/DetailedPayRunWarningModel"
              },
              "xml": {
                "name": "DetailedPayRunWarningModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<DetailedPayRunWarningModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/async": {
      "post": {
        "tags": [
          "PayRun"
        ],
        "summary": "Create Pay Run (Async)",
        "description": "Creates a new pay run for this business asynchronously (the request will return before the pay run is created).",
        "operationId": "AuPayRun_Async",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayRunCreateRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunJobModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/creationstatus/{jobId}": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "Get Creation Status",
        "description": "Gets the creation status of a pay run that was created asynchronously.",
        "operationId": "AuPayRun_CreationStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "title": "Guid"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayRunJobStatusModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payrun/summary": {
      "get": {
        "tags": [
          "PayRun"
        ],
        "summary": "List Pay Runs Summaries",
        "description": "Get a list of pay run summaries associated with the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuPayRun_GetPayRunSummaries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/PayRunSummaryModel"
              },
              "xml": {
                "name": "PayRunSummaryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<PayRunSummaryModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payschedule": {
      "get": {
        "tags": [
          "PaySchedule"
        ],
        "summary": "List Pay Schedules",
        "description": "Lists all the pay schedules for the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuPaySchedule_GetPaySchedules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuPayScheduleModel"
              },
              "xml": {
                "name": "AuPayScheduleModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuPayScheduleModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PaySchedule"
        ],
        "summary": "Create Pay Schedule",
        "description": "Creates a new pay schedule for the business.",
        "operationId": "AuPaySchedule_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "paySchedule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuPayScheduleModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayScheduleModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payschedule/{id}": {
      "get": {
        "tags": [
          "PaySchedule"
        ],
        "summary": "Get Pay Schedule by ID",
        "description": "Gets the pay schedule with the specified ID.",
        "operationId": "AuPaySchedule_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayScheduleModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PaySchedule"
        ],
        "summary": "Update Pay Schedule",
        "description": "Updates the pay schedule with the specified ID.",
        "operationId": "AuPaySchedule_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "paySchedule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuPayScheduleModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuPayScheduleModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PaySchedule"
        ],
        "summary": "Delete Pay Schedule",
        "description": "Deletes the pay schedule with the specified ID.",
        "operationId": "AuPaySchedule_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payschedule/{payScheduleId}/nextpaydate": {
      "get": {
        "tags": [
          "PaySchedule"
        ],
        "summary": "Get Next Pay Date",
        "description": "Gets the next pay dates for the pay schedule with the specified ID.",
        "operationId": "PaySchedule_GetNextPayDate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payScheduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayScheduleDateForecastResultApiModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payschedule/metadata": {
      "get": {
        "tags": [
          "PaySchedule"
        ],
        "summary": "Get Pay Schedule Metadata",
        "description": "Gets the list of all applicable reference data for Pay Schedules for this business.",
        "operationId": "AuPaySchedule_GetMetaData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PayScheduleMetaDataModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payschedule/nextpaydates": {
      "get": {
        "tags": [
          "PaySchedule"
        ],
        "summary": "List Next Pay Dates",
        "description": "Gets the list of all next pay dates for each pay schedule.",
        "operationId": "PaySchedule_ListNextPayDates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/PayScheduleDateForecastResultApiModel"
              },
              "xml": {
                "name": "PayScheduleDateForecastResultApiModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<PayScheduleDateForecastResultApiModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/payslip": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get payslip configuration",
        "description": "Gets the payslip configuration for the specified business ID.",
        "operationId": "AuPaySlip_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEditBusinessPaySlipApiModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Create payslip configuration",
        "description": "Creates the payslip configuration for the specified business ID.\r\n            \r\nShowLineNotes field must be enabled in order to enable the ShowLocationInLineNotes field.\r\n            \r\nAn example of what you would populate the EmailBodyMessage field with would be:\r\n<p>Hi {{FirstName}},</p><p>{{BusinessName}} has just processed your pay and a new pay slip is available.</p><p>Regards {{BusinessName}}</p>",
        "operationId": "AuPaySlip_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEditBusinessPaySlipApiModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/publicholiday": {
      "get": {
        "tags": [
          "PublicHoliday"
        ],
        "summary": "Get Public Holidays for Year",
        "description": "Retrieves all the public holidays for a specific year.",
        "operationId": "AuPublicHoliday_GetPublicHolidaysByYear",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/PublicHolidayModel"
              },
              "xml": {
                "name": "PublicHolidayModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<PublicHolidayModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PublicHoliday"
        ],
        "summary": "Add a public holiday",
        "description": "Adds a new public holiday.",
        "operationId": "AuPublicHoliday_PostPublicHoliday",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "publicHoliday",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicHolidayModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublicHolidayModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PublicHoliday"
        ],
        "summary": "Delete Public Holiday by Date",
        "description": "Deletes all the public holidays on a specific date.",
        "operationId": "AuPublicHoliday_DeleteByDate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/publicholiday/{id}": {
      "get": {
        "tags": [
          "PublicHoliday"
        ],
        "summary": "Get Public Holiday Details",
        "description": "Gets the details for a public holiday with a specific ID",
        "operationId": "AuPublicHoliday_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublicHolidayModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PublicHoliday"
        ],
        "summary": "Update Public Holiday",
        "description": "Updates the public holiday with the specific ID.",
        "operationId": "AuPublicHoliday_PutPublicHoliday",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "publicHoliday",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicHolidayModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublicHolidayModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PublicHoliday"
        ],
        "summary": "Delete Public Holiday",
        "description": "Deletes the public holiday with the specified ID.",
        "operationId": "AuPublicHoliday_DeleteById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/qualification": {
      "get": {
        "tags": [
          "Qualifications"
        ],
        "summary": "List Qualifications",
        "description": "Lists all of the qualifications for the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "Qualification_GetQualifications",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/QualificationModel"
              },
              "xml": {
                "name": "QualificationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<QualificationModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Qualifications"
        ],
        "summary": "Create Qualification",
        "description": "Creates a new employee qualification for the business.",
        "operationId": "Qualification_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "qualification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QualificationModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/qualification/{id}": {
      "get": {
        "tags": [
          "Qualifications"
        ],
        "summary": "Get Qualification by ID",
        "description": "Gets the qualification with the specified ID.",
        "operationId": "Qualification_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QualificationModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Qualifications"
        ],
        "summary": "Update Qualification",
        "description": "Updates the qualification with the specified ID.",
        "operationId": "Qualification_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "qualification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QualificationModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Qualifications"
        ],
        "summary": "Delete Qualification",
        "description": "Deletes the qualification with the specified ID.",
        "operationId": "Qualification_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/birthday": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Birthday Report",
        "description": "Generates a birthday report.",
        "operationId": "ReportsBirthday_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/BirthdayReportExportModel"
              },
              "xml": {
                "name": "BirthdayReportExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<BirthdayReportExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/costing": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Costing Report",
        "description": "Generates a costing report.",
        "operationId": "AuReportsCosting_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.showZeroPayCategories",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.includePostTaxDeductions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuCostingReportApiModel"
              },
              "xml": {
                "name": "AuCostingReportApiModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuCostingReportApiModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/deductions": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Deductions Report",
        "description": "Generates a deductions report.",
        "operationId": "ReportsDeductions_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.deductionCategoryId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.disableRollupReporting",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.includePostTaxDeductions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/DeductionsReportExportModel"
              },
              "xml": {
                "name": "DeductionsReportExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<DeductionsReportExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/detailedactivity": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Detailed Activity Report",
        "description": "Generates a detailed activity report.",
        "operationId": "AuReportsDetailedActivity_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.includePostTaxDeductions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuDetailedActivityReportExportModel"
              },
              "xml": {
                "name": "AuDetailedActivityReportExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuDetailedActivityReportExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/detailedactivity/xlsx": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Detailed Activity Report",
        "description": "Generates a xlsx file fordetailed activity report.",
        "operationId": "AuReportsDetailedActivity_GetExcelFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "request.groupBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "EarningsLocation",
              "RollUpLocation",
              "DefaultLocation"
            ],
            "title": "EarningsReportDisplayEnum"
          },
          {
            "name": "request.filterType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "DateRange",
              "PayRun",
              "SuperBatch"
            ],
            "title": "DateTypeEnum"
          },
          {
            "name": "request.payRunId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.locationsIds",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32",
              "title": "Int32"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "List<Int32>"
          },
          {
            "name": "request.employeeIds",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32",
              "title": "Int32"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<Int32>"
          },
          {
            "name": "request.includePostTaxDeductions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.showLocationTotalsOnly",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.includeEmployeePayRunBreakdown",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/documentAcknowledgements": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Document Acknowledgements Report",
        "description": "Generates a document acknowledgements report.",
        "operationId": "ReportsDocumentAcknowledgements_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "employeeIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32",
              "title": "Int32"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "List<Int32>"
          },
          {
            "name": "documentStatus",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "title": "Int32"
          },
          {
            "name": "employingEntityId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "title": "Nullable<Int32>"
          },
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/DocumentAcknowledgementsReportExportModel"
              },
              "xml": {
                "name": "DocumentAcknowledgementsReportExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<DocumentAcknowledgementsReportExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/employeeaudit": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Employee Audit Report",
        "description": "Generates an Employee Audit Report.",
        "operationId": "ReportsEmployeeAudit_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.section",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "EmployeeDetails",
              "EmergencyContacts",
              "TaxFileDeclaration",
              "PayRunDefaults",
              "BankAccounts",
              "SuperFunds",
              "Locations",
              "WorkTypes",
              "Qualifications",
              "RecurringTransactions",
              "PayRates",
              "LeaveAllowances",
              "AdditionalEarningsLines",
              "Notes",
              "OpeningBalances",
              "EmployeePortalAccess",
              "KioskAccess",
              "Documents",
              "Unavailabilities",
              "NationalInsuranceRecord",
              "PensionSettings",
              "KiwiSaver",
              "TaxCodeDeclaration",
              "NationalRegistrationIdentityRecord",
              "LeavePaySettings",
              "EmployeeStatutoryDetails",
              "EmployeeScheduledUpdates",
              "EarningsCertificate",
              "PreviousEmployer",
              "JobKeeper",
              "JobMaker",
              "SelfManagedSuperFunds",
              "CisSubcontractor"
            ],
            "title": "Nullable<EmployeeAuditSection>"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.includePostTaxDeductions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeDetailsAuditReportApiModel"
              },
              "xml": {
                "name": "EmployeeDetailsAuditReportApiModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<EmployeeDetailsAuditReportApiModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/employeedetails": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Employee Details Report",
        "description": "Generates an employee details report.",
        "operationId": "ReportsEmployeeDetails_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "selectedColumns",
            "in": "query",
            "required": false,
            "items": {
              "type": "string",
              "title": "String"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "List<String>"
          },
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "title": "Int32"
          },
          {
            "name": "employingEntityId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "includeActive",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true,
            "title": "Boolean"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true,
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object",
                "title": "JObject"
              },
              "xml": {
                "name": "JObject",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<JObject>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Employee Details Report",
        "description": "Generates an employee details report.",
        "operationId": "ReportsEmployeeDetails_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeDetailsReportRequestModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object",
                "title": "JObject"
              },
              "xml": {
                "name": "JObject",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<JObject>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/employeedetails/fields": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Employee Details Report Fields",
        "description": "Gets the fields for the Employee Details Report.",
        "operationId": "AuReportsEmployeeDetailsFields_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeDetailsReportField"
              },
              "xml": {
                "name": "EmployeeDetailsReportField",
                "wrapped": true
              },
              "type": "array",
              "title": "List<EmployeeDetailsReportField>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/grosstonet": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Gross To Net Report",
        "description": "Generates a Gross To Net Report.",
        "operationId": "AuReportsGrossToNet_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.payCategoryIds",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32",
              "title": "Int32"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "List<Int32>"
          },
          {
            "name": "request.groupBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "title": "String"
          },
          {
            "name": "request.payRunId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.filterType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "DateRange",
              "PayRun",
              "SuperBatch"
            ],
            "title": "Nullable<DateTypeEnum>"
          },
          {
            "name": "request.includeExpenses",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Nullable<Boolean>"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.includePostTaxDeductions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuGrossToNetResponseModel"
              },
              "xml": {
                "name": "AuGrossToNetResponseModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuGrossToNetResponseModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/grosstonet/xlsx": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Gross To Net Report as Excel",
        "description": "Generates a Gross To Net Report as an Excel file.",
        "operationId": "AuReportsGrossToNet_GetExcelReport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.payCategoryIds",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32",
              "title": "Int32"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "List<Int32>"
          },
          {
            "name": "request.groupBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "title": "String"
          },
          {
            "name": "request.payRunId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.filterType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "DateRange",
              "PayRun",
              "SuperBatch"
            ],
            "title": "Nullable<DateTypeEnum>"
          },
          {
            "name": "request.includeExpenses",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Nullable<Boolean>"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.includePostTaxDeductions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/journal": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Journal Report",
        "description": "Gets the journal for a finalised pay run with the specified Id.",
        "operationId": "ReportsJournal_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "journalView",
            "in": "query",
            "required": false,
            "type": "string",
            "default": 0,
            "enum": [
              "NotSet",
              "Summary",
              "Details",
              "Both",
              "Excel"
            ],
            "title": "JournalView"
          },
          {
            "name": "journalService",
            "in": "query",
            "required": false,
            "type": "string",
            "default": 9,
            "enum": [
              "None",
              "Saasu",
              "Xero",
              "MYOB",
              "Deputy",
              "EmployeeTimePunch",
              "ClickSuper",
              "IntegratedTimesheets",
              "FileImport",
              "FileExport",
              "QuickBooks",
              "Harmony",
              "AwardStore",
              "Attache",
              "IntegratedRostering",
              "ReckonAccounts",
              "API",
              "MicroPower",
              "RosterLive",
              "NetSuite",
              "Kounta",
              "TimeAndAttendanceKiosk",
              "DetailedFileExport",
              "JonasPremier",
              "WageEasy",
              "Maestrano",
              "WorkZone",
              "EmployeePortal",
              "RosterTemplate",
              "Onboarding",
              "Admin",
              "WorkZoneClockOnOff",
              "NetSuiteOneWorld",
              "Sage50",
              "PensionSync",
              "FinancialsOffice",
              "ProntoXI",
              "PayRunDefault",
              "StandardWorkDay",
              "Beam",
              "PayRunAutomation",
              "BureauDashboard",
              "Wiise",
              "QBOMigrationTool",
              "AbridgedFileImport",
              "QBOForcedMigration",
              "HmrcDpsUpdate",
              "HmrcDpsStudentLoan",
              "HmrcDpsPostGradLoan",
              "Sage50FileImporter",
              "FPSFileImporter",
              "OAuth",
              "FreshBooks",
              "StarFileImporter",
              "ActiveCampaign",
              "SummaryAndDetailsExport",
              "Telleroo",
              "EmployeeAdvancedHoursUpload",
              "BusinessCentral",
              "Paytron",
              "AccessFinancials",
              "Comma",
              "Zoho",
              "FlatFileEmployeeImporter",
              "Twinfield",
              "SageAccounting",
              "Square",
              "Quickfile",
              "Tide",
              "TideSso",
              "FreeAgent",
              "Akahu",
              "InstaPay",
              "Zepto",
              "Slack",
              "Caxton",
              "QuickbooksStandalonePayroll",
              "ImportEmployeeSelfSetup",
              "XeroIdentityPayrollSignUp",
              "XeroIdentityHrSignUp",
              "SageIntacct",
              "InstaPayDaily",
              "Salesforce",
              "AutomatedPublicHolidayNotWorked",
              "EmployeePayRatesUpload",
              "Zapier",
              "StapledSuperFund",
              "Swag"
            ],
            "title": "ExternalService"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/leavebalances": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Leave Balances Report",
        "description": "Generates a leave balances report.",
        "operationId": "AuReportsLeaveBalances_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.leaveTypeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.groupBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "AccrualLocation",
              "DefaultLocation"
            ],
            "title": "LeaveReportDisplayEnum"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.asAtDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuLeaveBalancesExportModel"
              },
              "xml": {
                "name": "AuLeaveBalancesExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuLeaveBalancesExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/leavebalances/xlsx": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Leave Balances Report as Excel",
        "description": "Generates a Leave Balances Report as an Excel file.",
        "operationId": "AuReportsLeaveBalances_GetExcelReport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.filterType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "DateRange",
              "PayRun",
              "SuperBatch"
            ],
            "title": "DateTypeEnum"
          },
          {
            "name": "request.asAtDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "request.payRunId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.groupBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "AccrualLocation",
              "DefaultLocation"
            ],
            "title": "LeaveReportDisplayEnum"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.leaveTypeIds",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32",
              "title": "Int32"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "List<Int32>"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.hideLeaveValues",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/leavehistory": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Leave History Report",
        "description": "Generates a leave history report.",
        "operationId": "AuReportsLeaveHistoryReport_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "model.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "model.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "title": "String"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<String>"
          },
          {
            "name": "model.leaveCategoryId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/LeaveHistoryReportGroupModel"
              },
              "xml": {
                "name": "LeaveHistoryReportGroupModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<LeaveHistoryReportGroupModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/leaveliability": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Leave Liability Report",
        "description": "Generates a leave liability report.",
        "operationId": "AuReportsLeaveLiability_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.jobId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "uuid",
            "title": "Nullable<Guid>"
          },
          {
            "name": "request.filterType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "DateRange",
              "PayRun",
              "SuperBatch"
            ],
            "title": "DateTypeEnum"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.leaveTypeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.includeApprovedLeave",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.asAtDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.payRunId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.leaveTypeIds",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32",
              "title": "Int32"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "List<Int32>"
          },
          {
            "name": "request.groupBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "AccrualLocation",
              "DefaultLocation"
            ],
            "title": "Nullable<LeaveReportDisplayEnum>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuLeaveLiabilityExportModel"
              },
              "xml": {
                "name": "AuLeaveLiabilityExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuLeaveLiabilityExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/leaveliability/preparation": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Prepare Leave Liability report",
        "description": "Prepare Leave Liability Report job.",
        "operationId": "AuReportsLeaveLiability_PrepareReport",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportLeaveLiabilityRequestModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportLeaveLiabilityPreparationResponse"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/leaveliability/xlsx": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Leave Liability report as Excel",
        "description": "Generates a Leave Liability Report as an Excel file.",
        "operationId": "AuReportsLeaveLiability_GetExcelReport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uuid",
            "title": "Guid"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/ordinarytimeearnings": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Ordinary Time Earnings Report",
        "description": "Generates an ordinary time earnings report.",
        "operationId": "AuReportsOrdinaryTimeEarnings_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.financialYearEnding",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuOrdinaryTimeEarningsApiModel"
              },
              "xml": {
                "name": "AuOrdinaryTimeEarningsApiModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuOrdinaryTimeEarningsApiModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/paycategories": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Pay Categories Report",
        "description": "Generates a pay categories report.",
        "operationId": "AuReportsPayCategories_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.groupByEarningsLocation",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuPayCategoriesModel"
              },
              "xml": {
                "name": "AuPayCategoriesModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuPayCategoriesModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/payg": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "PAYG Report",
        "description": "Generates a PAYG report.",
        "operationId": "AuReportsPayg_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.state",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "title": "String"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/PaygReportExportModel"
              },
              "xml": {
                "name": "PaygReportExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<PaygReportExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/paymentfile": {
      "get": {
        "tags": [
          "Other"
        ],
        "summary": "Get Payment Files by Finalised Pay Run Id",
        "description": "Gets the payment files for a finalised pay run with the specified Id.",
        "operationId": "ReportsPaymentFile_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "paymentFileId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/paymenthistory": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Employee Payment History Report",
        "description": "Generates an employee payment history report.",
        "operationId": "AuReportsEmployeePaymentHistory_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuPaymentHistoryModel"
              },
              "xml": {
                "name": "AuPaymentHistoryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuPaymentHistoryModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/payrolltax": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Payroll Tax Report",
        "description": "Generates a payroll tax report.",
        "operationId": "AuReportsPayrollTax_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.groupBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "EarningsLocation",
              "DefaultLocation",
              "EarningsRollUpLocation"
            ],
            "title": "PayrollTaxGroupByEnum"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/PayrollTaxReportExportModel"
              },
              "xml": {
                "name": "PayrollTaxReportExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<PayrollTaxReportExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/payrunactivity": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Pay Run Activity Report",
        "description": "Generates a pay run activity report.",
        "operationId": "AuReportsPayRunActivity_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "payScheduleId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "title": "Int32"
          },
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ActivityReportExportModel"
              },
              "xml": {
                "name": "ActivityReportExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<ActivityReportExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/payrunaudit/{payRunId}/xlxs": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Pay Run Audit Report",
        "description": "Pay run audit report",
        "operationId": "AuPayRunAuditReport_GetExcelFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "payRunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.singleEmployeeWorksheet",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.showAllSummaryDetails",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.showAllEmployeeDetails",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/payruninclusions": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Pay Run Inclusions Report",
        "description": "Generates a pay run inclusions report.",
        "operationId": "AuReportsPayRunInclusions_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "Active",
              "Expired"
            ],
            "title": "PayRunInclusionsStatus"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuPayRunInclusionExportModel"
              },
              "xml": {
                "name": "AuPayRunInclusionExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuPayRunInclusionExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/payrunvariance/xlxs": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Pay Run Variance Report",
        "description": "Generates a pay run variance report as an Excel file.",
        "operationId": "ReportsPayRunVarianceReport_GetExcelReport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.payRunId1",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.payRunId2",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.payPeriodFrom1",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "request.payPeriodTo1",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "request.payPeriodFrom2",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "request.payPeriodTo2",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "request.comparisonType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "PayRuns",
              "PayPeriods"
            ],
            "title": "PayRunComparisonType"
          },
          {
            "name": "request.highlightVariancePercentage",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number",
            "format": "double",
            "title": "Decimal"
          },
          {
            "name": "request.onlyShowVariances",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/payslip": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get Pay Slips by Finalised Pay Run Id",
        "description": "Gets the pay slips for a finalised pay run with the specified Id.",
        "operationId": "ReportsPaySlip_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model.payRunId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "model.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/rostertimesheetcomparison": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Roster vs Timesheet Comparison Report",
        "description": "Generates a roster vs timesheet comparison report.",
        "operationId": "AuReportsRosterTimesheetComparison_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.employmentTypeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.includeCosts",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.timesheetStatuses",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "Missing",
                "Submitted",
                "Approved",
                "Rejected",
                "Processed"
              ],
              "title": "TimesheetLineStatusType"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<TimesheetLineStatusType>"
          },
          {
            "name": "request.workTypeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.rosterLocationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.timesheetLocationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.rosterStatuses",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "All",
                "Published",
                "Unpublished",
                "Accepted"
              ],
              "title": "RosterShiftStatus"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<RosterShiftStatus>"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.includePostTaxDeductions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuRosterTimesheetComparisonReportExportModel"
              },
              "xml": {
                "name": "AuRosterTimesheetComparisonReportExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuRosterTimesheetComparisonReportExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/shiftswapping": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get shift swapping report by business id",
        "operationId": "ReportsShiftSwapping_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.fromEmployeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.toEmployeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.includeCosts",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.statuses",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "Created",
                "Cancelled",
                "Accepted",
                "Declined",
                "AwaitingManagerApproval",
                "ApprovedByManager",
                "RejectedByManager"
              ],
              "title": "RosterShiftSwapStatusEnum"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<RosterShiftSwapStatusEnum>"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ShiftSwappingReportExportModel"
              },
              "xml": {
                "name": "ShiftSwappingReportExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<ShiftSwappingReportExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/supercontributions/byemployee": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Super Contribution Report (By Employee)",
        "description": "Generates a super contribution report by employee.",
        "operationId": "AuReportsSuperContributions_ByEmployee",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.includePostTaxDeductions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/SuperAccrualExportModel"
              },
              "xml": {
                "name": "SuperAccrualExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<SuperAccrualExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/supercontributions/bysuperfund": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Super Contribution Report (By Super Fund)",
        "description": "Generates a super contribution report by super fund.",
        "operationId": "AuReportsSuperContributions_BySuperFund",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.includePostTaxDeductions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/SuperContributionsReportExportModel"
              },
              "xml": {
                "name": "SuperContributionsReportExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<SuperContributionsReportExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/supercontributions/xlsx": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Super Contribution Report as Excel",
        "description": "Generates a Super Contribution Report as an Excel file.",
        "operationId": "AuReportsSuperContributions_GetExcelReport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.superContributionsReportExportType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "AccrualsExcel",
              "PaymentsExcel"
            ],
            "title": "SuperContributionsReportExportTypeEnum"
          },
          {
            "name": "request.filterType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "DateRange",
              "PayRun",
              "SuperBatch"
            ],
            "title": "DateTypeEnum"
          },
          {
            "name": "request.superBatchId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.contributionType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "SuperGuarantee",
              "SalarySacrifice",
              "MemberVoluntary",
              "EmployerContribution",
              "NonRescEmployerContribution"
            ],
            "title": "Nullable<SuperContributionType>"
          },
          {
            "name": "request.groupBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Employee",
              "SuperFund"
            ],
            "title": "ContributionsServiceType"
          },
          {
            "name": "request.fundPerPage",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.includePostTaxDeductions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/tasks": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get tasks by business id",
        "operationId": "ReportsTasksReport_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.payRunId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "Completed",
              "NotCompleted"
            ],
            "title": "TasksReportStatusEnum"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/TasksReportExportModel"
              },
              "xml": {
                "name": "TasksReportExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<TasksReportExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/report/timesheet": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Timesheet Report",
        "description": "Generates a timesheet report.",
        "operationId": "AuReportsTimesheet_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.includeCosts",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.statuses",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "Missing",
                "Submitted",
                "Approved",
                "Rejected",
                "Processed"
              ],
              "title": "TimesheetLineStatusType"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<TimesheetLineStatusType>"
          },
          {
            "name": "request.workTypeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "request.payScheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.includePostTaxDeductions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuTimesheetExportModel"
              },
              "xml": {
                "name": "AuTimesheetExportModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuTimesheetExportModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/rostershift": {
      "get": {
        "tags": [
          "RosterShift"
        ],
        "summary": "Get Roster Shifts",
        "description": "Gets roster shifts, optionally filtered by a number of parameters. Query parameters 'fromDate' and 'toDate' are required.\r\nNOTE: By default, only shifts with no role assigned are returned. To return shifts with roles, either specify some SelectedRoles,\r\nor specify SelectAllRoles = true.",
        "operationId": "AuRosterShift_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "filter.shiftStatus",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "Published",
              "Unpublished",
              "Accepted"
            ],
            "title": "RosterShiftStatus"
          },
          {
            "name": "filter.shiftStatuses",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "All",
                "Published",
                "Unpublished",
                "Accepted"
              ],
              "title": "RosterShiftStatus"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<RosterShiftStatus>"
          },
          {
            "name": "filter.selectedLocations",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "title": "String"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<String>"
          },
          {
            "name": "filter.selectedEmployees",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "title": "String"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<String>"
          },
          {
            "name": "filter.selectedRoles",
            "in": "query",
            "description": "",
            "required": false,
            "items": {
              "type": "string",
              "title": "String"
            },
            "collectionFormat": "multi",
            "type": "array",
            "title": "IList<String>"
          },
          {
            "name": "filter.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.employeeGroupId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.unassignedShiftsOnly",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "filter.selectAllRoles",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "filter.excludeShiftsOverlappingFromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "filter.pageSize",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.currentPage",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.includeWarnings",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuRosterShiftGenerateTimesheetModel"
              },
              "xml": {
                "name": "AuRosterShiftGenerateTimesheetModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<AuRosterShiftGenerateTimesheetModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RosterShift"
        ],
        "summary": "Create roster shift",
        "description": "Create or update an individual roster shift",
        "operationId": "AuRosterShift_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "shiftModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuRosterShiftEditModel"
            }
          },
          {
            "name": "publish",
            "in": "query",
            "required": true,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/rostershift/{employeeId}/matchingclockoff": {
      "get": {
        "tags": [
          "RosterShift"
        ],
        "summary": "Find Matching Clock Off Roster Shift",
        "description": "If a roster shift exists that could match for this employee to clock off at this time\r\ngiven kiosk settings for shift matching, returns that shift.\r\nOtherwise, the Shift result will be null.\r\nNote that if the time matches a shift exactly, the Shift result will also be null.",
        "operationId": "AuRosterShift_MatchingClockOffRosterShift",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "kioskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "dateUtc",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuRosterShiftMatchingResultModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/rostershift/{employeeId}/matchingclockon": {
      "get": {
        "tags": [
          "RosterShift"
        ],
        "summary": "Find Matching Clock On Roster Shift",
        "description": "If a roster shift exists that could match for this employee to clock on at this time\r\ngiven kiosk settings for shift matching, returns that shift.\r\nOtherwise, the Shift result will be null.\r\nNote that if the time matches a shift exactly, the Shift result will also be null.",
        "operationId": "AuRosterShift_MatchingClockOnRosterShift",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "kioskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "dateUtc",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuRosterShiftMatchingResultModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/rostershift/{employeeId}/nearby": {
      "get": {
        "tags": [
          "RosterShift"
        ],
        "summary": "Find Nearby Roster Shifts",
        "description": "Finds any of the employee's roster shifts that are nearby to the specified local time.",
        "operationId": "AuRosterShift_NearbyRosterShifts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "localTime",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuEssRosterShiftModel"
              },
              "xml": {
                "name": "AuEssRosterShiftModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<AuEssRosterShiftModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/rostershift/{rosterShiftId}": {
      "put": {
        "tags": [
          "RosterShift"
        ],
        "summary": "Update roster shift",
        "description": "Update an individual roster shift",
        "operationId": "AuRosterShift_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "shiftModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuRosterShiftEditModel"
            }
          },
          {
            "name": "rosterShiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "publish",
            "in": "query",
            "required": true,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "clearBreaks",
            "in": "query",
            "required": true,
            "type": "boolean",
            "title": "Nullable<Boolean>"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/rostershift/{rosterShiftId}/stub": {
      "post": {
        "tags": [
          "RosterShift"
        ],
        "summary": "Stub Shift Timesheets",
        "description": "Generates timesheets for the roster shift with the specified ID.",
        "operationId": "AuRosterShift_StubShiftTimesheets",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "rosterShiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StubRosterShiftViewModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/roundingrules": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get Rounding Rules",
        "description": "Gets the rounding rules for the business.",
        "operationId": "RoundingRules_GetRoundingRules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TimesheetRoundingRulesModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Set Rounding Rules",
        "description": "Sets the rounding rules for the business.",
        "operationId": "RoundingRules_SetRoundingRules",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "roundingRules",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimesheetRoundingRulesModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/selfmanagedsuperfund": {
      "get": {
        "tags": [
          "SuperFund"
        ],
        "summary": "List Self Managed Super Funds",
        "description": "Lists all the self managed super funds for the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuSelfManagedSuperFund_GetFunds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/SelfManagedSuperFundModel"
              },
              "xml": {
                "name": "SelfManagedSuperFundModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<SelfManagedSuperFundModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SuperFund"
        ],
        "summary": "Create Self Managed Super Fund",
        "description": "Creates a new self managed super fund for the business.",
        "operationId": "AuSelfManagedSuperFund_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fund",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SelfManagedSuperFundModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/selfmanagedsuperfund/{id}": {
      "get": {
        "tags": [
          "SuperFund"
        ],
        "summary": "Get Self Managed Super Fund by ID",
        "description": "Gets the self managed super fund with the specified ID.",
        "operationId": "AuSelfManagedSuperFund_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SelfManagedSuperFundModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SuperFund"
        ],
        "summary": "Update Self Managed Super Fund",
        "description": "Updates the Self Managed Super Fund by the specified ID",
        "operationId": "AuSelfManagedSuperFund_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "fund",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SelfManagedSuperFundModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/singlesignon": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Single Sign On",
        "description": "Request for SSO URL that provides authenticated access to KeyPay. See the guide on <a href=\"http://api.keypay.com.au/guides/SSO\">SSO Requests</a> for more details.",
        "operationId": "SingleSignOn_PostApiV2BusinessByBusinessIdSinglesignon",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleSignOnRequestModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleSignOnResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/stpregister": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get STP Registration Details",
        "description": "Gets the ATO settings already applied for this business",
        "operationId": "AuStpRegistration_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuStpRegistrationModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Apply STP Registration Details",
        "description": "Registers the business for STP using the ATO settings supplied",
        "operationId": "AuStpRegistration_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stpRegistrationModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuStpRegistrationModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuStpRegistrationModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/subscription/billingplans": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "List Billing Plans",
        "description": "Lists all the billing plans available for the current business.",
        "operationId": "AuSubscription_ListBillingPlans",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuBillingPlanResponseModel"
              },
              "xml": {
                "name": "AuBillingPlanResponseModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuBillingPlanResponseModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/subscription/currentbillingplan": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get Business Billing PLan",
        "description": "Get the current billing plan for the business.",
        "operationId": "AuSubscription_GetCurrentBillingPlan",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuBillingPlanResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/subscription/setbillingplan": {
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Set Business Billing Plan",
        "description": "Sets the current billing plan for a business",
        "operationId": "AuSubscription_SetBillingPlan",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetBillingPlanRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/superfund/electronicserviceaddress": {
      "get": {
        "tags": [
          "SuperFund"
        ],
        "summary": "List Electronic Service Addresses",
        "description": "Electronic Service Addresses for Self Managed Super Funds",
        "operationId": "AuSuperFund_ElectronicServiceAddressIndex",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuSmsfElectronicServiceAddressModel"
              },
              "xml": {
                "name": "AuSmsfElectronicServiceAddressModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<AuSmsfElectronicServiceAddressModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/superfund/productsearch": {
      "get": {
        "tags": [
          "SuperFund"
        ],
        "summary": "Search Super Funds",
        "description": "Search for super funds based on a string, search by defaults to All",
        "operationId": "AuSuperFund_ProductSearch",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "searchBy",
            "in": "query",
            "required": false,
            "type": "string",
            "default": 0,
            "enum": [
              "All",
              "Usi",
              "Abn",
              "Name"
            ],
            "title": "SuperFundSearchBy"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/SuperProductEditModel"
              },
              "xml": {
                "name": "SuperProductEditModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<SuperProductEditModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/tags": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "List the Business tags",
        "operationId": "BusinessTags_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/TagViewModel"
              },
              "xml": {
                "name": "TagViewModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<TagViewModel>"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/timesheet": {
      "get": {
        "tags": [
          "Timesheets"
        ],
        "summary": "Get Business Timesheets",
        "description": "Retrieves all timesheets for the specified business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuTimesheet_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuTimesheetLineModel"
              },
              "xml": {
                "name": "AuTimesheetLineModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuTimesheetLineModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timesheets"
        ],
        "summary": "Create timesheet line",
        "description": "Create an individual timesheet line\r\nIMPORTANT NOTICE: If units are specified the start and end time will be changed to midnight",
        "operationId": "AuTimesheet_PostIndividual",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/timesheet/{timesheetLineId}": {
      "put": {
        "tags": [
          "Timesheets"
        ],
        "summary": "Update timesheet line",
        "description": "Update an individual timesheet line\r\nIMPORTANT NOTICE: If units are specified the start and end time will be changed to midnight",
        "operationId": "AuTimesheet_PutIndividual",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timesheetLineId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Timesheets"
        ],
        "summary": "Delete timesheet line",
        "description": "Delete an individual timesheet line.\r\nNote: You cannot delete a Processed timesheet line.",
        "operationId": "AuTimesheet_DeleteIndividual",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timesheetLineId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/timesheet/bulk": {
      "put": {
        "tags": [
          "Timesheets"
        ],
        "summary": "Update/Replace timesheets",
        "description": "Performs the same action as 'Bulk Insert Timesheets', but any existing timesheets\r\nfor the specified employees within the specified time period\r\n(StartTime - EndTime) will be replaced with the timesheets specified.",
        "operationId": "AuTimesheet_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuSubmitTimesheetsRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuSubmitTimesheetsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timesheets"
        ],
        "summary": "Bulk Insert Timesheets",
        "description": "Adds timesheets for the specified business. This will not replace any existing timesheets.\r\nThe timesheets should be grouped by their associated employee IDs, with the key for the timesheet array\r\nbeing the employee ID. For a Standard Employee ID Type, make sure the employee ID is an integer.\r\nIMPORTANT NOTICE: If units are specified the start and end time will be changed to midnight",
        "operationId": "AuTimesheet_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuSubmitTimesheetsRequest"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuSubmitTimesheetsResponse"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/timesheetsettings": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get the timesheet settings for the business",
        "operationId": "AuBusinessTimesheetSettings_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Business"
        ],
        "summary": "Update the timesheet settings for the business",
        "operationId": "AuBusinessTimesheetSettings_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuBusinessTimesheetSettingsModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/unavailability": {
      "get": {
        "tags": [
          "Unavailability"
        ],
        "summary": "List Unavailabilities",
        "description": "Lists all of the unavailabilities for this business, with optional filters.",
        "operationId": "Unavailability_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "filter.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "filter.defaultLocationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/UnavailabilityModel"
              },
              "xml": {
                "name": "UnavailabilityModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<UnavailabilityModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Unavailability"
        ],
        "summary": "Create Unavailability",
        "description": "Creates a new unavailability for the employee.",
        "operationId": "Unavailability_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "unavailabilitySaveModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnavailabilitySaveModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UnavailabilityModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/unavailability/{id}": {
      "get": {
        "tags": [
          "Unavailability"
        ],
        "summary": "Get unavailability by ID",
        "description": "Gets the unavailability with the specified ID.",
        "operationId": "Unavailability_GetApiV2BusinessByBusinessIdUnavailabilityById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UnavailabilityModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Unavailability"
        ],
        "summary": "Update Unavailability",
        "description": "Updates the unavailability with the specified ID.",
        "operationId": "Unavailability_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "unavailabilitySaveModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnavailabilitySaveModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Unavailability"
        ],
        "summary": "Delete Unavailability",
        "description": "Deletes the unavailability with the specified ID.",
        "operationId": "Unavailability_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/{businessId}/webhookregistrations": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "List Web Hook Registrations",
        "description": "Returns a collection containing the registered web hook instances for the user.",
        "operationId": "WebHookRegistrations_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/WebHook"
              },
              "xml": {
                "name": "WebHook",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<WebHook>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Register Web Hook",
        "description": "Registers a new web hook.",
        "operationId": "WebHookRegistrations_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "webHook",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebHook"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebHook"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Webhook"
        ],
        "summary": "Delete all Web Hook Registrations",
        "description": "Deletes all the web hook registrations.",
        "operationId": "WebHookRegistrations_DeleteAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "title": "IHttpActionResult"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/webhookregistrations/{id}": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Get Web Hook Registration by ID",
        "description": "Gets the registered web hook instance with the specified ID.",
        "operationId": "WebHookRegistrations_Lookup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebHook"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Webhook"
        ],
        "summary": "Update Web Hook Registration",
        "description": "Updates the web hook registration with the specified ID.",
        "operationId": "WebHookRegistrations_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "webHook",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebHook"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "title": "IHttpActionResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Webhook"
        ],
        "summary": "Delete Web Hook Registration",
        "description": "Deletes the web hook registration with the specified ID.",
        "operationId": "WebHookRegistrations_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "title": "IHttpActionResult"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/webhookregistrations/{id}/test": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Test Web Hook",
        "description": "Tests a web hook given a registration ID and a filter string.",
        "operationId": "WebHookRegistrations_Test",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "title": "IHttpActionResult"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/worktype": {
      "get": {
        "tags": [
          "WorkType"
        ],
        "summary": "List Work Types",
        "description": "Lists all the work types for the business.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuWorkType_GetWorkTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuWorkTypeModel"
              },
              "xml": {
                "name": "AuWorkTypeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuWorkTypeModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkType"
        ],
        "summary": "Create Work Type",
        "description": "Creates a new work type for the business.",
        "operationId": "AuWorkType_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "workType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuWorkTypeModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuWorkTypeModel"
            }
          }
        }
      }
    },
    "/api/v2/business/{businessId}/worktype/{id}": {
      "get": {
        "tags": [
          "WorkType"
        ],
        "summary": "Get Work Type by ID",
        "description": "Gets the work type with the specified ID.",
        "operationId": "AuWorkType_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuWorkTypeModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkType"
        ],
        "summary": "Update Work Type",
        "description": "Updates the work type with the specified ID.",
        "operationId": "AuWorkType_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "workType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuWorkTypeModel"
            }
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuWorkTypeModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkType"
        ],
        "summary": "Delete Work Type",
        "description": "Deletes the work type with the specified ID.",
        "operationId": "AuWorkType_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/business/externalid": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get Business Details by External ID",
        "description": "Retrieves the details of the business with the specified external ID.",
        "operationId": "AuBusiness_GetBusinessByExternalId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "externalId",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuBusinessExportModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/bankaccounts": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "List Bank Accounts",
        "description": "Lists all of the bank accounts for this employee.",
        "operationId": "AuEssBankAccount_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuEssBankAccountModel"
              },
              "xml": {
                "name": "AuEssBankAccountModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuEssBankAccountModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Create Bank Account",
        "description": "Creates a new bank account for the employee.",
        "operationId": "AuEssBankAccount_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEssBankAccountModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssSaveBankAccountResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/bankaccounts/{bankAccountId}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Bank Account by ID",
        "description": "Gets the bank account for this employee with the specified ID.",
        "operationId": "AuEssBankAccount_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssBankAccountModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ess"
        ],
        "summary": "Delete Bank Account",
        "description": "Deletes the employee's bank account with the specified ID.",
        "operationId": "AuEssBankAccount_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssSaveBankAccountResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/bankaccounts/{bankAccountId}/swagrequired2fa": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Bank Account by ID",
        "description": "Gets the bank account for this employee with the specified ID.",
        "operationId": "AuEssBankAccount_GetApiV2EssByEmployeeIdBankaccountsByBankAccountIdSwagrequired2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssBankAccountModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ess"
        ],
        "summary": "Delete Bank Account",
        "description": "Deletes the employee's bank account with the specified ID.",
        "operationId": "AuEssBankAccount_DeleteApiV2EssByEmployeeIdBankaccountsByBankAccountIdSwagrequired2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssSaveBankAccountResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/bankaccounts/{id}": {
      "put": {
        "tags": [
          "Ess"
        ],
        "summary": "Update Bank Account",
        "description": "Updates the employee's bank account with the specified ID.",
        "operationId": "AuEssBankAccount_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEssBankAccountModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssSaveBankAccountResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/bankaccounts/{id}/swagrequired2fa": {
      "put": {
        "tags": [
          "Ess"
        ],
        "summary": "Update Bank Account",
        "description": "Updates the employee's bank account with the specified ID.",
        "operationId": "AuEssBankAccount_PutApiV2EssByEmployeeIdBankaccountsByIdSwagrequired2fa",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEssBankAccountModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssSaveBankAccountResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/bankaccounts/swagrequired2fa": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "List Bank Accounts",
        "description": "Lists all of the bank accounts for this employee.",
        "operationId": "AuEssBankAccount_GetApiV2EssByEmployeeIdBankaccountsSwagrequired2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuEssBankAccountModel"
              },
              "xml": {
                "name": "AuEssBankAccountModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<AuEssBankAccountModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Create Bank Account",
        "description": "Creates a new bank account for the employee.",
        "operationId": "AuEssBankAccount_PostApiV2EssByEmployeeIdBankaccountsSwagrequired2fa",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEssBankAccountModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssSaveBankAccountResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/dashboard": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Dashboard",
        "description": "Gets a set of useful information that the employee may need for self setup tasks.",
        "operationId": "AuEssEmployee_GetDashboard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuDashboardModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/details": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Details",
        "description": "Gets ESS details for the specified employee.",
        "operationId": "AuEssEmployee_GetDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EssEmployeeDetailsModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Save Details",
        "description": "Saves any employee details that the employee is allowed to set.",
        "operationId": "AuEssEmployee_SaveDetails",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeePartialEditModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuUnstructuredEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/document": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "List all Documents",
        "description": "Lists all documents visible to this employee, including both business and employee documents.",
        "operationId": "AuEssDocument_ListDocuments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssDocumentModel"
              },
              "xml": {
                "name": "EssDocumentModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<EssDocumentModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/document/{documentId}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Document Details by ID",
        "description": "Gets details for the specified document which is visible to the employee.",
        "operationId": "AuEssDocument_GetDocumentById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EssDocumentModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/document/acknowledge/{documentId}": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Acknowledge Document",
        "description": "Acknowledges the document with the specified ID as having been read by the employee.",
        "operationId": "AuEssDocument_AcknowledgeDocument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EssDocumentModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/document/download/{documentId}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Download Document",
        "description": "Downloads the document with the specified ID so long as it is visible to the employee.",
        "operationId": "AuEssDocument_DownloadDocument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/document/paymentsummaries": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Payment Summaries",
        "description": "List all the employee's payment summaries.",
        "operationId": "AuEssDocument_PaymentSummaries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssPaymentSummaryModel"
              },
              "xml": {
                "name": "EssPaymentSummaryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<EssPaymentSummaryModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/document/paymentsummaries/swagrequired2fa": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Payment Summaries",
        "description": "List all the employee's payment summaries.",
        "operationId": "AuEssDocument_GetApiV2EssByEmployeeIdDocumentPaymentsummariesSwagrequired2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssPaymentSummaryModel"
              },
              "xml": {
                "name": "EssPaymentSummaryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<EssPaymentSummaryModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/document/paymentsummary/{documentId}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Payment Summary PDF",
        "description": "Gets the PDF for the payment summary with the specified ID.",
        "operationId": "AuEssDocument_PaymentSummary",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/document/payslip": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "List Pay Slips",
        "description": "Lists all pay slips for the employee.",
        "operationId": "AuEssDocument_ListPayslips",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssPayslipModel"
              },
              "xml": {
                "name": "EssPayslipModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<EssPayslipModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/document/payslip/{payrunId}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Pay Slip by Pay Run ID",
        "description": "Gets the pay slip for the pay run with the specified ID.",
        "operationId": "AuEssDocument_GetPayslip",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "payrunId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/document/payslip/swagrequired2fa": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "List Pay Slips",
        "description": "Lists all pay slips for the employee.",
        "operationId": "AuEssDocument_GetApiV2EssByEmployeeIdDocumentPayslipSwagrequired2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssPayslipModel"
              },
              "xml": {
                "name": "EssPayslipModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<EssPayslipModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/emergencycontacts": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Emergency Contacts",
        "description": "Gets emergency contacts for the specified employee.",
        "operationId": "AuEssEmployee_GetEmergencyContacts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeEmergencyContactsEditModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ess"
        ],
        "summary": "Update Emergency Contacts",
        "description": "Saves the employee's emergency contact details.",
        "operationId": "AuEssEmployee_UpdateEmergencyContacts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeEmergencyContactsEditModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeEmergencyContactsEditModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Save Emergency Contacts",
        "description": "Saves the employee's emergency contact details.",
        "operationId": "AuEssEmployee_SaveEmergencyContacts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeEmergencyContactsEditModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeEmergencyContactsEditModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/expense": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Expense Requests",
        "description": "Gets a paged view of expense requests for this employee.",
        "operationId": "EssExpense_GetExpenseRequests",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "currentPage",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "title": "Int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 100,
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssExpenseRequestResponseModel"
              },
              "xml": {
                "name": "EssExpenseRequestResponseModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<EssExpenseRequestResponseModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Create Expense Request",
        "description": "Creates a new expense request for the employee.",
        "operationId": "EssExpense_CreateExpenseRequest",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpenseRequestEditModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/expense/{expenseRequestId}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Expense Request by ID",
        "description": "Gets the expense request with the specified ID.",
        "operationId": "EssExpense_GetExpenseRequest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EssExpenseRequestResponseModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ess"
        ],
        "summary": "Update Expense Request",
        "description": "Updates the expense request with the specified ID.",
        "operationId": "EssExpense_UpdateExpenseRequest",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpenseRequestEditModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Ess"
        ],
        "summary": "Delete Expense Request",
        "description": "Deletes the expense request with the specified ID.",
        "operationId": "EssExpense_CancelExpenseRequest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EssExpenseRequestResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/expense/{expenseRequestId}/attachment": {
      "put": {
        "tags": [
          "Ess"
        ],
        "summary": "Upload Attachment to Expense Request",
        "description": "Uploads an attachment to the expense request with the specified ID.\r\nThe request should be a MIME multipart file upload request.",
        "operationId": "EssExpense_UploadAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "expenseRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "title": "IHttpActionResult"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/expense/categories": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Expense Categories",
        "description": "Gets all the expense categories for the employee.",
        "operationId": "EssExpense_ExpenseCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ExpenseCategoryResponseModel"
              },
              "xml": {
                "name": "ExpenseCategoryResponseModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<ExpenseCategoryResponseModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/expense/summary": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Expense Payment Summary",
        "description": "Gets a summary of the employee's expense payments.",
        "operationId": "EssExpense_Summary",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeExpensePaymentSummaryModel"
              },
              "xml": {
                "name": "EmployeeExpensePaymentSummaryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<EmployeeExpensePaymentSummaryModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/expense/taxcodes": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Tax Codes",
        "description": "Gets all the tax codes for the employee.",
        "operationId": "EssExpense_TaxCodes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalServiceTaxCode"
              },
              "xml": {
                "name": "JournalServiceTaxCode",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<JournalServiceTaxCode>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/leave": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "List Leave Requests",
        "description": "Lists all leave requests for this employee, with optional filters",
        "operationId": "EssLeave_LeaveRequests",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.showOtherEmployees",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "filter.approvedOnly",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssLeaveRequestModel"
              },
              "xml": {
                "name": "EssLeaveRequestModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<EssLeaveRequestModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Create Leave Request",
        "description": "Creates a new leave request for the employee.",
        "operationId": "EssLeave_ApplyForLeave",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "leaveApplication",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LeaveApplicationWithAttachmentModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/leave/{leaveRequestId}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Leave Request by ID",
        "description": "Gets the details for a leave request with the specified ID.",
        "operationId": "EssLeave_LeaveRequest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EssLeaveRequestModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Update Leave Request",
        "description": "Updates the leave request with the specified ID.",
        "operationId": "EssLeave_EditLeave",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "leaveApplication",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LeaveApplicationWithAttachmentModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Ess"
        ],
        "summary": "Delete Leave Request",
        "description": "Deletes the leave request with the specified ID.",
        "operationId": "EssLeave_Cancel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/leave/{leaveRequestId}/attachment": {
      "put": {
        "tags": [
          "Ess"
        ],
        "summary": "Upload Attachment to Leave Request",
        "description": "Uploads a file as a new employee document, and attaches it to the leave request with the specified ID. \r\nThe request should be a MIME multipart file upload request.",
        "operationId": "EssLeave_Upload",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "title": "IHttpActionResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ess"
        ],
        "summary": "Delete Attachment from Leave Request",
        "description": "Deletes the attachment on the leave request with the specified ID.",
        "operationId": "EssLeave_DeleteAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "leaveRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/leave/balances": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Leave Balances",
        "description": "Gets the leave balances for the employee.",
        "operationId": "EssLeave_Balances",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "asAtDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/LeaveBalanceModel"
              },
              "xml": {
                "name": "LeaveBalanceModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<LeaveBalanceModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/leave/estimate": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Estimate Leave Hours",
        "description": "Estimates the number of hours of leave required based on date and leave category.",
        "operationId": "EssLeave_Estimate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.leaveCategoryId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "Required",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "Required",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EssLeaveEstimate"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/leave/leavecategories": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Leave Categories",
        "description": "Gets the available leave categories for the employee.",
        "operationId": "EssLeave_LeaveCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssLeaveCategoryModel"
              },
              "xml": {
                "name": "EssLeaveCategoryModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<EssLeaveCategoryModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/lookup/addresses/{suburbId}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "operationId": "AuEssLookup_Addresses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "suburbId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/lookup/location": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Locations",
        "description": "Gets all the locations for the employee.",
        "operationId": "AuEssLookup_Location",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/LocationModel"
              },
              "xml": {
                "name": "LocationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<LocationModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/lookup/shiftcondition": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Shift Conditions",
        "description": "Gets all the shift conditions for the employee.",
        "operationId": "AuEssLookup_ShiftCondition",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuWorkTypeModel"
              },
              "xml": {
                "name": "AuWorkTypeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<AuWorkTypeModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/lookup/suburb": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Suburb",
        "description": "Gets the suburb for the criteria passed in",
        "operationId": "AuEssLookup_Suburb",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "suburb",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "postCode",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "countryId",
            "in": "query",
            "required": false,
            "type": "string",
            "title": "String"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SuburbResult"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/lookup/suburbs": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Search Suburbs",
        "description": "Gets a list of suburbs that match the search term.",
        "operationId": "AuEssLookup_Suburbs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "title": "Int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20,
            "title": "Int32"
          },
          {
            "name": "countryId",
            "in": "query",
            "required": false,
            "type": "string",
            "title": "String"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultModelOfSuburbModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/lookup/title": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Titles",
        "description": "Gets list of valid personal titles",
        "operationId": "AuEssLookup_Title",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/TitleViewModel"
              },
              "xml": {
                "name": "TitleViewModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<TitleViewModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/lookup/worktype": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Work Types",
        "description": "Gets all the work types for the employee.",
        "operationId": "AuEssLookup_WorkType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuWorkTypeModel"
              },
              "xml": {
                "name": "AuWorkTypeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<AuWorkTypeModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/personaldetails": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Personal Details",
        "description": "Gets Personal details for the specified employee.",
        "operationId": "AuEssEmployee_GetEssDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssEmployeeDetailsViewModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ess"
        ],
        "summary": "Update Personal Details",
        "description": "Updates the personal details for the specified employee.\r\nOnly fields to be updated need be specified. Fields left unspecified or null will not be changed.\r\nTo update a field provide the new value, to specifically clear a value use the string \"(clear)\" or \"0\".\r\nValid TitleId values can be obtained from api/v2/ess/{employeeId}/lookup/title\r\nValid SuburbId values can be obtained from api/v2/ess/{employeeId}/lookup/suburbs",
        "operationId": "AuEssEmployee_UpdateDetails",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuEssEmployeeDetailsEditModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssEmployeeDetailsViewModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/profileimage": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Employee Profile Image",
        "description": "Returns the file content for the employee's current profile image.",
        "operationId": "EssProfileImage_GetImage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Set Employee Profile Image",
        "description": "Uploads a new employee profile image. The request should be a MIME multipart file upload request.",
        "operationId": "EssProfileImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProfileImageMetadata"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ess"
        ],
        "summary": "Delete Employee Profile Image",
        "description": "Delete's the employee's profile image.",
        "operationId": "EssProfileImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/publicHolidays": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get public holidays",
        "description": "Lists relevant public holiday for an employee",
        "operationId": "AuEssEmployee_GetPublicHolidays",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "Required",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "Required",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/PublicHolidayModel"
              },
              "xml": {
                "name": "PublicHolidayModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<PublicHolidayModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/qualification": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Qualifications for Employee",
        "description": "Retrieves the qualification details for a single employee.",
        "operationId": "EssQualification_GetQualifications",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssEmployeeQualificationModel"
              },
              "xml": {
                "name": "EssEmployeeQualificationModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IQueryable<EssEmployeeQualificationModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Add Employee Qualification",
        "description": "Creates a qualification for an employee.",
        "operationId": "EssQualification_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "qualification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EssEmployeeQualificationModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/qualification/{employeeQualificationId}/attachment": {
      "put": {
        "tags": [
          "Ess"
        ],
        "summary": "Upload attachment to qualification",
        "description": "Uploads an attachment to the qualification with the specified ID.\r\nThe request should be a MIME multipart file upload request.",
        "operationId": "EssQualification_UploadAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeQualificationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "title": "IHttpActionResult"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/qualification/{employeeQualificationId}/attachment/{documentId}": {
      "delete": {
        "tags": [
          "Ess"
        ],
        "summary": "Delete attachment from EmployeeQualification",
        "description": "Deletes the attachment on the EmployeeQualification with the specified ID.",
        "operationId": "EssQualification_DeleteAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeQualificationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/qualification/{id}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Qualification Details",
        "description": "Gets the details for the qualification with a specific EmployeeQualification ID.",
        "operationId": "EssQualification_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EssEmployeeQualificationModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ess"
        ],
        "summary": "Update Employee Qualification",
        "description": "Updates a qualification for an employee.",
        "operationId": "EssQualification_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "qualification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EssEmployeeQualificationModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Ess"
        ],
        "summary": "Delete Employee Qualification",
        "description": "Deletes an employee qualification. Denotes that the employee is no longer qualified for the specified qualification.",
        "operationId": "EssQualification_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/satisfaction": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Satisfaction Survey Results",
        "description": "Gets satisfaction survey results for the employee",
        "operationId": "AuEssEmployee_GetSatisfactionSurveys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssSatisfactionSurvey"
              },
              "xml": {
                "name": "EssSatisfactionSurvey",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<EssSatisfactionSurvey>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Submit Satisfaction Survey",
        "description": "Submit a satisfaction survey for this employee.",
        "operationId": "AuEssEmployee_SaveSatisfaction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "survey",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EssSatisfactionSurvey"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "NotSet",
                "Happy",
                "Neutral",
                "Sad"
              ],
              "title": "EmployeeSatisfactionValue"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/security/features": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Enabled Features",
        "description": "Gets details as to which ESS features are enabled for the business.",
        "operationId": "AuEssEmployee_Features",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuFeaturesModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/selfmanagedsuperfund": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "List Self Managed Super Funds",
        "description": "Lists all the self managed super funds for the employee.\n\nThis operation supports OData queries (only $filter, $orderby, $top, $skip).",
        "operationId": "AuEssSelfManagedSuperFund_GetFunds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "header",
            "required": false
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/SelfManagedSuperFundModel"
              },
              "xml": {
                "name": "SelfManagedSuperFundModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<SelfManagedSuperFundModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Create ESS Self Managed Super Fund",
        "description": "Create a new self managed super fund for the employee. \r\nTo update existing self managed super funds, please use the PUT method.",
        "operationId": "AuEssSelfManagedSuperFund_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fund",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SelfManagedSuperFundModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/selfmanagedsuperfund/{id}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get ESS Self Managed Super Fund by id",
        "description": "Gets the Self Managed Super Fund by the specified id.",
        "operationId": "AuEssSelfManagedSuperFund_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SelfManagedSuperFundModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ess"
        ],
        "summary": "Update ESS Self Managed Super Fund",
        "description": "Updates an employee self managed super fund.",
        "operationId": "AuEssSelfManagedSuperFund_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "fund",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SelfManagedSuperFundModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "List Roster Shifts",
        "description": "Gets the employee's roster shifts within the date range.",
        "operationId": "AuEssShift_GetShifts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuEssRosterShiftModel"
              },
              "xml": {
                "name": "AuEssRosterShiftModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<AuEssRosterShiftModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/{shiftId}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Roster Shift by ID",
        "description": "Gets the roster shift with the specified ID (as long as it is assigned to this employee).",
        "operationId": "AuEssShift_GetShift",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssRosterShiftModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/{shiftId}/accept": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Accept Roster Shift",
        "description": "Accepts the roster shift with the specified ID.",
        "operationId": "AuEssShift_AcceptRosterShift",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuAcceptRosterShiftResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/{shiftId}/decline": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Decline Roster Shift",
        "description": "Declines the roster shift with the specified ID.",
        "operationId": "AuEssShift_DeclineRosterShift",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EssDeclineRosterShiftModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EssRosterShiftCountModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/{shiftId}/swap/accept": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Accept Shift Swap",
        "description": "Accept a shift swap",
        "operationId": "AuEssShift_AcceptRosterShiftSwap",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssRosterShiftActionResponse"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/{shiftId}/swap/cancel": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Cancel Shift Swap",
        "description": "Cancel a shift swap",
        "operationId": "AuEssShift_CancelRosterShiftSwap",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssRosterShiftActionResponse"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/{shiftId}/swap/candidates": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Employees Eligible For Shift Swap",
        "description": "List the employees that are eligible for a shift swap",
        "operationId": "AuEssShift_EmployeesEligibleForShiftSwap",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssShiftSwapCandidate"
              },
              "xml": {
                "name": "EssShiftSwapCandidate",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<EssShiftSwapCandidate>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/{shiftId}/swap/decline": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Decline Shift Swap",
        "description": "Decline a shift swap",
        "operationId": "AuEssShift_DeclineRosterShiftSwap",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssRosterShiftActionResponse"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/accept": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Bulk Accept Roster Shifts",
        "description": "Accepts a number of roster shifts by ID.",
        "operationId": "AuEssShift_AcceptRosterShifts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EssBulkAcceptRosterShiftsModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuAcceptRosterShiftsResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/decline": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Bulk Decline Roster Shifts",
        "description": "Declines a number of roster shifts by ID.",
        "operationId": "AuEssShift_DeclineRosterShifts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EssBulkDeclineRosterShiftsModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EssRosterShiftCountModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/matchingclockoff": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Find Matching Clock Off Roster Shift",
        "description": "If a roster shift exists that could match for this employee to clock off at this time\r\ngiven ESS settings for shift matching, returns that shift.\r\nOtherwise, the Shift result will be null.\r\nNote that if the time matches a shift exactly, the Shift result will also be null.",
        "operationId": "AuEssShift_MatchingClockOffRosterShift",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "localTime",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuRosterShiftMatchingResultModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/matchingclockon": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Find Matching Clock On Roster Shift",
        "description": "If a roster shift exists that could match for this employee to clock on at this time\r\ngiven ESS settings for shift matching, returns that shift.\r\nOtherwise, the Shift result will be null.\r\nNote that if the time matches a shift exactly, the Shift result will also be null.\r\nHowever, if allowNotEnded is set to true, the ongoing shift will be returned.",
        "operationId": "AuEssShift_MatchingClockOnRosterShift",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "localTime",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "allowNotEnded",
            "in": "query",
            "required": true,
            "type": "boolean",
            "title": "Nullable<Boolean>"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuRosterShiftMatchingResultModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/nearby": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Find Nearby Roster Shifts",
        "description": "Finds any of the employee's roster shifts that are nearby to the specified local time.",
        "operationId": "AuEssShift_NearbyRosterShifts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "localTime",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuEssRosterShiftModel"
              },
              "xml": {
                "name": "AuEssRosterShiftModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<AuEssRosterShiftModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/swap/accept": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Bulk Accept Roster Shift Swaps",
        "description": "Accepts a number of roster shift swaps by shift ID.",
        "operationId": "AuEssShift_AcceptRosterShiftSwaps",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EssBulkRosterShiftSwapModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssBulkRosterShiftActionResponse"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/swap/cancel": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Bulk Cancel Roster Shift Swaps",
        "description": "Cancels a number of roster shift swaps by shift ID.",
        "operationId": "AuEssShift_CancelRosterShiftSwaps",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EssBulkRosterShiftSwapModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssBulkRosterShiftActionResponse"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/swap/decline": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Bulk Decline Roster Shift Swaps",
        "description": "Declines a number of roster shift swaps by shift ID.",
        "operationId": "AuEssShift_DeclineRosterShiftSwaps",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EssBulkRosterShiftSwapModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssBulkRosterShiftActionResponse"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/shift/swap/propose": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Propose Shift Swap",
        "description": "Propose a shift swap",
        "operationId": "AuEssShift_ProposeRosterShiftSwap",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SwapShiftModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssRosterShiftActionResponse"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/superfunds": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "List Super Funds",
        "description": "Lists all of the super funds for this employee.",
        "operationId": "AuEssSuperFund_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/SuperFundModel"
              },
              "xml": {
                "name": "SuperFundModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<SuperFundModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Create Super Fund",
        "description": "Creates a new super fund for the employee.",
        "operationId": "AuEssSuperFund_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveSuperFundModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveSuperFundResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/superfunds/{id}": {
      "put": {
        "tags": [
          "Ess"
        ],
        "summary": "Update Super Fund",
        "description": "Updates the employee's super fund with the specified ID.",
        "operationId": "AuEssSuperFund_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveSuperFundModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveSuperFundResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/superfunds/{superfundId}": {
      "delete": {
        "tags": [
          "Ess"
        ],
        "summary": "Delete Super Fund",
        "description": "Deletes the employee's super fund with the specified ID.",
        "operationId": "AuEssSuperFund_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "superfundId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveSuperFundResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/superfunds/{superFundId}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Super Fund by ID",
        "description": "Gets the super fund for this employee with the specified ID.",
        "operationId": "AuEssSuperFund_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "superFundId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SuperFundModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/superfunds/productsearch": {
      "get": {
        "tags": [
          "Ess"
        ],
        "operationId": "AuEssSuperFund_ProductSearch",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "required": true,
            "type": "string",
            "title": "String"
          },
          {
            "name": "searchBy",
            "in": "query",
            "required": false,
            "type": "string",
            "default": 0,
            "enum": [
              "All",
              "Usi",
              "Abn",
              "Name"
            ],
            "title": "SuperFundSearchBy"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/SuperProductEditModel"
              },
              "xml": {
                "name": "SuperProductEditModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<SuperProductEditModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/superfunds/swagrequired2fa": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "List Super Funds",
        "description": "Lists all of the super funds for this employee.",
        "operationId": "AuEssSuperFund_GetApiV2EssByEmployeeIdSuperfundsSwagrequired2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/SuperFundModel"
              },
              "xml": {
                "name": "SuperFundModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<SuperFundModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/timeandattendance/clockoff": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Clock Out Employee",
        "description": "Clocks out the employee from their existing shift.\r\nIf they are on a break, it will be ended automatically.",
        "operationId": "AuEssTimeAndAttendance_ClockOffEmployee",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClockOffModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/timeandattendance/clockon": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Clock In Employee",
        "description": "Clocks in an employee for a new shift.",
        "operationId": "AuEssTimeAndAttendance_ClockOn",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuClockOnModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KioskEmployeeModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/timeandattendance/discard": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Discard current shift",
        "description": "Discards the current shift for an employee.\r\nIf they are on a break, it will be ended automatically.",
        "operationId": "AuEssTimeAndAttendance_DiscardCurrentShift",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClockOffModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/timeandattendance/endbreak": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "End Break",
        "description": "Ends the employee's current break.",
        "operationId": "AuEssTimeAndAttendance_EndShiftBreak",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndBreakModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/timeandattendance/lookupdata": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Lookup Data",
        "description": "Gets relevant lookup data for the employee in relation to a kiosk.",
        "operationId": "AuEssTimeAndAttendance_GetLookupData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuTimeAndAttendanceLookupDataModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/timeandattendance/shift/{shiftId}/notes": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Shift Notes",
        "description": "Gets shifts based on certain optional criteria.",
        "operationId": "AuEssTimeAndAttendance_GetShiftNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model.employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model.isAdminInitiated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "model.type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Shift",
              "ClockOn",
              "ClockOff"
            ],
            "title": "Nullable<TimeAttendanceShiftNoteType>"
          },
          {
            "name": "model.visibility",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Hidden",
              "Visible"
            ],
            "title": "Nullable<TimeAttendanceShiftNoteVisibility>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Add Note to Shift",
        "description": "Adds a note to an existing shift.",
        "operationId": "AuEssTimeAndAttendance_AddShiftNote",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddNoteModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/timeandattendance/shift/{shiftId}/notes/read-state": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Mark Shift Notes Read",
        "description": "Marks some shift notes as either read or unread.",
        "operationId": "AuEssTimeAndAttendance_MarkShiftNotesRead",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarkNotesReadViewModel"
            }
          },
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/timeandattendance/shifts": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Shifts",
        "description": "Gets shifts based on certain optional criteria.",
        "operationId": "AuEssTimeAndAttendance_GetShifts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetShiftsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuTimeAndAttendanceShiftModel"
              },
              "xml": {
                "name": "AuTimeAndAttendanceShiftModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<AuTimeAndAttendanceShiftModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/timeandattendance/startbreak": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Start Break",
        "description": "Starts a break for the employee who is clocked on for a shift.",
        "operationId": "AuEssTimeAndAttendance_StartShiftBreak",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartBreakModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/timesheet": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "List Timesheets",
        "description": "Lists timesheets for the employee.",
        "operationId": "AuEssTimesheet_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "Required",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "Required",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssTimesheetModel"
              },
              "xml": {
                "name": "EssTimesheetModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<EssTimesheetModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Submit or Update Timesheet",
        "description": "If no ID is specified, create a new timesheet for the employee. \r\nOtherwise, update the timesheet with the specified ID.",
        "operationId": "AuEssTimesheet_Save",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timesheet",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EssTimesheetModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/timesheet/{timesheetId}": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Edit Timesheet",
        "description": "Edits the timesheet with the specified ID.",
        "operationId": "AuEssTimesheet_Edit",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timesheetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "timesheet",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EssTimesheetModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Ess"
        ],
        "summary": "Delete Timesheet",
        "description": "Deletes the timesheet with the specified ID.",
        "operationId": "AuEssTimesheet_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "timesheetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/timesheet/data": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Timesheet Creation Data",
        "description": "Lists relevant timesheet, leave and shift data for an employee, to allow for intuitive timesheet creation.",
        "operationId": "AuEssTimesheet_Data",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "Required",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "Required",
            "required": true,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuEssTimesheetDataModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/unavailability": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "List Unavailabilities",
        "description": "Lists all of the unavailabilities for this employee, with optional filters.",
        "operationId": "EssUnavailability_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/EssUnavailabilityModel"
              },
              "xml": {
                "name": "EssUnavailabilityModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<EssUnavailabilityModel>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Create Unavailability",
        "description": "Creates a new unavailability for the employee.",
        "operationId": "EssUnavailability_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "unavailability",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnavailabilityEditModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EssUnavailabilityModel"
            }
          }
        }
      }
    },
    "/api/v2/ess/{employeeId}/unavailability/{unavailabilityId}": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get unavailability by ID",
        "description": "Gets the unavailability with the specified ID (so long as the unavailability is from the specified employee).",
        "operationId": "EssUnavailability_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "unavailabilityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EssUnavailabilityModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ess"
        ],
        "summary": "Update Unavailability",
        "description": "Updates the unavailability with the specified ID.",
        "operationId": "EssUnavailability_Save",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "unavailabilityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "unavailability",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnavailabilityEditModel"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Ess"
        ],
        "summary": "Delete Unavailability",
        "description": "Deletes the unavailability with the specified ID.",
        "operationId": "EssUnavailability_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "unavailabilityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/devicetoken/register": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Register Device Token",
        "description": "Registers a device token.",
        "operationId": "EssDeviceToken_Register",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceTokenModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/devicetoken/unregister": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Unregister Device Token",
        "description": "Unregisters a device token.",
        "operationId": "EssDeviceToken_Unregister",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceTokenModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/ess/security/employees": {
      "get": {
        "tags": [
          "Ess"
        ],
        "summary": "Get Employees",
        "description": "Returns all the employees the user can access.",
        "operationId": "EssSecurity_Employees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AvailableEmployeeModel"
              },
              "xml": {
                "name": "AvailableEmployeeModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<AvailableEmployeeModel>"
            }
          }
        }
      }
    },
    "/api/v2/ess/security/forgottenpassword": {
      "post": {
        "tags": [
          "Ess"
        ],
        "summary": "Recover Forgotten Password",
        "description": "Sends an email so that the user can reset their password",
        "operationId": "EssSecurity_ForgottenPassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecoverPasswordModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/lookupdata/countries": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "List countries",
        "operationId": "LookupData_Countries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/NameIdPair"
              },
              "xml": {
                "name": "NameIdPair",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<NameIdPair>"
            }
          }
        }
      }
    },
    "/api/v2/lookupdata/employeegrouppermissions": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "List Employee Group Permission Types",
        "description": "Lists all of the employee group permission types.",
        "operationId": "LookupData_EmployeeGroupPermissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/NameIdPair"
              },
              "xml": {
                "name": "NameIdPair",
                "wrapped": true
              },
              "type": "array",
              "title": "List<NameIdPair>"
            }
          }
        }
      }
    },
    "/api/v2/lookupdata/genders": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "List gender options",
        "operationId": "LookupData_Genders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "string",
                "title": "String"
              },
              "type": "array",
              "title": "List<String>"
            }
          }
        }
      }
    },
    "/api/v2/lookupdata/industries": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "List industry options",
        "operationId": "LookupData_Industries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "string",
                "title": "String"
              },
              "type": "array",
              "title": "IList<String>"
            }
          }
        }
      }
    },
    "/api/v2/lookupdata/reports": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "List Report Types",
        "description": "Lists all of the report types.",
        "operationId": "LookupData_Reports",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/NameIdPair"
              },
              "xml": {
                "name": "NameIdPair",
                "wrapped": true
              },
              "type": "array",
              "title": "List<NameIdPair>"
            }
          }
        }
      }
    },
    "/api/v2/lookupdata/timezones": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "List Time Zone Types",
        "description": "Lists all of the time zone types.",
        "operationId": "LookupData_TimeZones",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/NameIdPair"
              },
              "xml": {
                "name": "NameIdPair",
                "wrapped": true
              },
              "type": "array",
              "title": "List<NameIdPair>"
            }
          }
        }
      }
    },
    "/api/v2/manager/security/businesses": {
      "get": {
        "tags": [
          "Manager"
        ],
        "summary": "List Businesses",
        "description": "Returns all the businesses the user can access.",
        "operationId": "AuManagerSecurity_Businesses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuAvailableBusinessModel"
              },
              "xml": {
                "name": "AuAvailableBusinessModel",
                "wrapped": true
              },
              "type": "array",
              "title": "List<AuAvailableBusinessModel>"
            }
          }
        }
      }
    },
    "/api/v2/reseller": {
      "get": {
        "tags": [
          "Reseller"
        ],
        "summary": "List Resellers",
        "description": "Lists all the resellers to which you have access.",
        "operationId": "Reseller_GetResellers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ResellerModel"
              },
              "xml": {
                "name": "ResellerModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<ResellerModel>"
            }
          }
        }
      }
    },
    "/api/v2/reseller/{id}": {
      "get": {
        "tags": [
          "Reseller"
        ],
        "summary": "Get Reseller by ID",
        "description": "Gets the resellers with the specified ID.",
        "operationId": "Reseller_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResellerModel"
            }
          }
        }
      }
    },
    "/api/v2/reseller/{resellerId}/Invoice": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Reseller Invoices",
        "description": "Get invoices for the specified Reseller.",
        "operationId": "Invoice_GetResellerInvoices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resellerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          },
          {
            "name": "options.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          },
          {
            "name": "options.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "Nullable<DateTime>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/InvoiceModel"
              },
              "xml": {
                "name": "InvoiceModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<InvoiceModel>"
            }
          }
        }
      }
    },
    "/api/v2/reseller/{resellerId}/Invoice/{id}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Reseller Invoice By ID",
        "description": "Gets the Reseller invoice with the specified ID.",
        "operationId": "Invoice_GetResellerInvoiceById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "resellerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvoiceModel"
            }
          }
        }
      }
    },
    "/api/v2/reseller/{resellerId}/Invoice/{id}/excel": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Reseller Invoice Excel By ID",
        "description": "Gets the Reseller invoice Excel with the specified ID.",
        "operationId": "Invoice_GetResellerInvoiceExcelById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "resellerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/reseller/{resellerId}/Invoice/{id}/pdf": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Reseller Invoice PDF By ID",
        "description": "Gets the Reseller invoice PDF with the specified ID.",
        "operationId": "Invoice_GetResellerInvoicePdfById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "resellerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ByteArrayContent"
            }
          }
        }
      }
    },
    "/api/v2/singlesignon": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Single Sign On",
        "description": "Request for SSO URL that provides authenticated access to KeyPay. See the guide on <a href=\"http://api.keypay.com.au/guides/SSO\">SSO Requests</a> for more details.",
        "operationId": "SingleSignOn_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleSignOnRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleSignOnResponseModel"
            }
          }
        }
      }
    },
    "/api/v2/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Details",
        "description": "Gets details about the user.",
        "operationId": "User_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update User",
        "description": "This is currently restricted to updating the user's \"email confirmation\" status only.\r\nThe API user (brand manager or reseller) must have brand exclusive access to the user\r\ni.e. the user must only have access to businesses/employees that the API user manages.",
        "operationId": "User_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserUpdatedModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create New User",
        "description": "Creates a new user and sends an email to inform the user.\r\n\r\nIn order to make sure that the correct brand details are included in the email, be sure to `POST` the API request to `https://{yourbrand}.yourpayroll.com.au`.<br />\r\nTo prevent sending of the new user email, set `apiOnly` to `true` in the request.",
        "operationId": "User_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUserModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NewUserCreatedModel"
            }
          }
        }
      }
    },
    "/api/v2/whitelabel": {
      "get": {
        "tags": [
          "WhiteLabel"
        ],
        "summary": "List White Labels",
        "description": "Lists all the white labels to which you have access.",
        "operationId": "WhiteLabel_GetWhiteLabels",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/WhiteLabelModel"
              },
              "xml": {
                "name": "WhiteLabelModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IEnumerable<WhiteLabelModel>"
            }
          }
        }
      }
    },
    "/api/v2/whitelabel/{id}": {
      "get": {
        "tags": [
          "WhiteLabel"
        ],
        "summary": "Get White Label by ID",
        "description": "Gets the white label with the specified ID.",
        "operationId": "WhiteLabel_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WhiteLabelModel"
            }
          }
        }
      }
    },
    "/api/v2/whitelabel/{whiteLabelId}/reports/activeemployees": {
      "get": {
        "tags": [
          "WhiteLabel"
        ],
        "summary": "Active Employees Report",
        "description": "White Label Active Employees Report",
        "operationId": "AuWhiteLabelActiveEmployeeReport_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "whiteLabelId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.emailAddresses",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "title": "String"
          },
          {
            "name": "request.includeInactiveBusinesses",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean",
            "title": "Boolean"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AuActiveEmployeesModel"
              },
              "xml": {
                "name": "AuActiveEmployeesModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<AuActiveEmployeesModel>"
            }
          }
        }
      }
    },
    "/api/v2/whitelabel/{whitelabelId}/reports/signups": {
      "get": {
        "tags": [
          "WhiteLabel"
        ],
        "summary": "Signup Report",
        "description": "White Label sign up report",
        "operationId": "WhiteLabelReport_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "whitelabelId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.emailAddresses",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "title": "String"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time",
            "title": "DateTime"
          },
          {
            "name": "request.locationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          {
            "name": "request.employingEntityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "title": "Nullable<Int32>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/SignupModel"
              },
              "xml": {
                "name": "SignupModel",
                "wrapped": true
              },
              "type": "array",
              "title": "IList<SignupModel>"
            }
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "OAuth Token",
        "description": "See the guide on <a href=\"http://api.keypay.com.au/guides/OAuth2\">OAuth2 authentication</a> for more details.",
        "operationId": "Token_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "header",
            "required": true,
            "type": "object",
            "title": "HttpRequestMessage"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "ODataQueryOptionsOfAbaDetails": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<AbaDetails>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<AbaDetails>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<AbaDetails>"
    },
    "ODataQueryContext": {
      "properties": {
        "model": {
          "$ref": "#/definitions/IEdmModel",
          "description": "",
          "readOnly": true
        },
        "elementType": {
          "$ref": "#/definitions/IEdmType",
          "description": "",
          "readOnly": true
        },
        "elementClrType": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "Type"
        }
      },
      "xml": {
        "name": "ODataQueryContext"
      },
      "type": "object",
      "title": "ODataQueryContext"
    },
    "ODataRawQueryOptions": {
      "properties": {
        "filter": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "orderBy": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "top": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "skip": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "select": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "expand": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "inlineCount": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "format": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "skipToken": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ODataRawQueryOptions"
      },
      "type": "object",
      "title": "ODataRawQueryOptions"
    },
    "SelectExpandQueryOption": {
      "properties": {
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "rawSelect": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "rawExpand": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "validator": {
          "$ref": "#/definitions/SelectExpandQueryValidator",
          "description": ""
        },
        "selectExpandClause": {
          "$ref": "#/definitions/SelectExpandClause",
          "description": "",
          "readOnly": true
        }
      },
      "xml": {
        "name": "SelectExpandQueryOption"
      },
      "type": "object",
      "title": "SelectExpandQueryOption"
    },
    "FilterQueryOption": {
      "properties": {
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/FilterQueryValidator",
          "description": ""
        },
        "filterClause": {
          "$ref": "#/definitions/FilterClause",
          "description": "",
          "readOnly": true
        },
        "rawValue": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "FilterQueryOption"
      },
      "type": "object",
      "title": "FilterQueryOption"
    },
    "OrderByQueryOption": {
      "properties": {
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "orderByNodes": {
          "description": "",
          "items": {
            "$ref": "#/definitions/OrderByNode"
          },
          "readOnly": true,
          "xml": {
            "name": "OrderByNode",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<OrderByNode>"
        },
        "rawValue": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "validator": {
          "$ref": "#/definitions/OrderByQueryValidator",
          "description": ""
        },
        "orderByClause": {
          "$ref": "#/definitions/OrderByClause",
          "description": "",
          "readOnly": true
        }
      },
      "xml": {
        "name": "OrderByQueryOption"
      },
      "type": "object",
      "title": "OrderByQueryOption"
    },
    "SkipQueryOption": {
      "properties": {
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "rawValue": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "value": {
          "description": "",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "validator": {
          "$ref": "#/definitions/SkipQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "SkipQueryOption"
      },
      "type": "object",
      "title": "SkipQueryOption"
    },
    "TopQueryOption": {
      "properties": {
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "rawValue": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "value": {
          "description": "",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "validator": {
          "$ref": "#/definitions/TopQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "TopQueryOption"
      },
      "type": "object",
      "title": "TopQueryOption"
    },
    "InlineCountQueryOption": {
      "properties": {
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "rawValue": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "value": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "AllPages"
          ],
          "title": "InlineCountValue"
        }
      },
      "xml": {
        "name": "InlineCountQueryOption"
      },
      "type": "object",
      "title": "InlineCountQueryOption"
    },
    "ODataQueryValidator": {
      "properties": {},
      "xml": {
        "name": "ODataQueryValidator"
      },
      "type": "object",
      "title": "ODataQueryValidator"
    },
    "IEdmModel": {
      "properties": {
        "schemaElements": {
          "description": "",
          "items": {
            "$ref": "#/definitions/IEdmSchemaElement"
          },
          "readOnly": true,
          "xml": {
            "name": "IEdmSchemaElement",
            "wrapped": true
          },
          "type": "array",
          "title": "IEnumerable<IEdmSchemaElement>"
        },
        "vocabularyAnnotations": {
          "description": "",
          "items": {
            "$ref": "#/definitions/IEdmVocabularyAnnotation"
          },
          "readOnly": true,
          "xml": {
            "name": "IEdmVocabularyAnnotation",
            "wrapped": true
          },
          "type": "array",
          "title": "IEnumerable<IEdmVocabularyAnnotation>"
        },
        "referencedModels": {
          "description": "",
          "items": {
            "$ref": "#/definitions/IEdmModel"
          },
          "readOnly": true,
          "xml": {
            "name": "IEdmModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IEnumerable<IEdmModel>"
        },
        "directValueAnnotationsManager": {
          "$ref": "#/definitions/IEdmDirectValueAnnotationsManager",
          "description": "",
          "readOnly": true
        }
      },
      "xml": {
        "name": "IEdmModel"
      },
      "type": "object",
      "title": "IEdmModel"
    },
    "IEdmType": {
      "properties": {
        "typeKind": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "Primitive",
            "Entity",
            "Complex",
            "Row",
            "Collection",
            "EntityReference",
            "Enum"
          ],
          "title": "EdmTypeKind"
        }
      },
      "xml": {
        "name": "IEdmType"
      },
      "type": "object",
      "title": "IEdmType"
    },
    "SelectExpandQueryValidator": {
      "properties": {},
      "xml": {
        "name": "SelectExpandQueryValidator"
      },
      "type": "object",
      "title": "SelectExpandQueryValidator"
    },
    "SelectExpandClause": {
      "properties": {
        "selectedItems": {
          "description": "",
          "items": {
            "$ref": "#/definitions/SelectItem"
          },
          "readOnly": true,
          "xml": {
            "name": "SelectItem",
            "wrapped": true
          },
          "type": "array",
          "title": "IEnumerable<SelectItem>"
        },
        "allSelected": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "SelectExpandClause"
      },
      "type": "object",
      "title": "SelectExpandClause"
    },
    "FilterQueryValidator": {
      "properties": {},
      "xml": {
        "name": "FilterQueryValidator"
      },
      "type": "object",
      "title": "FilterQueryValidator"
    },
    "FilterClause": {
      "properties": {
        "expression": {
          "$ref": "#/definitions/SingleValueNode",
          "description": "",
          "readOnly": true
        },
        "rangeVariable": {
          "$ref": "#/definitions/RangeVariable",
          "description": "",
          "readOnly": true
        },
        "itemType": {
          "$ref": "#/definitions/IEdmTypeReference",
          "description": "",
          "readOnly": true
        }
      },
      "xml": {
        "name": "FilterClause"
      },
      "type": "object",
      "title": "FilterClause"
    },
    "OrderByNode": {
      "properties": {
        "direction": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Ascending",
            "Descending"
          ],
          "title": "OrderByDirection"
        }
      },
      "xml": {
        "name": "OrderByNode"
      },
      "type": "object",
      "title": "OrderByNode"
    },
    "OrderByQueryValidator": {
      "properties": {},
      "xml": {
        "name": "OrderByQueryValidator"
      },
      "type": "object",
      "title": "OrderByQueryValidator"
    },
    "OrderByClause": {
      "properties": {
        "thenBy": {
          "$ref": "#/definitions/OrderByClause",
          "description": "",
          "readOnly": true
        },
        "expression": {
          "$ref": "#/definitions/SingleValueNode",
          "description": "",
          "readOnly": true
        },
        "direction": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Ascending",
            "Descending"
          ],
          "title": "OrderByDirection"
        },
        "rangeVariable": {
          "$ref": "#/definitions/RangeVariable",
          "description": "",
          "readOnly": true
        },
        "itemType": {
          "$ref": "#/definitions/IEdmTypeReference",
          "description": "",
          "readOnly": true
        }
      },
      "xml": {
        "name": "OrderByClause"
      },
      "type": "object",
      "title": "OrderByClause"
    },
    "SkipQueryValidator": {
      "properties": {},
      "xml": {
        "name": "SkipQueryValidator"
      },
      "type": "object",
      "title": "SkipQueryValidator"
    },
    "TopQueryValidator": {
      "properties": {},
      "xml": {
        "name": "TopQueryValidator"
      },
      "type": "object",
      "title": "TopQueryValidator"
    },
    "IEdmSchemaElement": {
      "properties": {
        "schemaElementKind": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "TypeDefinition",
            "Function",
            "ValueTerm",
            "EntityContainer"
          ],
          "title": "EdmSchemaElementKind"
        },
        "namespace": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "name": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "IEdmSchemaElement"
      },
      "type": "object",
      "title": "IEdmSchemaElement"
    },
    "IEdmVocabularyAnnotation": {
      "properties": {
        "qualifier": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "term": {
          "$ref": "#/definitions/IEdmTerm",
          "description": "",
          "readOnly": true
        },
        "target": {
          "$ref": "#/definitions/IEdmVocabularyAnnotatable",
          "description": "",
          "readOnly": true
        }
      },
      "xml": {
        "name": "IEdmVocabularyAnnotation"
      },
      "type": "object",
      "title": "IEdmVocabularyAnnotation"
    },
    "IEdmDirectValueAnnotationsManager": {
      "properties": {},
      "xml": {
        "name": "IEdmDirectValueAnnotationsManager"
      },
      "type": "object",
      "title": "IEdmDirectValueAnnotationsManager"
    },
    "SelectItem": {
      "properties": {},
      "xml": {
        "name": "SelectItem"
      },
      "type": "object",
      "title": "SelectItem"
    },
    "SingleValueNode": {
      "properties": {
        "typeReference": {
          "$ref": "#/definitions/IEdmTypeReference",
          "description": "",
          "readOnly": true
        },
        "kind": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "Constant",
            "Convert",
            "NonentityRangeVariableReference",
            "BinaryOperator",
            "UnaryOperator",
            "SingleValuePropertyAccess",
            "CollectionPropertyAccess",
            "SingleValueFunctionCall",
            "Any",
            "CollectionNavigationNode",
            "SingleNavigationNode",
            "SingleValueOpenPropertyAccess",
            "SingleEntityCast",
            "All",
            "EntityCollectionCast",
            "EntityRangeVariableReference",
            "SingleEntityFunctionCall",
            "CollectionFunctionCall",
            "EntityCollectionFunctionCall",
            "NamedFunctionParameter"
          ],
          "title": "QueryNodeKind"
        }
      },
      "xml": {
        "name": "SingleValueNode"
      },
      "type": "object",
      "title": "SingleValueNode"
    },
    "RangeVariable": {
      "properties": {
        "name": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "typeReference": {
          "$ref": "#/definitions/IEdmTypeReference",
          "description": "",
          "readOnly": true
        },
        "kind": {
          "description": "",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "RangeVariable"
      },
      "type": "object",
      "title": "RangeVariable"
    },
    "IEdmTypeReference": {
      "properties": {
        "isNullable": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "definition": {
          "$ref": "#/definitions/IEdmType",
          "description": "",
          "readOnly": true
        }
      },
      "xml": {
        "name": "IEdmTypeReference"
      },
      "type": "object",
      "title": "IEdmTypeReference"
    },
    "IEdmTerm": {
      "properties": {
        "termKind": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "Type",
            "Value"
          ],
          "title": "EdmTermKind"
        },
        "schemaElementKind": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "TypeDefinition",
            "Function",
            "ValueTerm",
            "EntityContainer"
          ],
          "title": "EdmSchemaElementKind"
        },
        "namespace": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "name": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "IEdmTerm"
      },
      "type": "object",
      "title": "IEdmTerm"
    },
    "IEdmVocabularyAnnotatable": {
      "properties": {},
      "xml": {
        "name": "IEdmVocabularyAnnotatable"
      },
      "type": "object",
      "title": "IEdmVocabularyAnnotatable"
    },
    "BusinessAbaModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "bsb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "financialInstitutionCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "lodgementReference": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "userName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "userId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "includeSelfBalancingTransaction": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "mergeMultipleAccountPayments": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "balanceLodgementReference": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paymentAdditionalContent": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "PeriodEndingDate",
            "PaymentDate",
            "EmployeeId",
            "PayRunId"
          ],
          "title": "Nullable<PaymentFilePaymentAdditionalContent>"
        },
        "balanceAdditionalContent": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "PeriodEndingDate",
            "PaymentDate",
            "PayRunId"
          ],
          "title": "Nullable<PaymentFileBalanceAdditionalContent>"
        }
      },
      "xml": {
        "name": "BusinessAbaModel"
      },
      "type": "object",
      "title": "BusinessAbaModel"
    },
    "SingleSignOnRequestModel": {
      "properties": {
        "businessId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "userName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "url": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "navigation": {
          "description": "",
          "type": "string",
          "enum": [
            "Full",
            "Primary",
            "Secondary",
            "None",
            "HideInternalPageNav"
          ],
          "title": "NavigationDisplayEnum"
        },
        "hostName": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "SingleSignOnRequestModel"
      },
      "type": "object",
      "title": "SingleSignOnRequestModel"
    },
    "SingleSignOnRequestAdditionalDataModel": {
      "properties": {
        "organisationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "memberId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "SingleSignOnRequestAdditionalDataModel"
      },
      "type": "object",
      "title": "SingleSignOnRequestAdditionalDataModel"
    },
    "SingleSignOnResponseModel": {
      "properties": {
        "url": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "SingleSignOnResponseModel"
      },
      "type": "object",
      "title": "SingleSignOnResponseModel"
    },
    "MagicTokenResponseModel": {
      "properties": {
        "success": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "MagicTokenResponseModel"
      },
      "type": "object",
      "title": "MagicTokenResponseModel"
    },
    "SystemEventType": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "SystemEventType"
      },
      "type": "object",
      "title": "SystemEventType"
    },
    "BusinessTemplateModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "BusinessTemplateModel"
      },
      "type": "object",
      "title": "BusinessTemplateModel"
    },
    "BrandModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "BrandModel"
      },
      "type": "object",
      "title": "BrandModel"
    },
    "WhiteLabelActiveEmployeesRequestModel": {
      "properties": {
        "emailAddresses": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "includeInactiveBusinesses": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "WhiteLabelActiveEmployeesRequestModel"
      },
      "type": "object",
      "title": "WhiteLabelActiveEmployeesRequestModel"
    },
    "AuActiveEmployeesModel": {
      "properties": {
        "abn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isStpEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "businessId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "businessName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "billingPlan": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "realmId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "emailAddresses": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "userIds": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "numberOfIncompleteEmployees": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "numberOfCompleteEmployees": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "numberOfEmployeesPaid": {
          "description": "",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "numberOfPayRuns": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "dateLastPayRunFinalised": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "dateLastBillableActivity": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "activeEmps": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "AuActiveEmployeesModel"
      },
      "type": "object",
      "title": "AuActiveEmployeesModel"
    },
    "WhiteLabelReportSignupsRequestModel": {
      "properties": {
        "emailAddresses": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "WhiteLabelReportSignupsRequestModel"
      },
      "type": "object",
      "title": "WhiteLabelReportSignupsRequestModel"
    },
    "SignupModel": {
      "properties": {
        "businessId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "businessName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "billingPlan": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "realmId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "emailAddresses": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "userIds": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "numberOfCompleteEmployees": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "numberOfIncompleteEmployees": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "dateLastPayRunFinalised": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "SignupModel"
      },
      "type": "object",
      "title": "SignupModel"
    },
    "AuBusinessLeaveSettingsModel": {
      "properties": {
        "leaveCalculationMethod": {
          "description": "",
          "type": "string",
          "enum": [
            "FullYear365",
            "Workdays261"
          ],
          "title": "LeaveEntitlementCalculationMethodEnum"
        },
        "requireNotesForLeaveRequests": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "leaveYearShouldStartOn": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "leaveAccrualStartDateType": {
          "description": "",
          "type": "string",
          "enum": [
            "EmployeeStartDate",
            "SpecifiedDate",
            "CalendarYear",
            "CategorySpecificDate"
          ],
          "title": "LeaveAccrualStartDateType"
        }
      },
      "xml": {
        "name": "AuBusinessLeaveSettingsModel"
      },
      "type": "object",
      "title": "AuBusinessLeaveSettingsModel"
    },
    "AuEditBusinessPaySlipApiModel": {
      "properties": {
        "superContributionProcessingFrequencyTextOption": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Quarterly",
            "Monthly"
          ],
          "title": "PaySlipSuperContributionProcessingFrequencyTextOption"
        },
        "showClassification": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showBasePayRate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showEmployeeId": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showRateForAnnualEarnings": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "emailFrom": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "emailBodyMessage": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "showLeaveAccruals": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showLineNotes": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showLocationInLineNotes": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "alphabetisePayCategories": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showEmployeeExternalId": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employeesMustLoginToDownloadPayslips": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuEditBusinessPaySlipApiModel"
      },
      "type": "object",
      "title": "AuEditBusinessPaySlipApiModel"
    },
    "AuBillingPlanResponseModel": {
      "properties": {
        "superInclusion": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Weekly",
            "Monthly",
            "Quarterly"
          ],
          "title": "SuperInclusionTypeEnum"
        },
        "functionPayConditions": {
          "description": "",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "Upsell",
            "ComingSoon"
          ],
          "title": "FunctionToggle"
        },
        "functionAwards": {
          "description": "",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "Upsell",
            "ComingSoon"
          ],
          "title": "FunctionToggle"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "type": {
          "description": "",
          "type": "string",
          "enum": [
            "PerEmployeePerMonth",
            "License",
            "PerHourPaid"
          ],
          "title": "PricingModelTypeEnum"
        },
        "pricePerUnit": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "pricePerSms": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "includedEmployees": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "functionRostering": {
          "description": "",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "Upsell",
            "ComingSoon"
          ],
          "title": "FunctionToggle"
        },
        "functionTimeAndAttendance": {
          "description": "",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "Upsell",
            "ComingSoon"
          ],
          "title": "FunctionToggle"
        },
        "functionEmployeeOnboarding": {
          "description": "",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "Upsell",
            "ComingSoon"
          ],
          "title": "FunctionToggle"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isHidden": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuBillingPlanResponseModel"
      },
      "type": "object",
      "title": "AuBillingPlanResponseModel"
    },
    "SetBillingPlanRequestModel": {
      "properties": {
        "billingPlanId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "SetBillingPlanRequestModel"
      },
      "type": "object",
      "title": "SetBillingPlanRequestModel"
    },
    "BusinessAccessModel": {
      "properties": {
        "accessType": {
          "description": "",
          "type": "string",
          "enum": [
            "Unrestricted",
            "Restricted"
          ],
          "title": "RelatedUserType"
        },
        "employeeGroups": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EmployeeGroupAccessModel"
          },
          "xml": {
            "name": "EmployeeGroupAccessModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<EmployeeGroupAccessModel>"
        },
        "locationAccess": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LocationAccessModel"
          },
          "xml": {
            "name": "LocationAccessModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<LocationAccessModel>"
        },
        "reports": {
          "$ref": "#/definitions/ReportAccessModel",
          "description": ""
        },
        "kioskAccess": {
          "$ref": "#/definitions/KioskAccessModel",
          "description": ""
        },
        "payrollAccess": {
          "$ref": "#/definitions/PayrollAccessModel",
          "description": ""
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "BusinessAccessModel"
      },
      "type": "object",
      "title": "BusinessAccessModel"
    },
    "EmployeeGroupAccessModel": {
      "properties": {
        "employeeGroupId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "permissions": {
          "description": "",
          "type": "string",
          "enum": [
            "ApproveTimesheets",
            "ApproveLeaveRequests",
            "CreateTimesheets",
            "CreateLeaveRequests",
            "ViewLeaveRequests",
            "ManageRosters",
            "ViewRosters",
            "ViewShiftCosts",
            "ViewExpenses",
            "CreateExpenses",
            "ApproveExpenses",
            "CreateTasks",
            "ViewEmployeeDocuments",
            "ManageEmployeeDocuments",
            "ViewEmployeeQualifications",
            "ManageEmployeeQualifications",
            "InitiateEmployeeSelfSetup",
            "AddEmployeeFromKiosk",
            "ViewEmployeeDetails",
            "EditBasicEmployeeDetails",
            "EditAllEmployeeDetails",
            "ViewTimesheetReports",
            "EmployeeNotes"
          ],
          "title": "UserPermission"
        }
      },
      "xml": {
        "name": "EmployeeGroupAccessModel"
      },
      "type": "object",
      "title": "EmployeeGroupAccessModel"
    },
    "LocationAccessModel": {
      "properties": {
        "filterType": {
          "description": "",
          "type": "string",
          "enum": [
            "Location",
            "LocationOrParents"
          ],
          "title": "LocationRestrictionFilterTypeEnum"
        },
        "locationIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "permissions": {
          "description": "",
          "type": "string",
          "enum": [
            "ApproveTimesheets",
            "ApproveLeaveRequests",
            "CreateTimesheets",
            "CreateLeaveRequests",
            "ViewLeaveRequests",
            "ManageRosters",
            "ViewRosters",
            "ViewShiftCosts",
            "ViewExpenses",
            "CreateExpenses",
            "ApproveExpenses",
            "CreateTasks",
            "ViewEmployeeDocuments",
            "ManageEmployeeDocuments",
            "ViewEmployeeQualifications",
            "ManageEmployeeQualifications",
            "InitiateEmployeeSelfSetup",
            "AddEmployeeFromKiosk",
            "ViewEmployeeDetails",
            "EditBasicEmployeeDetails",
            "EditAllEmployeeDetails",
            "ViewTimesheetReports",
            "EmployeeNotes"
          ],
          "title": "UserPermission"
        }
      },
      "xml": {
        "name": "LocationAccessModel"
      },
      "type": "object",
      "title": "LocationAccessModel"
    },
    "ReportAccessModel": {
      "properties": {
        "accessType": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "AllReports",
            "SpecificReports",
            "ReportPack"
          ],
          "title": "ReportAccessType"
        },
        "specificReports": {
          "description": "Comma separated list of ReportEnum.",
          "type": "string",
          "enum": [
            "DetailedActivityReport",
            "PayRunComparisonReport",
            "SuperContributionsReport",
            "OrdinaryTimeEarningsReport",
            "DeductionsReport",
            "PayrollTaxReport",
            "PaygReport",
            "PayCategoriesReport",
            "PayRunAuditReport",
            "CostingReport",
            "TimesheetReport",
            "ExpensesReport",
            "PaymentHistoryReport",
            "LeaveBalancesReport",
            "LeaveLiabilityReport",
            "LeaveHistoryReport",
            "BirthdayReport",
            "EmployeeDetailsReport",
            "UnpaidEmployeesReport",
            "QualificationsReport",
            "EmployeeSatisfactionReport",
            "AttendanceReport",
            "EmergencyContactsReport",
            "EmployerLiabilitiesReport",
            "PayRunVarianceReport",
            "EmployeeDetailsAuditReport",
            "GrossToNetReport",
            "LiveView",
            "TasksReport",
            "ShiftSwappingReport",
            "PensionContributionsReport",
            "EmployerPaymentSummaryReport",
            "PayRunInclusionsReport",
            "P32Report",
            "PaySlipReport",
            "PaymentFileReport",
            "JournalReport",
            "IrdEmployeeDetailsReport",
            "PayDayFilingReport",
            "KiwiSaverReport",
            "PayeReport",
            "KiwiSaverEmploymentDetailsReport",
            "EmployerDeductions",
            "RosterTimesheetComparisonReport",
            "CpfLodgementReport",
            "WithholdingReport",
            "EsctRateReport",
            "JobKeeperEligibilityReport",
            "EarningsCertificate",
            "Ir8AReport",
            "ExcessCpfContributionsReport",
            "BenefitsInKindReport",
            "ShareOptionsReport",
            "Cp39Report",
            "EAFormReport",
            "PCB2FormReport",
            "IrasReport",
            "IrasLodgementReport",
            "PayRunExportReport",
            "JobMakerEligibilityReport",
            "EpfKwsp6BorangA",
            "EpfKwsp3Registration",
            "MyBenefitsInKindReport",
            "EmployeeBenefitsReport",
            "BenefitsNiReport",
            "SocsoForm2",
            "SocsoFormSip2a",
            "SocsoForm8a",
            "PcbWithholdingReport",
            "SocsoForm3",
            "IrbFormCp22",
            "IrbFormCp22a",
            "CompanyCarsReport",
            "P11D",
            "P11Db",
            "EmployeeCarsReport",
            "P46Car",
            "IrbFormCp8d",
            "DocumentAcknowledgementsReport",
            "PaymentAndDeductionStatementReport",
            "UkGenderPayGapDataReport",
            "Cis300",
            "Zakat",
            "EisContributionsReport",
            "EmployeeLeaveRatesReport",
            "P11",
            "P60",
            "AverageHoursReport",
            "UkCourtOrderReport",
            "UkOccupationalPayReport",
            "EisSocsoCombinedContributionsReport",
            "P45Report",
            "CpfOwAndAwReconciliationReport",
            "PayRunFpsReport",
            "PortableLongServiceLeaveReport",
            "UkTaxAndNiBandwidthsReport",
            "CustomisablePayrollReport",
            "SuperannuationStaplingDetailsReport",
            "HmrcInboxReport",
            "HrdfMonthlyContributionsReport",
            "CpfApexOverviewReport",
            "CasualConversionReport"
          ],
          "title": "ReportEnum",
          "KeyPayType": "csvEnum"
        },
        "noReportingRestriction": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "ReportAccessModel"
      },
      "type": "object",
      "title": "ReportAccessModel"
    },
    "KioskAccessModel": {
      "properties": {
        "kiosks": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "accessType": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "AllKiosks",
            "SpecificKiosks"
          ],
          "title": "KioskAccessType"
        },
        "permissions": {
          "description": "",
          "type": "string",
          "enum": [
            "ApproveTimesheets",
            "ApproveLeaveRequests",
            "CreateTimesheets",
            "CreateLeaveRequests",
            "ViewLeaveRequests",
            "ManageRosters",
            "ViewRosters",
            "ViewShiftCosts",
            "ViewExpenses",
            "CreateExpenses",
            "ApproveExpenses",
            "CreateTasks",
            "ViewEmployeeDocuments",
            "ManageEmployeeDocuments",
            "ViewEmployeeQualifications",
            "ManageEmployeeQualifications",
            "InitiateEmployeeSelfSetup",
            "AddEmployeeFromKiosk",
            "ViewEmployeeDetails",
            "EditBasicEmployeeDetails",
            "EditAllEmployeeDetails",
            "ViewTimesheetReports",
            "EmployeeNotes"
          ],
          "title": "UserPermission"
        }
      },
      "xml": {
        "name": "KioskAccessModel"
      },
      "type": "object",
      "title": "KioskAccessModel"
    },
    "PayrollAccessModel": {
      "properties": {
        "approveElectronicPayrollLodgement": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "userBusinessRestrictionCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payRunApprovalAccess": {
          "description": "",
          "type": "string",
          "enum": [
            "PayEventApprover",
            "PayRunApproverAllSchedules",
            "PayRunApproverSelectedSchedules",
            "PaymentApproverAllSchedules",
            "PaymentApproverSelectedSchedules",
            "PayRunCreatorAllSchedules",
            "PayRunCreatorSelectedSchedules"
          ],
          "title": "Nullable<BusinessRestrictionTypeEnum>"
        },
        "payRunCreationAccess": {
          "description": "",
          "type": "string",
          "enum": [
            "PayEventApprover",
            "PayRunApproverAllSchedules",
            "PayRunApproverSelectedSchedules",
            "PaymentApproverAllSchedules",
            "PaymentApproverSelectedSchedules",
            "PayRunCreatorAllSchedules",
            "PayRunCreatorSelectedSchedules"
          ],
          "title": "Nullable<BusinessRestrictionTypeEnum>"
        },
        "selectedPaySchedulesForPayRunApproval": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "Int32[]"
        },
        "selectedPaySchedulesForPayRunCreation": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "Int32[]"
        }
      },
      "xml": {
        "name": "PayrollAccessModel"
      },
      "type": "object",
      "title": "PayrollAccessModel"
    },
    "CreateBusinessAccessModel": {
      "properties": {
        "suppressNotificationEmails": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "mergeExistingAccess": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "accessType": {
          "description": "",
          "type": "string",
          "enum": [
            "Unrestricted",
            "Restricted"
          ],
          "title": "RelatedUserType"
        },
        "employeeGroups": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EmployeeGroupAccessModel"
          },
          "xml": {
            "name": "EmployeeGroupAccessModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<EmployeeGroupAccessModel>"
        },
        "locationAccess": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LocationAccessModel"
          },
          "xml": {
            "name": "LocationAccessModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<LocationAccessModel>"
        },
        "reports": {
          "$ref": "#/definitions/ReportAccessModel",
          "description": ""
        },
        "kioskAccess": {
          "$ref": "#/definitions/KioskAccessModel",
          "description": ""
        },
        "payrollAccess": {
          "$ref": "#/definitions/PayrollAccessModel",
          "description": ""
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "CreateBusinessAccessModel"
      },
      "type": "object",
      "title": "CreateBusinessAccessModel"
    },
    "AccessModel": {
      "properties": {
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AccessModel"
      },
      "type": "object",
      "title": "AccessModel"
    },
    "BusinessAccessListModel": {
      "properties": {
        "userId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "username": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "displayName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isActive": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "userType": {
          "description": "",
          "type": "string",
          "enum": [
            "Unrestricted",
            "Restricted"
          ],
          "title": "RelatedUserType"
        },
        "twoFactorEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "BusinessAccessListModel"
      },
      "type": "object",
      "title": "BusinessAccessListModel"
    },
    "ODataQueryOptionsOfBusiness": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<Business>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<Business>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<Business>"
    },
    "AuBusinessExportModel": {
      "properties": {
        "abn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "suburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "managementSoftwareId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "sbrSoftwareProvider": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "sbrSoftwareId": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "isForeignEntity": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "foreignEntityCountry": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "defaultSuperRate": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "region": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "legalName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactEmailAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactPhoneNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactFaxNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "standardHoursPerDay": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "journalService": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "endOfWeek": {
          "description": "",
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "title": "DayOfWeek"
        },
        "initialFinancialYearStart": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "managersCanEditRosterBudgets": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "budgetWarningPercent": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "budgetEntryMethod": {
          "description": "",
          "type": "string",
          "enum": [
            "PercentageOfSales",
            "Direct"
          ],
          "title": "BudgetEntryMethodEnum"
        },
        "addressLine1": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "addressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "whiteLabelName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "whiteLabelId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "promoCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "leaveAccrualStartDateType": {
          "description": "",
          "type": "string",
          "enum": [
            "EmployeeStartDate",
            "SpecifiedDate",
            "CalendarYear",
            "CategorySpecificDate"
          ],
          "title": "LeaveAccrualStartDateType"
        },
        "leaveYearStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "Nullable<ExternalService>"
        },
        "numberOfEmployees": {
          "description": "",
          "type": "string",
          "enum": [
            "OneToTen",
            "ElevenToFifty",
            "FiftyOneToTwoFifty",
            "TwoFiftyOneAndUp"
          ],
          "title": "Nullable<NumberOfEmployeesRangeEnum>"
        },
        "industryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCycleFrequency": {
          "description": "",
          "type": "string",
          "enum": [
            "Weekly",
            "Fortnightly",
            "Monthly",
            "FourWeekly",
            "Quarterly",
            "Annually",
            "HalfMonthly"
          ],
          "title": "Nullable<PayCycleFrequencyEnum>"
        }
      },
      "xml": {
        "name": "AuBusinessExportModel"
      },
      "type": "object",
      "title": "AuBusinessExportModel"
    },
    "BusinessAction": {
      "properties": {
        "date": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "title": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "highPriority": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "BusinessAction"
      },
      "type": "object",
      "title": "BusinessAction"
    },
    "AuBusinessTimesheetSettingsModel": {
      "properties": {
        "allowToSelectHigherClassification": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "requireStartAndStopTimes": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "requireWorkType": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canSetRequireWorkTypeSetting": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "requireLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "includeAllTimesheetNotesInPayRun": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timesheetRejectionNotifications": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "managersCanCreateTimesheetsForEmployeesThatAreNotEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timesheetsEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "approveIfMatchesRosterShift": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowPaidBreaks": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "hasMaximumPaidBreakDuration": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "maximumPaidBreakDuration": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "AuBusinessTimesheetSettingsModel"
      },
      "type": "object",
      "title": "AuBusinessTimesheetSettingsModel"
    },
    "TagViewModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "TagViewModel"
      },
      "type": "object",
      "title": "TagViewModel"
    },
    "EntitlementsModel": {
      "properties": {
        "planName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "trialExpiryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "features": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EntitlementFeatureModel"
          },
          "xml": {
            "name": "EntitlementFeatureModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<EntitlementFeatureModel>"
        }
      },
      "xml": {
        "name": "EntitlementsModel"
      },
      "type": "object",
      "title": "EntitlementsModel"
    },
    "EntitlementFeatureModel": {
      "properties": {
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EntitlementFeatureModel"
      },
      "type": "object",
      "title": "EntitlementFeatureModel"
    },
    "AuEmployeePortalSettingsModel": {
      "properties": {
        "allowEmployeeSuperFundSelfService": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canSpecifyHigherClassification": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeLeaveSelfService": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeSelfEditing": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timesheetSetting": {
          "description": "",
          "type": "string",
          "enum": [
            "Disabled",
            "ReadOnly",
            "ReadWrite",
            "EditKiosk",
            "EditWorkZoneClockOnOff",
            "EditKioskOrWorkZoneClockOnOff",
            "Enabled"
          ],
          "title": "ESSTimesheetSettingModelEnum"
        },
        "allowEmployeeToSetUnavailability": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeBankAccountSelfService": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeSatisfactionSurvey": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeesToViewAllApprovedLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "unavailabilityCutOff": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "allowEmployeesToUploadProfilePicture": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeExpensesSelfService": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeOverrideTaxCodes": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showPayDaysInEmployeeCalendar": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "enableWorkZoneClockOn": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "requirePhoto": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeShiftSelection": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "clockOnWindowMinutes": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "clockOffWindowMinutes": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "clockOnReminderNotificationMinutes": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "clockOffReminderNotificationMinutes": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "sendEmployeeDetailsUpdateNotifications": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuEmployeePortalSettingsModel"
      },
      "type": "object",
      "title": "AuEmployeePortalSettingsModel"
    },
    "BusinessAtoSupplierModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "abn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "addressLine1": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "addressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "suburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "signatoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "phoneNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "faxNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "country": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "branch": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "role": {
          "description": "",
          "type": "string",
          "enum": [
            "Employer",
            "RegisteredTaxAgent",
            "Intermediary"
          ],
          "title": "AtoSupplierRole"
        },
        "taxAgentNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "intermediaryAbn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "intermediaryContactName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "intermediaryContactEmail": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "intermediaryContactPhone": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "BusinessAtoSupplierModel"
      },
      "type": "object",
      "title": "BusinessAtoSupplierModel"
    },
    "TimesheetRoundingRulesModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "shiftStartRoundingDirection": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Up",
            "Down",
            "ToTheNearest"
          ],
          "title": "RoundingDirectionEnum"
        },
        "shiftStartRoundingInterval": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "shiftEndRoundingDirection": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Up",
            "Down",
            "ToTheNearest"
          ],
          "title": "RoundingDirectionEnum"
        },
        "shiftEndRoundingInterval": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "breakStartRoundingDirection": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Up",
            "Down",
            "ToTheNearest"
          ],
          "title": "RoundingDirectionEnum"
        },
        "breakStartRoundingInterval": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "breakEndRoundingDirection": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Up",
            "Down",
            "ToTheNearest"
          ],
          "title": "RoundingDirectionEnum"
        },
        "breakEndRoundingInterval": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "roundUpToShiftStartTimeRoundingInterval": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "roundDownToShiftStartTimeRoundingInterval": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "roundUpToShiftEndTimeRoundingInterval": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "roundDownToShiftEndTimeRoundingInterval": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "TimesheetRoundingRulesModel"
      },
      "type": "object",
      "title": "TimesheetRoundingRulesModel"
    },
    "AuStpRegistrationModel": {
      "properties": {
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "branch": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "abn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactPhoneNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactEmailAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "addressLine1": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "addressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "suburbId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "suburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "lodgementRole": {
          "description": "",
          "type": "string",
          "enum": [
            "Employer",
            "RegisteredTaxAgent",
            "Intermediary"
          ],
          "title": "AtoSupplierRole"
        },
        "taxAgentNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "intermediaryAbn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "intermediaryContactName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "intermediaryContactEmail": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "intermediaryContactPhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "atoIntegrationOption": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Phone",
            "AccessManager"
          ],
          "title": "AtoIntegrationOption"
        },
        "sbrSoftwareId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "sbrEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "singleTouchPayrollEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuStpRegistrationModel"
      },
      "type": "object",
      "title": "AuStpRegistrationModel"
    },
    "DocumentModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "friendlyName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "visibleToAllEmployees": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "selectedGroups": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EmployeeGroupItemModel"
          },
          "xml": {
            "name": "EmployeeGroupItemModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<EmployeeGroupItemModel>"
        },
        "selectedLocations": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LocationItemModel"
          },
          "xml": {
            "name": "LocationItemModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<LocationItemModel>"
        },
        "requiresEmployeeAcknowledgement": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "sendNotificationToEmployee": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "sendNotificationImmediately": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "sendInitialNotificationOn": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "sendReminderEveryXDays": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "DocumentModel"
      },
      "type": "object",
      "title": "DocumentModel"
    },
    "EmployeeGroupItemModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeGroupItemModel"
      },
      "type": "object",
      "title": "EmployeeGroupItemModel"
    },
    "LocationItemModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "LocationItemModel"
      },
      "type": "object",
      "title": "LocationItemModel"
    },
    "UpdateDocumentPermissionsModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "visibleToAll": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employeeGroups": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "locations": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "requiresEmployeeAcknowledgement": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "sendNotificationToEmployee": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "sendNotificationImmediately": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "sendInitialNotificationOn": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "sendReminderEveryXDays": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "UpdateDocumentPermissionsModel"
      },
      "type": "object",
      "title": "UpdateDocumentPermissionsModel"
    },
    "DocumentFile": {
      "properties": {
        "contentLength": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "title": "Int64"
        },
        "contentType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bytes": {
          "description": "",
          "type": "string",
          "format": "byte",
          "title": "Byte[]"
        },
        "filename": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "DocumentFile"
      },
      "type": "object",
      "title": "DocumentFile"
    },
    "AuChartOfAccountsModel": {
      "properties": {
        "complete": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "chartofAccounts": {
          "$ref": "#/definitions/AuChartOfAccountsGroupModel",
          "description": ""
        },
        "locationSpecificChartOfAccounts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuChartOfAccountsLocationGroupModel"
          },
          "xml": {
            "name": "AuChartOfAccountsLocationGroupModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AuChartOfAccountsLocationGroupModel>"
        }
      },
      "xml": {
        "name": "AuChartOfAccountsModel"
      },
      "type": "object",
      "title": "AuChartOfAccountsModel"
    },
    "AuChartOfAccountsGroupModel": {
      "properties": {
        "defaultAccounts": {
          "$ref": "#/definitions/AuChartOfAccountsDefaultAccountsModel",
          "description": ""
        },
        "leaveCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ChartOfAccountsLeaveCategoryModel"
          },
          "xml": {
            "name": "ChartOfAccountsLeaveCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ChartOfAccountsLeaveCategoryModel>"
        },
        "payCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ChartOfAccountsCategoryModel"
          },
          "xml": {
            "name": "ChartOfAccountsCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ChartOfAccountsCategoryModel>"
        },
        "deductionCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ChartOfAccountsLiabilityCategoryModel"
          },
          "xml": {
            "name": "ChartOfAccountsLiabilityCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ChartOfAccountsLiabilityCategoryModel>"
        },
        "employeeExpenseCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ChartOfAccountsCategoryModel"
          },
          "xml": {
            "name": "ChartOfAccountsCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ChartOfAccountsCategoryModel>"
        },
        "employerLiabilityCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ChartOfAccountsLiabilityCategoryModel"
          },
          "xml": {
            "name": "ChartOfAccountsLiabilityCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ChartOfAccountsLiabilityCategoryModel>"
        }
      },
      "xml": {
        "name": "AuChartOfAccountsGroupModel"
      },
      "type": "object",
      "title": "AuChartOfAccountsGroupModel"
    },
    "AuChartOfAccountsLocationGroupModel": {
      "properties": {
        "defaultAccounts": {
          "$ref": "#/definitions/AuChartOfAccountsLocationAccountsModel",
          "description": ""
        },
        "leaveCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ChartOfAccountsLocationLeaveCategoryModel"
          },
          "xml": {
            "name": "ChartOfAccountsLocationLeaveCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ChartOfAccountsLocationLeaveCategoryModel>"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ChartOfAccountsLocationCategoryModel"
          },
          "xml": {
            "name": "ChartOfAccountsLocationCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ChartOfAccountsLocationCategoryModel>"
        },
        "deductionCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ChartOfAccountsLiabilityLocationCategoryModel"
          },
          "xml": {
            "name": "ChartOfAccountsLiabilityLocationCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ChartOfAccountsLiabilityLocationCategoryModel>"
        },
        "employeeExpenseCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ChartOfAccountsLocationCategoryModel"
          },
          "xml": {
            "name": "ChartOfAccountsLocationCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ChartOfAccountsLocationCategoryModel>"
        },
        "employerLiabilityCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ChartOfAccountsLiabilityLocationCategoryModel"
          },
          "xml": {
            "name": "ChartOfAccountsLiabilityLocationCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ChartOfAccountsLiabilityLocationCategoryModel>"
        }
      },
      "xml": {
        "name": "AuChartOfAccountsLocationGroupModel"
      },
      "type": "object",
      "title": "AuChartOfAccountsLocationGroupModel"
    },
    "AuChartOfAccountsDefaultAccountsModel": {
      "properties": {
        "paymentAccountSplitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "defaultExpenseSplitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employeeExpenseSplitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employerLiabilityExpenseSplitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employerLiabilityLiabilitySplitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "defaultLiabilitySplitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "paygLiabilityAccountSplitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "paygExpenseSplitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "superannuationExpenseSplitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "superannuationLiabilitySplitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "paymentAccountSplit": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Location",
            "EmployingEntity"
          ],
          "title": "AccountSplit"
        },
        "defaultExpenseSplit": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Location",
            "EmployingEntity"
          ],
          "title": "AccountSplit"
        },
        "employeeExpenseSplit": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Location",
            "EmployingEntity"
          ],
          "title": "AccountSplit"
        },
        "employerLiabilityExpenseSplit": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Location",
            "EmployingEntity"
          ],
          "title": "AccountSplit"
        },
        "employerLiabilityLiabilitySplit": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Location",
            "EmployingEntity"
          ],
          "title": "AccountSplit"
        },
        "defaultLiabilitySplit": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Location",
            "EmployingEntity"
          ],
          "title": "AccountSplit"
        },
        "paygLiabilityAccountSplit": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Location",
            "EmployingEntity"
          ],
          "title": "AccountSplit"
        },
        "paygExpenseSplit": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Location",
            "EmployingEntity"
          ],
          "title": "AccountSplit"
        },
        "superannuationExpenseSplit": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Location",
            "EmployingEntity"
          ],
          "title": "AccountSplit"
        },
        "superannuationLiabilitySplit": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Location",
            "EmployingEntity"
          ],
          "title": "AccountSplit"
        },
        "paygLiabilityAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "paygExpenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "superannuationExpenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "superannuationLiabilityAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "paymentAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "defaultExpenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeExpenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employerLiabilityExpenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employerLiabilityLiabilityAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "defaultLiabilityAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "AuChartOfAccountsDefaultAccountsModel"
      },
      "type": "object",
      "title": "AuChartOfAccountsDefaultAccountsModel"
    },
    "ChartOfAccountsLeaveCategoryModel": {
      "properties": {
        "liabilityAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "accrueFromContingentPeriod": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "splitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "ChartOfAccountsLeaveCategoryModel"
      },
      "type": "object",
      "title": "ChartOfAccountsLeaveCategoryModel"
    },
    "ChartOfAccountsCategoryModel": {
      "properties": {
        "splitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "ChartOfAccountsCategoryModel"
      },
      "type": "object",
      "title": "ChartOfAccountsCategoryModel"
    },
    "ChartOfAccountsLiabilityCategoryModel": {
      "properties": {
        "liabilityAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "splitByLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "ChartOfAccountsLiabilityCategoryModel"
      },
      "type": "object",
      "title": "ChartOfAccountsLiabilityCategoryModel"
    },
    "AuChartOfAccountsLocationAccountsModel": {
      "properties": {
        "paygLiabilityAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "paygExpenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "superannuationExpenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "superannuationLiabilityAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "paymentAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "defaultExpenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeExpenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employerLiabilityExpenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employerLiabilityLiabilityAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "defaultLiabilityAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "AuChartOfAccountsLocationAccountsModel"
      },
      "type": "object",
      "title": "AuChartOfAccountsLocationAccountsModel"
    },
    "ChartOfAccountsLocationLeaveCategoryModel": {
      "properties": {
        "liabilityAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "accrueFromContingentPeriod": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "ChartOfAccountsLocationLeaveCategoryModel"
      },
      "type": "object",
      "title": "ChartOfAccountsLocationLeaveCategoryModel"
    },
    "ChartOfAccountsLocationCategoryModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "ChartOfAccountsLocationCategoryModel"
      },
      "type": "object",
      "title": "ChartOfAccountsLocationCategoryModel"
    },
    "ChartOfAccountsLiabilityLocationCategoryModel": {
      "properties": {
        "liabilityAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expenseAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "ChartOfAccountsLiabilityLocationCategoryModel"
      },
      "type": "object",
      "title": "ChartOfAccountsLiabilityLocationCategoryModel"
    },
    "JournalServiceProviderModel": {
      "properties": {
        "journalService": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "JournalServiceProviderModel"
      },
      "type": "object",
      "title": "JournalServiceProviderModel"
    },
    "JournalAccountModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "accountCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountType": {
          "description": "",
          "type": "string",
          "enum": [
            "Asset",
            "Expense",
            "Liability",
            "Equity",
            "Income",
            "Unknown",
            "NotAllowed",
            "CostOfGoodsSold",
            "AssetAndLiability",
            "CapitalsAndReserves",
            "Sales",
            "Purchases",
            "Overheads"
          ],
          "title": "ExternalAccountType"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "JournalAccountModel"
      },
      "type": "object",
      "title": "JournalAccountModel"
    },
    "JournalAccountBulkCreateModel": {
      "properties": {
        "errorMessages": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "List<String>"
        },
        "createdJournalAccounts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/JournalAccountModel"
          },
          "xml": {
            "name": "JournalAccountModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<JournalAccountModel>"
        }
      },
      "xml": {
        "name": "JournalAccountBulkCreateModel"
      },
      "type": "object",
      "title": "JournalAccountBulkCreateModel"
    },
    "AuDeductionCategoryModel": {
      "properties": {
        "taxExempt": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "expenseGeneralLedgerMappingCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "liabilityGeneralLedgerMappingCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "sgcCalculationImpact": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "ReducesOTE"
          ],
          "title": "SGCCalculationImpactEnum"
        },
        "paymentSummaryClassification": {
          "description": "",
          "type": "string",
          "enum": [
            "Default",
            "UnionOrProfessionalAssociationFees",
            "WorkplaceGiving",
            "ChildSupportDeduction",
            "ChildSupportGarnishee",
            "SalarySacrificeOtherEmployeeBenefits",
            "SalarySacrificeSuperannuation"
          ],
          "title": "DeductionCategoryPaymentSummaryClassification"
        },
        "isResc": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isSystem": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuDeductionCategoryModel"
      },
      "type": "object",
      "title": "AuDeductionCategoryModel"
    },
    "ODataQueryOptionsOfDeductionCategory": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<DeductionCategory>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<DeductionCategory>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<DeductionCategory>"
    },
    "EmployeesFilter": {
      "properties": {
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "EmployeesFilter"
      },
      "type": "object",
      "title": "EmployeesFilter"
    },
    "ODataQueryOptionsOfAuUnstructuredEmployeeModel": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<AuUnstructuredEmployeeModel>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<AuUnstructuredEmployeeModel>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<AuUnstructuredEmployeeModel>"
    },
    "AuUnstructuredEmployeeModel": {
      "properties": {
        "taxFileNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialSuburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialState": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalSuburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalState": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employingEntityABN": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employingEntityId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "previousSurname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "australianResident": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "claimTaxFreeThreshold": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "seniorsTaxOffset": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "otherTaxOffset": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "stslDebt": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "isExemptFromFloodLevy": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "hasApprovedWorkingHolidayVisa": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "workingHolidayVisaCountry": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workingHolidayVisaStartDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "isSeasonalWorker": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "hasWithholdingVariation": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "taxVariation": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "dateTaxFileDeclarationSigned": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "dateTaxFileDeclarationReported": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "businessAwardPackage": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employmentAgreement": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isExemptFromPayrollTax": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "bankAccount1_BSB": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bankAccount2_BSB": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bankAccount3_BSB": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superFund1_ProductCode": {
          "description": "Nullable</p><p>Must be \"SMSF\" for a self managed super fund",
          "type": "string",
          "title": "String"
        },
        "superFund1_FundName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superFund1_MemberNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superFund1_AllocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "superFund1_FixedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "superFund1_EmployerNominatedFund": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "superFund2_ProductCode": {
          "description": "Nullable</p><p>Must be \"SMSF\" for a self managed super fund",
          "type": "string",
          "title": "String"
        },
        "superFund2_FundName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superFund2_MemberNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superFund2_AllocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "superFund2_FixedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "superFund2_EmployerNominatedFund": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "superFund3_ProductCode": {
          "description": "Nullable</p><p>Must be \"SMSF\" for a self managed super fund",
          "type": "string",
          "title": "String"
        },
        "superFund3_FundName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superFund3_MemberNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superFund3_AllocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "superFund3_FixedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "superFund3_EmployerNominatedFund": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "superThresholdAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "maximumQuarterlySuperContributionsBase": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "medicareLevyExemption": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "closelyHeldEmployee": {
          "description": "Nullable</p><p><i>Note:</i>A non-null value here will overwrite the <i>SingleTouchPayroll</i> value. Set this to null if <i>SingleTouchPayroll</i> value should be used.",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "closelyHeldReporting": {
          "description": "Nullable</p><p><i>Note:</i>During a transition period, a null value will default to <i>PayPerQuarter</i> if CloselyHeldEmployee is \"true\".</p><p>A null value with CloselyHeldEmployee = \"true\" will not be valid in the future.",
          "type": "string",
          "enum": [
            "PerQuarter",
            "PerPayRun"
          ],
          "title": "Nullable<CloselyHeldReportingEnum>"
        },
        "singleTouchPayroll": {
          "description": "",
          "type": "string",
          "enum": [
            "CloselyHeld",
            "ForeignEmployment",
            "InboundAssignee",
            "LabourHire",
            "OtherSpecifiedPayments"
          ],
          "title": "Nullable<StpIncomeTypeEnum>"
        },
        "hoursPerDay": {
          "description": "Nullable</p><p>A null value will default to the business setting for <i>Standard hours per day</i>",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "postalAddressIsOverseas": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "residentialAddressIsOverseas": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "employmentType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contractorABN": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "terminationReason": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxCategory": {
          "description": "",
          "type": "string",
          "enum": [
            "Actor_WithTaxFreeThreshold",
            "Actor_NoTaxFreeThreshold",
            "Actor_LimitedPerformancePerWeek",
            "Actor_Promotional",
            "HorticulturalistShearer_WithTaxFreeThreshold",
            "HorticulturalistShearer_ForeignResident",
            "SeniorPensioner_Single",
            "SeniorPensioner_Married",
            "SeniorPensioner_SeparatedCoupleIllness",
            "ATODefined_DeathBeneficiary",
            "ATODefined_DownwardVariation",
            "ATODefined_NonEmployee",
            "DailyCasual"
          ],
          "title": "Nullable<TaxFileDeclarationTaxCategoryCombination>"
        },
        "medicareLevySurchargeWithholdingTier": {
          "description": "",
          "type": "string",
          "enum": [
            "Tier1",
            "Tier2",
            "Tier3"
          ],
          "title": "Nullable<MedicareLevySurchargeWithholdingTier>"
        },
        "claimMedicareLevyReduction": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "medicareLevyReductionSpouse": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "medicareLevyReductionDependentCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "dvlPaySlipDescription": {
          "description": "String</p><p>Possible values are:</p><ul class=\"list-bullet\"><li><code>EmployeePrimaryPayCategory</code></li><li>The name of any other pay category</li></ul><p>",
          "type": "string",
          "title": "String"
        },
        "portableLongServiceLeaveId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "includeInPortableLongServiceLeaveReport": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "automaticallyApplyPublicHolidayNotWorkedEarningsLines": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "awardId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employmentAgreementId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "disableAutoProgression": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "title": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "preferredName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "middleName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateOfBirth": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "gender": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialStreetAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialAddressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialPostCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialCountry": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalStreetAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalAddressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalPostCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalCountry": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "emailAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "homePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workPhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mobilePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "startDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "anniversaryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "tags": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "jobTitle": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paySchedule": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "primaryPayCategory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "primaryLocation": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paySlipNotificationType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "overrideTemplateRate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rateUnit": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hoursPerWeek": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "automaticallyPayEmployee": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveTemplate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payRateTemplate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payConditionRuleSet": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isEnabledForTimesheets": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locations": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workTypes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "emergencyContact1_Name": {
          "description": "",
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "title": "String"
        },
        "emergencyContact1_Relationship": {
          "description": "",
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "title": "String"
        },
        "emergencyContact1_Address": {
          "description": "",
          "type": "string",
          "maxLength": 500,
          "minLength": 0,
          "title": "String"
        },
        "emergencyContact1_ContactNumber": {
          "description": "",
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "title": "String"
        },
        "emergencyContact1_AlternateContactNumber": {
          "description": "",
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "title": "String"
        },
        "emergencyContact2_Name": {
          "description": "",
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "title": "String"
        },
        "emergencyContact2_Relationship": {
          "description": "",
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "title": "String"
        },
        "emergencyContact2_Address": {
          "description": "",
          "type": "string",
          "maxLength": 500,
          "minLength": 0,
          "title": "String"
        },
        "emergencyContact2_ContactNumber": {
          "description": "",
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "title": "String"
        },
        "emergencyContact2_AlternateContactNumber": {
          "description": "",
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "title": "String"
        },
        "bankAccount1_AccountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bankAccount1_AccountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bankAccount1_AllocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "bankAccount1_FixedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "bankAccount2_AccountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bankAccount2_AccountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bankAccount2_AllocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "bankAccount2_FixedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "bankAccount3_AccountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bankAccount3_AccountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bankAccount3_AllocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "bankAccount3_FixedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "rosteringNotificationChoices": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveAccrualStartDateType": {
          "description": "",
          "type": "string",
          "enum": [
            "EmployeeStartDate",
            "SpecifiedDate",
            "CalendarYear",
            "CategorySpecificDate"
          ],
          "title": "Nullable<LeaveAccrualStartDateType>"
        },
        "leaveYearStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "Active",
            "Terminated",
            "Incomplete"
          ],
          "title": "EmployeeStatusEnum"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "reportingDimensionValues": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuUnstructuredEmployeeModel"
      },
      "type": "object",
      "title": "AuUnstructuredEmployeeModel"
    },
    "EmployeeUpdateResponseModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "detailedStatus": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeUpdateResponseModel"
      },
      "type": "object",
      "title": "EmployeeUpdateResponseModel"
    },
    "AuWorkTypeModel": {
      "properties": {
        "employmentTypes": {
          "description": "",
          "items": {
            "type": "string",
            "enum": [
              "Unknown",
              "FullTime",
              "PartTime",
              "LabourHire",
              "SuperannuationIncomeStream",
              "Casual"
            ],
            "title": "AuEmploymentTypeEnum"
          },
          "xml": {
            "name": "AuEmploymentTypeEnum",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuEmploymentTypeEnum>"
        },
        "awardPackageId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "awardPackageName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accruesLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "mappingType": {
          "description": "",
          "type": "string",
          "enum": [
            "PayCategory",
            "LeaveCategory",
            "PrimaryPayCategory",
            "ShiftCondition"
          ],
          "title": "Nullable<WorkTypeMappingType>"
        },
        "shortCode": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuWorkTypeModel"
      },
      "type": "object",
      "title": "AuWorkTypeModel"
    },
    "AuOpeningBalancesModel": {
      "properties": {
        "deductions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuInitialDeductionModel"
          },
          "xml": {
            "name": "AuInitialDeductionModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AuInitialDeductionModel>"
        },
        "paygWithholdingAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "methodB2PaygWithholdingAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "sfssAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "helpAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "superContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "employerContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "nonRescEmployerContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "earningsLines": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuInitialEarningsModel"
          },
          "xml": {
            "name": "AuInitialEarningsModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuInitialEarningsModel>"
        },
        "etps": {
          "description": "",
          "items": {
            "$ref": "#/definitions/OpeningBalancesEtpModel"
          },
          "xml": {
            "name": "OpeningBalancesEtpModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<OpeningBalancesEtpModel>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "totalHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "grossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "leaveBalances": {
          "description": "",
          "items": {
            "$ref": "#/definitions/InitialLeaveBalanceModel"
          },
          "xml": {
            "name": "InitialLeaveBalanceModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<InitialLeaveBalanceModel>"
        },
        "employerLiabilities": {
          "description": "",
          "items": {
            "$ref": "#/definitions/InitialEmployerLiabilityModel"
          },
          "xml": {
            "name": "InitialEmployerLiabilityModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<InitialEmployerLiabilityModel>"
        },
        "financialYearStartingYear": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuOpeningBalancesModel"
      },
      "type": "object",
      "title": "AuOpeningBalancesModel"
    },
    "AuInitialDeductionModel": {
      "properties": {
        "isRESC": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "taxExempt": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isMemberVoluntary": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isRescStatusReadOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "deductionCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "AuInitialDeductionModel"
      },
      "type": "object",
      "title": "AuInitialDeductionModel"
    },
    "AuInitialEarningsModel": {
      "properties": {
        "payCategoryType": {
          "description": "<p><i>Note:</i> The amounts specified for any ETP-related pay categories (with the exception of Lump Sum D) must represent the total of the corresponding amounts supplied in the etps collection",
          "type": "string",
          "enum": [
            "Standard",
            "LeaveLoading",
            "GenuineRedundancyLeavePayment",
            "OpeningBalanceAllowances",
            "EtpTypeRTaxable",
            "EtpTypeRTaxFree",
            "EtpTypeOTaxable",
            "EtpTypeOTaxFree",
            "EtpLumpSumD",
            "GenuineRedundancyLeaveLoading",
            "MethodB2AdditionalPaymentsOpeningBalance",
            "EtpSuperableTypeOTaxable",
            "EtpSuperableTypeOTaxFree",
            "EtpTypeOUnusedLeavePayment",
            "EtpTypeSTaxable",
            "EtpTypeSTaxFree",
            "EtpTypePTaxable",
            "EtpTypePTaxFree",
            "EtpSuperableTypePTaxable",
            "EtpSuperableTypePTaxFree",
            "EtpTypePUnusedLeavePayment",
            "JobKeeperTier",
            "JobKeeperCancelTier",
            "JobMakerNomination",
            "JobMakerRenomination",
            "JobMakerPeriod",
            "JobMakerCancelNomination",
            "JobMakerCancelRenomination",
            "JobMakerCancelPeriod",
            "NormalTerminationLeaveLoading",
            "PublicHolidayWorked",
            "PublicHolidayNotWorked",
            "UnusedLeavePaymentNormalTermination",
            "BackPayment",
            "PaidFamilyAndDomesticViolenceLeave"
          ],
          "title": "AuPayCategoryType"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "isStandardPayCategory": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "AuInitialEarningsModel"
      },
      "type": "object",
      "title": "AuInitialEarningsModel"
    },
    "OpeningBalancesEtpModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "etpType": {
          "description": "",
          "type": "string",
          "enum": [
            "O",
            "P",
            "R",
            "S"
          ],
          "title": "EtpTypeEnum"
        },
        "taxFreeComponent": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "taxableComponent": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "taxWithheld": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "isAmended": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "paymentDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "generatePaymentSummary": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "OpeningBalancesEtpModel"
      },
      "type": "object",
      "title": "OpeningBalancesEtpModel"
    },
    "InitialLeaveBalanceModel": {
      "properties": {
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Hours",
            "Days",
            "Weeks"
          ],
          "title": "LeaveUnitTypeEnum"
        }
      },
      "xml": {
        "name": "InitialLeaveBalanceModel"
      },
      "type": "object",
      "title": "InitialLeaveBalanceModel"
    },
    "InitialEmployerLiabilityModel": {
      "properties": {
        "employerLiabilityCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "InitialEmployerLiabilityModel"
      },
      "type": "object",
      "title": "InitialEmployerLiabilityModel"
    },
    "AuEmployeePayRateModel": {
      "properties": {
        "hasSuperRateOverride": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "superRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isPrimaryPayCategory": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "accruesLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "rateUnit": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "calculatedRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "AuEmployeePayRateModel"
      },
      "type": "object",
      "title": "AuEmployeePayRateModel"
    },
    "StandardHoursModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "standardHoursPerWeek": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "standardHoursPerDay": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "useAdvancedWorkWeek": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "standardWorkDays": {
          "description": "",
          "items": {
            "$ref": "#/definitions/StandardHoursDayModel"
          },
          "xml": {
            "name": "StandardHoursDayModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<StandardHoursDayModel>"
        },
        "fullTimeEquivalentHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "advancedWorkWeekConfiguration": {
          "description": "",
          "type": "string",
          "enum": [
            "StartTimeAndStopTime",
            "HourOnly",
            "WorkDayType"
          ],
          "title": "Nullable<AdvancedWorkWeekConfigurationOption>"
        }
      },
      "xml": {
        "name": "StandardHoursModel"
      },
      "type": "object",
      "title": "StandardHoursModel"
    },
    "StandardHoursDayModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "week": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "dayOfWeek": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "dayName": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "startTime": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "breakStartTime": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "breakEndTime": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "hours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "workDayType": {
          "description": "",
          "type": "string",
          "enum": [
            "Full",
            "Half",
            "Off",
            "Rest"
          ],
          "title": "Nullable<WorkDayType>"
        }
      },
      "xml": {
        "name": "StandardHoursDayModel"
      },
      "type": "object",
      "title": "StandardHoursDayModel"
    },
    "LeaveBalanceModel": {
      "properties": {
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "leaveCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accruedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Hours",
            "Days",
            "Weeks"
          ],
          "title": "LeaveUnitTypeEnum"
        }
      },
      "xml": {
        "name": "LeaveBalanceModel"
      },
      "type": "object",
      "title": "LeaveBalanceModel"
    },
    "ODataQueryOptionsOfEmployee": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<Employee>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<Employee>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<Employee>"
    },
    "EmployeeDetailsModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "title": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "preferredName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "middleName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "gender": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateOfBirth": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "anniversaryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialStreetAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialAddressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialSuburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialState": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialPostCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalStreetAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalAddressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalSuburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalState": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalPostCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "emailAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "homePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workPhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mobilePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "startDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "residentialCity": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialCounty": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalCity": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalCounty": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeDetailsModel"
      },
      "type": "object",
      "title": "EmployeeDetailsModel"
    },
    "ProfileImageMetadata": {
      "properties": {
        "contentType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "extension": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "width": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "height": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "ProfileImageMetadata"
      },
      "type": "object",
      "title": "ProfileImageMetadata"
    },
    "EmployeeNoteModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "user": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeNoteModel"
      },
      "type": "object",
      "title": "EmployeeNoteModel"
    },
    "CreateEmployeeNoteModel": {
      "properties": {
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "CreateEmployeeNoteModel"
      },
      "type": "object",
      "title": "CreateEmployeeNoteModel"
    },
    "EmployeeAccessModel": {
      "properties": {
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeAccessModel"
      },
      "type": "object",
      "title": "EmployeeAccessModel"
    },
    "CreateEmployeeAccessModel": {
      "properties": {
        "suppressNotificationEmails": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "CreateEmployeeAccessModel"
      },
      "type": "object",
      "title": "CreateEmployeeAccessModel"
    },
    "AuBankAccountModel": {
      "properties": {
        "accountType": {
          "description": "",
          "type": "string",
          "enum": [
            "Electronic",
            "ManualDeposit",
            "CashOrCheque",
            "Bpay"
          ],
          "title": "BankAccountTypeEnum"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "bsb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "allocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "fixedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "allocateBalance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isEmployeeEditable": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canBeDeleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuBankAccountModel"
      },
      "type": "object",
      "title": "AuBankAccountModel"
    },
    "AuSaveBankAccountResponseModel": {
      "properties": {
        "validationWarning": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "result": {
          "$ref": "#/definitions/AuBankAccountModel",
          "description": ""
        }
      },
      "xml": {
        "name": "AuSaveBankAccountResponseModel"
      },
      "type": "object",
      "title": "AuSaveBankAccountResponseModel"
    },
    "EmployeeDocumentModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "friendlyName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "visible": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "leaveRequestId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "timesheetLineId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "EmployeeDocumentModel"
      },
      "type": "object",
      "title": "EmployeeDocumentModel"
    },
    "UpdateEmployeeDocumentPermissionsModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "visible": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "requiresEmployeeAcknowledgement": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "sendNotificationToEmployee": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "sendNotificationImmediately": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "sendInitialNotificationOn": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "sendReminderEveryXDays": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "UpdateEmployeeDocumentPermissionsModel"
      },
      "type": "object",
      "title": "UpdateEmployeeDocumentPermissionsModel"
    },
    "EarningsLineSplitApiModel": {
      "properties": {
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "allocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "allocateBalance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "EarningsLineSplitApiModel"
      },
      "type": "object",
      "title": "EarningsLineSplitApiModel"
    },
    "EarningsLineSplitEditModel": {
      "properties": {
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "allocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "allocateBalance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "reportingDimensionValueIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        }
      },
      "xml": {
        "name": "EarningsLineSplitEditModel"
      },
      "type": "object",
      "title": "EarningsLineSplitEditModel"
    },
    "ODataQueryOptionsOfEmployeeExpenseCategory": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<EmployeeExpenseCategory>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<EmployeeExpenseCategory>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<EmployeeExpenseCategory>"
    },
    "EmployeeExpenseCategoryModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "generalLedgerMappingCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalTaxCodeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        }
      },
      "xml": {
        "name": "EmployeeExpenseCategoryModel"
      },
      "type": "object",
      "title": "EmployeeExpenseCategoryModel"
    },
    "JournalServiceTaxCode": {
      "properties": {
        "id": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "JournalServiceTaxCode"
      },
      "type": "object",
      "title": "JournalServiceTaxCode"
    },
    "ODataQueryOptionsOfEmployeeExpenseRequest": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<EmployeeExpenseRequest>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<EmployeeExpenseRequest>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<EmployeeExpenseRequest>"
    },
    "ExpenseRequestResponseModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "lineItems": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ExpenseRequestLineItemModel"
          },
          "xml": {
            "name": "ExpenseRequestLineItemModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ExpenseRequestLineItemModel>"
        },
        "attachments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AttachmentModel"
          },
          "xml": {
            "name": "AttachmentModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AttachmentModel>"
        },
        "statusUpdatedByUser": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "statusUpdateNotes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateStatusUpdated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "ExpenseRequestResponseModel"
      },
      "type": "object",
      "title": "ExpenseRequestResponseModel"
    },
    "ExpenseRequestLineItemModel": {
      "properties": {
        "expenseCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "expenseCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "notes": {
          "description": "",
          "type": "string",
          "maxLength": 255,
          "title": "String"
        },
        "taxCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxCodeDisplayName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "dateIncurred": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "ExpenseRequestLineItemModel"
      },
      "type": "object",
      "title": "ExpenseRequestLineItemModel"
    },
    "AttachmentModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "friendlyName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "url": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateScanned": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "isInfected": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        }
      },
      "xml": {
        "name": "AttachmentModel"
      },
      "type": "object",
      "title": "AttachmentModel"
    },
    "ExpenseRequestEditModel": {
      "required": [
        "employeeId"
      ],
      "properties": {
        "attachments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AttachmentModel"
          },
          "xml": {
            "name": "AttachmentModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AttachmentModel>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "Required",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "description": {
          "description": "",
          "type": "string",
          "maxLength": 255,
          "title": "String"
        },
        "lineItems": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ExpenseRequestEditLineItemModel"
          },
          "xml": {
            "name": "ExpenseRequestEditLineItemModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ExpenseRequestEditLineItemModel>"
        }
      },
      "xml": {
        "name": "ExpenseRequestEditModel"
      },
      "type": "object",
      "title": "ExpenseRequestEditModel"
    },
    "ExpenseRequestEditLineItemModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "expenseCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "notes": {
          "description": "",
          "type": "string",
          "maxLength": 255,
          "title": "String"
        },
        "taxCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxCodeDisplayName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "dateIncurred": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "ExpenseRequestEditLineItemModel"
      },
      "type": "object",
      "title": "ExpenseRequestEditLineItemModel"
    },
    "AuEmployeeGroupModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "filterCombinationStrategy": {
          "description": "",
          "type": "string",
          "enum": [
            "Or",
            "And"
          ],
          "title": "FilterCombinationStrategyEnum"
        },
        "filters": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuEmployeeFilterModel"
          },
          "xml": {
            "name": "AuEmployeeFilterModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuEmployeeFilterModel>"
        }
      },
      "xml": {
        "name": "AuEmployeeGroupModel"
      },
      "type": "object",
      "title": "AuEmployeeGroupModel"
    },
    "AuEmployeeFilterModel": {
      "properties": {
        "filterType": {
          "description": "",
          "type": "string",
          "enum": [
            "Location",
            "LocationOrParents",
            "Employee",
            "PaySchedule",
            "EmploymentType",
            "EmployingEntity",
            "Tag"
          ],
          "title": "AuFilterTypeEnum"
        },
        "operator": {
          "description": "",
          "type": "string",
          "enum": [
            "In",
            "NotIn"
          ],
          "title": "FilterOperatorEnum"
        },
        "value": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuEmployeeFilterModel"
      },
      "type": "object",
      "title": "AuEmployeeFilterModel"
    },
    "AuDetailedEmployeeGroupModel": {
      "properties": {
        "matchingEmployees": {
          "description": "",
          "items": {
            "$ref": "#/definitions/MatchingEmployeeModel"
          },
          "xml": {
            "name": "MatchingEmployeeModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<MatchingEmployeeModel>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "filterCombinationStrategy": {
          "description": "",
          "type": "string",
          "enum": [
            "Or",
            "And"
          ],
          "title": "FilterCombinationStrategyEnum"
        },
        "filters": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuEmployeeFilterModel"
          },
          "xml": {
            "name": "AuEmployeeFilterModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuEmployeeFilterModel>"
        }
      },
      "xml": {
        "name": "AuDetailedEmployeeGroupModel"
      },
      "type": "object",
      "title": "AuDetailedEmployeeGroupModel"
    },
    "MatchingEmployeeModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "MatchingEmployeeModel"
      },
      "type": "object",
      "title": "MatchingEmployeeModel"
    },
    "AuLeaveAllowanceTemplateModel": {
      "properties": {
        "leaveLoadingCalculatedFromPayCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuLeaveAllowanceTemplateLeaveCategoryApiModel"
          },
          "xml": {
            "name": "AuLeaveAllowanceTemplateLeaveCategoryApiModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuLeaveAllowanceTemplateLeaveCategoryApiModel>"
        },
        "awardId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "awardName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "leaveYearStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "leaveAccrualStartDateType": {
          "description": "",
          "type": "string",
          "enum": [
            "EmployeeStartDate",
            "SpecifiedDate",
            "CalendarYear",
            "CategorySpecificDate"
          ],
          "title": "Nullable<LeaveAccrualStartDateType>"
        }
      },
      "xml": {
        "name": "AuLeaveAllowanceTemplateModel"
      },
      "type": "object",
      "title": "AuLeaveAllowanceTemplateModel"
    },
    "AuLeaveAllowanceTemplateLeaveCategoryApiModel": {
      "properties": {
        "leaveLoading": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "contingentPeriod": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "entitlementPeriod": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Days",
            "Weeks",
            "HoursPerHourWorked",
            "HoursPerPayRun",
            "StandardDays",
            "StandardWeeks",
            "DayPerCalendarDay",
            "DayPerMonth"
          ],
          "title": "Nullable<LeaveAllowanceUnitEnum>"
        },
        "leaveUnitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Hours",
            "Days",
            "Weeks"
          ],
          "title": "Nullable<LeaveUnitTypeEnum>"
        },
        "accrualRuleLeaveYearOffsetAmount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "leaveCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "canApplyForLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "leaveAccrualRuleAccrualType": {
          "description": "",
          "type": "string",
          "enum": [
            "Ongoing",
            "Yearly",
            "BasedOnLengthOfService"
          ],
          "title": "LeaveAccrualType"
        },
        "leaveAccrualRuleCapType": {
          "description": "",
          "type": "string",
          "enum": [
            "NotLimited",
            "Limited"
          ],
          "title": "LeaveAccrualCapType"
        },
        "leaveAccrualRuleUnitCap": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leaveAccrualRuleCarryOverBehaviour": {
          "description": "",
          "type": "string",
          "enum": [
            "CarryEntireAmount",
            "CarryHours"
          ],
          "title": "LeaveAccrualCarryOverBehaviour"
        },
        "leaveAccrualRuleCarryOverAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leaveAccrualRuleAccrueInAdvance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuLeaveAllowanceTemplateLeaveCategoryApiModel"
      },
      "type": "object",
      "title": "AuLeaveAllowanceTemplateLeaveCategoryApiModel"
    },
    "AuLeaveAllowanceModel": {
      "properties": {
        "leaveLoading": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leaveAccrualRule": {
          "$ref": "#/definitions/AuLeaveAccrualRuleModel",
          "description": ""
        },
        "leaveCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveUnitType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hoursPerYear": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "automaticallyAccrues": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canApplyForLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuLeaveAllowanceModel"
      },
      "type": "object",
      "title": "AuLeaveAllowanceModel"
    },
    "AuLeaveAccrualRuleModel": {
      "properties": {
        "leaveYearOffsetAmount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "capType": {
          "description": "",
          "type": "string",
          "enum": [
            "NotLimited",
            "Limited"
          ],
          "title": "LeaveAccrualCapType"
        },
        "unitCap": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "carryOverBehaviour": {
          "description": "",
          "type": "string",
          "enum": [
            "CarryEntireAmount",
            "CarryHours"
          ],
          "title": "LeaveAccrualCarryOverBehaviour"
        },
        "carryOverAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "accrueInAdvance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "accrualType": {
          "description": "",
          "type": "string",
          "enum": [
            "Ongoing",
            "Yearly",
            "BasedOnLengthOfService"
          ],
          "title": "LeaveAccrualType"
        }
      },
      "xml": {
        "name": "AuLeaveAccrualRuleModel"
      },
      "type": "object",
      "title": "AuLeaveAccrualRuleModel"
    },
    "AuInitiateEmployeeOnboardingApiModel": {
      "properties": {
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "title": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mobile": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "qualificationsRequired": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "emergencyContactDetailsRequired": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuInitiateEmployeeOnboardingApiModel"
      },
      "type": "object",
      "title": "AuInitiateEmployeeOnboardingApiModel"
    },
    "PayRateScheduleModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "rateUnit": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "commencementDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "PayRateScheduleModel"
      },
      "type": "object",
      "title": "PayRateScheduleModel"
    },
    "EmployeeQualificationDocumentModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "visible": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "EmployeeQualificationDocumentModel"
      },
      "type": "object",
      "title": "EmployeeQualificationDocumentModel"
    },
    "EmployeeQualificationModel": {
      "properties": {
        "qualificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expiryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "issueDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "documents": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EmployeeQualificationDocumentModel"
          },
          "xml": {
            "name": "EmployeeQualificationDocumentModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<EmployeeQualificationDocumentModel>"
        },
        "referenceNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeQualificationModel"
      },
      "type": "object",
      "title": "EmployeeQualificationModel"
    },
    "EmployeeQualificationRequest": {
      "properties": {
        "qualificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expiryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "issueDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "referenceNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeQualificationRequest"
      },
      "type": "object",
      "title": "EmployeeQualificationRequest"
    },
    "AdditionalEarningsModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "title": "Int64"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "startDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "expiryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "maximumAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "isActive": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expirationType": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "DateExpiry",
            "AmountExpiry"
          ],
          "title": "ExpirationTypeEnum"
        },
        "totalAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "overrideSuperRate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AdditionalEarningsModel"
      },
      "type": "object",
      "title": "AdditionalEarningsModel"
    },
    "AdditionalEarningsInputModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "title": "Int64"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "expiryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "maximumAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "superRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "overrideSuperRate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AdditionalEarningsInputModel"
      },
      "type": "object",
      "title": "AdditionalEarningsInputModel"
    },
    "AuEmployeeRecurringDeductionModel": {
      "properties": {
        "deductionType": {
          "description": "",
          "type": "string",
          "enum": [
            "NotSet",
            "Fixed",
            "PercentageGross",
            "PercentageOTE",
            "PercentageStudentLoan",
            "PercentageNet",
            "Tiered",
            "Custom",
            "PercentageSuperannuation"
          ],
          "title": "DeductionTypeEnum"
        },
        "paidTo": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "BankAccount",
            "SuperFund",
            "Bpay",
            "PensionScheme",
            "TaxOffice",
            "CPFB"
          ],
          "title": "AuEmployeeRecurringDeductionPaidToEnum"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "deductionCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "paidToAccountId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "preservedEarningsAmountNotReachedAction": {
          "description": "",
          "type": "string",
          "enum": [
            "DoNotPay",
            "PayToLimit"
          ],
          "title": "DeductionAmountNotReachedEnum"
        },
        "carryForwardUnpaidDeductions": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "carryForwardUnusedPreservedEarnings": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "paymentReference": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "preservedEarnings": {
          "description": "",
          "type": "string",
          "enum": [
            "Never",
            "Amount",
            "Percentage"
          ],
          "title": "PreservedEarningsCalculationTypeEnum"
        },
        "preservedEarningsAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "additionalData": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "priority": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "deleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "expiryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "maximumAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "totalAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "isActive": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuEmployeeRecurringDeductionModel"
      },
      "type": "object",
      "title": "AuEmployeeRecurringDeductionModel"
    },
    "EmployeeRecurringExpenseModel": {
      "properties": {
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expenseCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "taxCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxCodeDisplayName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "expiryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "maximumAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "totalAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "isActive": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeRecurringExpenseModel"
      },
      "type": "object",
      "title": "EmployeeRecurringExpenseModel"
    },
    "EmployeeRecurringSuperAdjustmentModel": {
      "properties": {
        "contributionType": {
          "description": "",
          "type": "string",
          "enum": [
            "SuperGuarantee",
            "SalarySacrifice",
            "MemberVoluntary",
            "EmployerContribution",
            "NonRescEmployerContribution"
          ],
          "title": "SuperContributionType"
        },
        "adjustmentType": {
          "description": "",
          "type": "string",
          "enum": [
            "Fixed",
            "PercentageGross",
            "PercentageOTE",
            "PercentageTaxableEarnings"
          ],
          "title": "SuperAdjustmentTypeEnum"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "expiryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "maximumAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "totalAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "isActive": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeRecurringSuperAdjustmentModel"
      },
      "type": "object",
      "title": "EmployeeRecurringSuperAdjustmentModel"
    },
    "EmployerRecurringLiabilityModel": {
      "properties": {
        "employerLiabilityCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employerLiabilityCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "liabilityType": {
          "description": "",
          "type": "string",
          "enum": [
            "Fixed",
            "PercentageGross",
            "PercentageOTE",
            "PercentageSuperannuation"
          ],
          "title": "EmployerRecurringLiabilityTypeEnum"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "expiryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "maximumAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "totalAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "isActive": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployerRecurringLiabilityModel"
      },
      "type": "object",
      "title": "EmployerRecurringLiabilityModel"
    },
    "EmployeeRecurringTaxAdjustmentModel": {
      "properties": {
        "adjustmentType": {
          "description": "",
          "type": "string",
          "enum": [
            "Fixed",
            "PercentageGross",
            "PercentageTaxableEarnings"
          ],
          "title": "TaxAdjustmentTypeEnum"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "expiryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "maximumAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "totalAmountPaid": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "isActive": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeRecurringTaxAdjustmentModel"
      },
      "type": "object",
      "title": "EmployeeRecurringTaxAdjustmentModel"
    },
    "DimensionEarningsLineSplitApiModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "reportingDimensionValues": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ReportingDimensionValueBaseApiModel"
          },
          "xml": {
            "name": "ReportingDimensionValueBaseApiModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ReportingDimensionValueBaseApiModel>"
        },
        "allocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "allocateBalance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "DimensionEarningsLineSplitApiModel"
      },
      "type": "object",
      "title": "DimensionEarningsLineSplitApiModel"
    },
    "ReportingDimensionValueBaseApiModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "reportingDimensionId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "ReportingDimensionValueBaseApiModel"
      },
      "type": "object",
      "title": "ReportingDimensionValueBaseApiModel"
    },
    "ODataQueryOptionsOfSelfManagedSuperFund": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<SelfManagedSuperFund>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<SelfManagedSuperFund>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<SelfManagedSuperFund>"
    },
    "SelfManagedSuperFundModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "abn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fundName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bsb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "electronicServiceAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "SelfManagedSuperFundModel"
      },
      "type": "object",
      "title": "SelfManagedSuperFundModel"
    },
    "SuperFundModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "memberNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "allocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "fixedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "superProduct": {
          "$ref": "#/definitions/SuperProductModel",
          "description": ""
        },
        "allocateBalance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canBeDeleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isEmployerNominatedFund": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        }
      },
      "xml": {
        "name": "SuperFundModel"
      },
      "type": "object",
      "title": "SuperFundModel"
    },
    "SuperProductModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "abn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "productCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "productType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "businessName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "displayName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "productName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bsb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "electronicServiceAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "SuperProductModel"
      },
      "type": "object",
      "title": "SuperProductModel"
    },
    "SaveSuperFundModel": {
      "properties": {
        "memberNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "allocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "fixedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "productCode": {
          "description": "Nullable</p><p>Must be \"SMSF\" for a self managed super fund",
          "type": "string",
          "title": "String"
        },
        "fundName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "allocateBalance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isEmployerNominatedFund": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        }
      },
      "xml": {
        "name": "SaveSuperFundModel"
      },
      "type": "object",
      "title": "SaveSuperFundModel"
    },
    "SaveSuperFundResponseModel": {
      "properties": {
        "validationWarning": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "result": {
          "$ref": "#/definitions/SuperFundModel",
          "description": ""
        }
      },
      "xml": {
        "name": "SaveSuperFundResponseModel"
      },
      "type": "object",
      "title": "SaveSuperFundResponseModel"
    },
    "ODataQueryOptionsOfEmployerLiabilityCategory": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<EmployerLiabilityCategory>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<EmployerLiabilityCategory>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<EmployerLiabilityCategory>"
    },
    "EmployerLiabilityCategoryModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "canBeDeleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "hideFromPaySlips": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showTotalPayments": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "includeInShiftCosts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isSuperannuationFund": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "EmployerLiabilityCategoryModel"
      },
      "type": "object",
      "title": "EmployerLiabilityCategoryModel"
    },
    "ODataQueryOptionsOfEmployingEntity": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<EmployingEntity>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<EmployingEntity>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<EmployingEntity>"
    },
    "AuEmployingEntityModel": {
      "properties": {
        "abn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "suburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "branchCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isExemptFromFringeBenefitsTax": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "hasSeparateEntertainmentFringeBenefitsCap": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fbtExemptOrganisationType": {
          "description": "",
          "type": "string",
          "enum": [
            "PublicBenevolentInstitution",
            "HealthPromotionCharity",
            "PublicAndNonProfitHospital",
            "PublicAmbulanceService",
            "PovertyRelief",
            "EducationAdvancement",
            "ReligionAdvancement",
            "CommunityBenefit"
          ],
          "title": "Nullable<FbtExemptOrganisationTypeEnum>"
        },
        "isForeignEntity": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "foreignEntityCountry": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "signatoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactEmailAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactPhoneNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactFaxNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "addressLine1": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "addressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postcode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paySlipFromEmailAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuEmployingEntityModel"
      },
      "type": "object",
      "title": "AuEmployingEntityModel"
    },
    "GetShiftPeriodsModel": {
      "properties": {
        "firstShiftStartTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "lastShiftStartTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "GetShiftPeriodsModel"
      },
      "type": "object",
      "title": "GetShiftPeriodsModel"
    },
    "ShiftPeriodModel": {
      "properties": {
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "ShiftPeriodModel"
      },
      "type": "object",
      "title": "ShiftPeriodModel"
    },
    "ShiftCostingsRequestModel": {
      "properties": {
        "transactionExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "workTypeIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "includeEvaluationResults": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employee": {
          "$ref": "#/definitions/ShiftCostingsEmployeeModel",
          "description": ""
        },
        "shifts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ShiftCostingsRequestShiftModel"
          },
          "xml": {
            "name": "ShiftCostingsRequestShiftModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ShiftCostingsRequestShiftModel>"
        },
        "overrideRates": {
          "description": "",
          "items": {
            "$ref": "#/definitions/RateOverride"
          },
          "xml": {
            "name": "RateOverride",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<RateOverride>"
        }
      },
      "xml": {
        "name": "ShiftCostingsRequestModel"
      },
      "type": "object",
      "title": "ShiftCostingsRequestModel"
    },
    "ShiftCostingsEmployeeModel": {
      "properties": {
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateOfBirth": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "anniversaryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "standardHoursPerWeek": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "standardHoursPerDay": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "tags": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        }
      },
      "xml": {
        "name": "ShiftCostingsEmployeeModel"
      },
      "type": "object",
      "title": "ShiftCostingsEmployeeModel"
    },
    "ShiftCostingsRequestShiftModel": {
      "properties": {
        "shiftId": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "overrideRates": {
          "description": "",
          "items": {
            "$ref": "#/definitions/RateOverride"
          },
          "xml": {
            "name": "RateOverride",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<RateOverride>"
        },
        "classificationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "classification": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationIsDeleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "workTypeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "comments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetBreakModelv3"
          },
          "xml": {
            "name": "TimesheetBreakModelv3",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetBreakModelv3>"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "attachmentId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "shiftConditionIds": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        },
        "workType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fullyQualifiedLocationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "shiftConditions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetShiftConditionModelv3"
          },
          "xml": {
            "name": "TimesheetShiftConditionModelv3",
            "wrapped": true
          },
          "type": "array",
          "title": "List<TimesheetShiftConditionModelv3>"
        },
        "hiddenComments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "attachment": {
          "$ref": "#/definitions/Attachment",
          "description": ""
        },
        "submittedByUser": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dimensionValueIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        }
      },
      "xml": {
        "name": "ShiftCostingsRequestShiftModel"
      },
      "type": "object",
      "title": "ShiftCostingsRequestShiftModel"
    },
    "RateOverride": {
      "properties": {
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "useRateAsIs": {
          "description": "Nullable</p><p><i>Note:</i>If set to \"true\", the system assumes the <i>Rate</i> value is inclusive of rate loading and penalty loading.",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        }
      },
      "xml": {
        "name": "RateOverride"
      },
      "type": "object",
      "title": "RateOverride"
    },
    "TimesheetBreakModelv3": {
      "properties": {
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "TimesheetBreakModelv3"
      },
      "type": "object",
      "title": "TimesheetBreakModelv3"
    },
    "TimesheetShiftConditionModelv3": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "TimesheetShiftConditionModelv3"
      },
      "type": "object",
      "title": "TimesheetShiftConditionModelv3"
    },
    "Attachment": {
      "properties": {
        "data": {
          "description": "",
          "type": "string",
          "format": "byte",
          "title": "Byte[]"
        },
        "isDeleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "friendlyName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "url": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateScanned": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "isInfected": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        }
      },
      "xml": {
        "name": "Attachment"
      },
      "type": "object",
      "title": "Attachment"
    },
    "ShiftCostingsResponseModel": {
      "properties": {
        "transactionId": {
          "description": "",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid",
          "title": "Guid"
        },
        "transactionExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employmentAgreementId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employmentAgreementName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payConditionRuleSetId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payConditionRuleSetName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "shifts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ShiftCostingsResponseShiftModel"
          },
          "xml": {
            "name": "ShiftCostingsResponseShiftModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ShiftCostingsResponseShiftModel>"
        }
      },
      "xml": {
        "name": "ShiftCostingsResponseModel"
      },
      "type": "object",
      "title": "ShiftCostingsResponseModel"
    },
    "ShiftCostingsResponseShiftModel": {
      "properties": {
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "cost": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "evaluationResults": {
          "description": "",
          "items": {
            "$ref": "#/definitions/RuleEvaluationResult"
          },
          "xml": {
            "name": "RuleEvaluationResult",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<RuleEvaluationResult>"
        },
        "consolidatedShifts": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "List<String>"
        },
        "costBreakdown": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ShiftCostingBreakdownModel"
          },
          "xml": {
            "name": "ShiftCostingBreakdownModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ShiftCostingBreakdownModel>"
        }
      },
      "xml": {
        "name": "ShiftCostingsResponseShiftModel"
      },
      "type": "object",
      "title": "ShiftCostingsResponseShiftModel"
    },
    "RuleEvaluationResult": {
      "properties": {
        "ruleName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "matchResult": {
          "description": "",
          "type": "string",
          "enum": [
            "NoMatch",
            "Match",
            "DisabledForRuleSet",
            "DisabledForEmployee",
            "ExcludedCustomRule"
          ],
          "title": "RuleMatchResult"
        }
      },
      "xml": {
        "name": "RuleEvaluationResult"
      },
      "type": "object",
      "title": "RuleEvaluationResult"
    },
    "ShiftCostingBreakdownModel": {
      "properties": {
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "cost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "type": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "liabilityCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "liabilityCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ShiftCostingBreakdownModel"
      },
      "type": "object",
      "title": "ShiftCostingBreakdownModel"
    },
    "ODataQueryOptionsOfEmploymentAgreement": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<EmploymentAgreement>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<EmploymentAgreement>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<EmploymentAgreement>"
    },
    "BasicEmploymentAgreementModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "classification": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employmentType": {
          "description": "",
          "type": "string",
          "enum": [
            "Unknown",
            "FullTime",
            "PartTime",
            "LabourHire",
            "SuperannuationIncomeStream",
            "Casual"
          ],
          "title": "AuEmploymentTypeEnum"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "awardName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rank": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "awardId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "disableAutoProgression": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "BasicEmploymentAgreementModel"
      },
      "type": "object",
      "title": "BasicEmploymentAgreementModel"
    },
    "EmploymentAgreementModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "classification": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employmentType": {
          "description": "",
          "type": "string",
          "enum": [
            "Unknown",
            "FullTime",
            "PartTime",
            "LabourHire",
            "SuperannuationIncomeStream",
            "Casual",
            "NotApplicable",
            "IndependentContractor",
            "Management",
            "Contract",
            "Intern",
            "Other"
          ],
          "title": "EmploymentTypeEnum"
        },
        "payRateTemplateType": {
          "description": "",
          "type": "string",
          "enum": [
            "DateOfBirth",
            "Anniversary",
            "AnniversaryInMonths",
            "DateOfBirthAndAnniversaryInMonths"
          ],
          "title": "PayRateTemplateTypeEnum"
        },
        "payConditionRuleSetId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payConditionRuleSet": {
          "$ref": "#/definitions/PayConditionRuleSetModel",
          "description": ""
        },
        "leaveAllowanceTemplates": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LeaveAllowanceTemplateModel"
          },
          "xml": {
            "name": "LeaveAllowanceTemplateModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<LeaveAllowanceTemplateModel>"
        },
        "leaveAllowanceTemplateIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "agePayRateTemplates": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EmploymentAgreementPayRateTemplateModel"
          },
          "xml": {
            "name": "EmploymentAgreementPayRateTemplateModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<EmploymentAgreementPayRateTemplateModel>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "rank": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "awardId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "disableAutoProgression": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "EmploymentAgreementModel"
      },
      "type": "object",
      "title": "EmploymentAgreementModel"
    },
    "PayConditionRuleSetModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "periodType": {
          "description": "",
          "type": "string",
          "enum": [
            "Weekly",
            "Fortnightly",
            "Monthly",
            "CalendarMonth",
            "FourWeekly",
            "SixWeekly",
            "ThreeWeekly",
            "EightWeekly"
          ],
          "title": "RuleSetPeriodType"
        },
        "dayOfWeekEnding": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "dayOfMonthEnding": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "periodEnding": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "shiftConsolidationOption": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Duration",
            "SameDay"
          ],
          "title": "Nullable<ShiftConsolidationOption>"
        },
        "shiftConsolidationThreshold": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "rulesJson": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "disabledRules": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        }
      },
      "xml": {
        "name": "PayConditionRuleSetModel"
      },
      "type": "object",
      "title": "PayConditionRuleSetModel"
    },
    "LeaveAllowanceTemplateModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LeaveAllowanceTemplateLeaveCategoryModel"
          },
          "xml": {
            "name": "LeaveAllowanceTemplateLeaveCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<LeaveAllowanceTemplateLeaveCategoryModel>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "leaveLoadingCalculatedFromPayCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveAccrualStartDateType": {
          "description": "",
          "type": "string",
          "enum": [
            "EmployeeStartDate",
            "SpecifiedDate",
            "CalendarYear",
            "CategorySpecificDate"
          ],
          "title": "Nullable<LeaveAccrualStartDateType>"
        },
        "leaveYearStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "LeaveAllowanceTemplateModel"
      },
      "type": "object",
      "title": "LeaveAllowanceTemplateModel"
    },
    "EmploymentAgreementPayRateTemplateModel": {
      "properties": {
        "payRateTemplateId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payRateTemplate": {
          "$ref": "#/definitions/PayRateTemplateModel",
          "description": ""
        },
        "minAge": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "maxAge": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "minAnniversaryMonths": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "maxAnniversaryMonths": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "EmploymentAgreementPayRateTemplateModel"
      },
      "type": "object",
      "title": "EmploymentAgreementPayRateTemplateModel"
    },
    "LeaveAllowanceTemplateLeaveCategoryModel": {
      "properties": {
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Days",
            "Weeks",
            "HoursPerHourWorked",
            "HoursPerPayRun",
            "StandardDays",
            "StandardWeeks",
            "DayPerCalendarDay",
            "DayPerMonth"
          ],
          "title": "Nullable<LeaveAllowanceUnitEnum>"
        },
        "leaveLoading": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "canApplyForLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "contingentPeriod": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "entitlementPeriod": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "leaveAccrualRuleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "leaveAccrualRuleAccrualType": {
          "description": "",
          "type": "string",
          "enum": [
            "Ongoing",
            "Yearly",
            "BasedOnLengthOfService"
          ],
          "title": "LeaveAccrualType"
        },
        "leaveAccrualRuleCapType": {
          "description": "",
          "type": "string",
          "enum": [
            "NotLimited",
            "Limited"
          ],
          "title": "LeaveAccrualCapType"
        },
        "leaveAccrualRuleUnitCap": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leaveAccrualRuleCarryOverBehaviour": {
          "description": "",
          "type": "string",
          "enum": [
            "CarryEntireAmount",
            "CarryHours"
          ],
          "title": "LeaveAccrualCarryOverBehaviour"
        },
        "leaveAccrualRuleCarryOverAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leaveAccrualRuleAccrueInAdvance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "LeaveAllowanceTemplateLeaveCategoryModel"
      },
      "type": "object",
      "title": "LeaveAllowanceTemplateLeaveCategoryModel"
    },
    "PayRateTemplateModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "primaryPayCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "superThresholdAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "payCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PayRateTemplatePayCategoryModel"
          },
          "xml": {
            "name": "PayRateTemplatePayCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<PayRateTemplatePayCategoryModel>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "maximumQuarterlySuperContributionsBase": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "reapplyToLinkedEmployees": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "PayRateTemplateModel"
      },
      "type": "object",
      "title": "PayRateTemplateModel"
    },
    "PayRateTemplatePayCategoryModel": {
      "properties": {
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "userSuppliedRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "calculatedRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "standardWeeklyHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        }
      },
      "xml": {
        "name": "PayRateTemplatePayCategoryModel"
      },
      "type": "object",
      "title": "PayRateTemplatePayCategoryModel"
    },
    "AuTimeAndAttendanceLookupDataModel": {
      "properties": {
        "locations": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LocationSelectModel"
          },
          "xml": {
            "name": "LocationSelectModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<LocationSelectModel>"
        },
        "workTypes": {
          "description": "",
          "items": {
            "$ref": "#/definitions/WorkTypeSelectModel"
          },
          "xml": {
            "name": "WorkTypeSelectModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<WorkTypeSelectModel>"
        },
        "classifications": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ClassificationLookupModel"
          },
          "xml": {
            "name": "ClassificationLookupModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ClassificationLookupModel>"
        },
        "defaultLocation": {
          "$ref": "#/definitions/LocationSelectModel",
          "description": ""
        },
        "shiftConditions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ShiftConditionSelectModel"
          },
          "xml": {
            "name": "ShiftConditionSelectModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ShiftConditionSelectModel>"
        },
        "locationShiftConditions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LocationShiftConditionsModel"
          },
          "xml": {
            "name": "LocationShiftConditionsModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<LocationShiftConditionsModel>"
        },
        "reportingDimensionsEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "reportingDimensionGroups": {
          "description": "",
          "items": {
            "$ref": "#/definitions/NumericNullableSelectListItem"
          },
          "xml": {
            "name": "NumericNullableSelectListItem",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<NumericNullableSelectListItem>"
        },
        "reportingDimensionValues": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ReportingDimensionValueSelectModel"
          },
          "xml": {
            "name": "ReportingDimensionValueSelectModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ReportingDimensionValueSelectModel>"
        }
      },
      "xml": {
        "name": "AuTimeAndAttendanceLookupDataModel"
      },
      "type": "object",
      "title": "AuTimeAndAttendanceLookupDataModel"
    },
    "LocationSelectModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "LocationSelectModel"
      },
      "type": "object",
      "title": "LocationSelectModel"
    },
    "WorkTypeSelectModel": {
      "properties": {
        "isUnitBased": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isLeaveType": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "businessAwardPackageId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "WorkTypeSelectModel"
      },
      "type": "object",
      "title": "WorkTypeSelectModel"
    },
    "ClassificationLookupModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ClassificationLookupModel"
      },
      "type": "object",
      "title": "ClassificationLookupModel"
    },
    "ShiftConditionSelectModel": {
      "properties": {
        "shortCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "businessAwardPackageId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ShiftConditionSelectModel"
      },
      "type": "object",
      "title": "ShiftConditionSelectModel"
    },
    "LocationShiftConditionsModel": {
      "properties": {
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "shiftConditionIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        }
      },
      "xml": {
        "name": "LocationShiftConditionsModel"
      },
      "type": "object",
      "title": "LocationShiftConditionsModel"
    },
    "NumericNullableSelectListItem": {
      "properties": {
        "value": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "title": "Nullable<Int64>"
        },
        "text": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "NumericNullableSelectListItem"
      },
      "type": "object",
      "title": "NumericNullableSelectListItem"
    },
    "ReportingDimensionValueSelectModel": {
      "properties": {
        "reportingDimensionId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "isDeleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isNoLongerAllowed": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "value": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "title": "Nullable<Int64>"
        },
        "text": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ReportingDimensionValueSelectModel"
      },
      "type": "object",
      "title": "ReportingDimensionValueSelectModel"
    },
    "AuClockOnModel": {
      "properties": {
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "classificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "shiftConditionIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dimensionValueIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "latitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "longitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "kioskId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "ipAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "image": {
          "description": "",
          "type": "string",
          "format": "byte",
          "title": "Byte[]"
        },
        "isAdminInitiated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "recordedTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "utcOffset": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "noteVisibility": {
          "description": "",
          "type": "string",
          "enum": [
            "Hidden",
            "Visible"
          ],
          "title": "Nullable<TimeAttendanceShiftNoteVisibility>"
        }
      },
      "xml": {
        "name": "AuClockOnModel"
      },
      "type": "object",
      "title": "AuClockOnModel"
    },
    "KioskEmployeeModel": {
      "properties": {
        "pinExpired": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hasEmail": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "profileImageUrl": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mobileNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "NotClockedOn",
            "ClockedOn",
            "OnBreak",
            "ClockedOff"
          ],
          "title": "TimeAttendanceStatus"
        },
        "longShift": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "clockOnTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "breakStartTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "recordedTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "currentShiftId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeGroupIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "employeeStartDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "KioskEmployeeModel"
      },
      "type": "object",
      "title": "KioskEmployeeModel"
    },
    "GetShiftsModel": {
      "properties": {
        "kioskId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "fromDateUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "toDateUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "GetShiftsModel"
      },
      "type": "object",
      "title": "GetShiftsModel"
    },
    "AuTimeAndAttendanceShiftModel": {
      "properties": {
        "classificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "classificationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "startTimeLocal": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "startTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endTimeLocal": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationFullyQualifiedName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "kioskId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "kioskName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "timesheetLineId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employee": {
          "$ref": "#/definitions/BasicKioskEmployeeModel",
          "description": ""
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimeAndAttendanceBreakModel"
          },
          "xml": {
            "name": "TimeAndAttendanceBreakModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimeAndAttendanceBreakModel>"
        },
        "shiftConditions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ShiftConditionModel"
          },
          "xml": {
            "name": "ShiftConditionModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ShiftConditionModel>"
        },
        "dimensionValues": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ReportingDimensionValueBaseApiModel"
          },
          "xml": {
            "name": "ReportingDimensionValueBaseApiModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ReportingDimensionValueBaseApiModel>"
        }
      },
      "xml": {
        "name": "AuTimeAndAttendanceShiftModel"
      },
      "type": "object",
      "title": "AuTimeAndAttendanceShiftModel"
    },
    "BasicKioskEmployeeModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hasEmail": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "profileImageUrl": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mobileNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "NotClockedOn",
            "ClockedOn",
            "OnBreak",
            "ClockedOff"
          ],
          "title": "TimeAttendanceStatus"
        },
        "longShift": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "clockOnTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "breakStartTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "recordedTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "currentShiftId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeGroupIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "employeeStartDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "BasicKioskEmployeeModel"
      },
      "type": "object",
      "title": "BasicKioskEmployeeModel"
    },
    "TimeAndAttendanceBreakModel": {
      "properties": {
        "startTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "startTimeLocal": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endTimeLocal": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "TimeAndAttendanceBreakModel"
      },
      "type": "object",
      "title": "TimeAndAttendanceBreakModel"
    },
    "ShiftConditionModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ShiftConditionModel"
      },
      "type": "object",
      "title": "ShiftConditionModel"
    },
    "ClockOffModel": {
      "properties": {
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "latitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "longitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "kioskId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "ipAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "image": {
          "description": "",
          "type": "string",
          "format": "byte",
          "title": "Byte[]"
        },
        "isAdminInitiated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "recordedTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "utcOffset": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "noteVisibility": {
          "description": "",
          "type": "string",
          "enum": [
            "Hidden",
            "Visible"
          ],
          "title": "Nullable<TimeAttendanceShiftNoteVisibility>"
        }
      },
      "xml": {
        "name": "ClockOffModel"
      },
      "type": "object",
      "title": "ClockOffModel"
    },
    "StartBreakModel": {
      "properties": {
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "latitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "longitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "kioskId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "ipAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "image": {
          "description": "",
          "type": "string",
          "format": "byte",
          "title": "Byte[]"
        },
        "isAdminInitiated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "recordedTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "utcOffset": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "noteVisibility": {
          "description": "",
          "type": "string",
          "enum": [
            "Hidden",
            "Visible"
          ],
          "title": "Nullable<TimeAttendanceShiftNoteVisibility>"
        }
      },
      "xml": {
        "name": "StartBreakModel"
      },
      "type": "object",
      "title": "StartBreakModel"
    },
    "EndBreakModel": {
      "properties": {
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "latitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "longitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "kioskId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "ipAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "image": {
          "description": "",
          "type": "string",
          "format": "byte",
          "title": "Byte[]"
        },
        "isAdminInitiated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "recordedTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "utcOffset": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "noteVisibility": {
          "description": "",
          "type": "string",
          "enum": [
            "Hidden",
            "Visible"
          ],
          "title": "Nullable<TimeAttendanceShiftNoteVisibility>"
        }
      },
      "xml": {
        "name": "EndBreakModel"
      },
      "type": "object",
      "title": "EndBreakModel"
    },
    "AddNoteModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "type": {
          "description": "",
          "type": "string",
          "enum": [
            "Shift",
            "ClockOn",
            "ClockOff"
          ],
          "title": "TimeAttendanceShiftNoteType"
        },
        "visibility": {
          "description": "",
          "type": "string",
          "enum": [
            "Hidden",
            "Visible"
          ],
          "title": "TimeAttendanceShiftNoteVisibility"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isAdminInitiated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AddNoteModel"
      },
      "type": "object",
      "title": "AddNoteModel"
    },
    "GetShiftNotesModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "isAdminInitiated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "type": {
          "description": "",
          "type": "string",
          "enum": [
            "Shift",
            "ClockOn",
            "ClockOff"
          ],
          "title": "Nullable<TimeAttendanceShiftNoteType>"
        },
        "visibility": {
          "description": "",
          "type": "string",
          "enum": [
            "Hidden",
            "Visible"
          ],
          "title": "Nullable<TimeAttendanceShiftNoteVisibility>"
        }
      },
      "xml": {
        "name": "GetShiftNotesModel"
      },
      "type": "object",
      "title": "GetShiftNotesModel"
    },
    "MarkNotesReadViewModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "noteIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "Int32[]"
        },
        "read": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "MarkNotesReadViewModel"
      },
      "type": "object",
      "title": "MarkNotesReadViewModel"
    },
    "EmployeeExpensePaymentSummaryModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "expenseCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "expenseCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "ytdAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "EmployeeExpensePaymentSummaryModel"
      },
      "type": "object",
      "title": "EmployeeExpensePaymentSummaryModel"
    },
    "ExpenseCategoryResponseModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalTaxCodeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        }
      },
      "xml": {
        "name": "ExpenseCategoryResponseModel"
      },
      "type": "object",
      "title": "ExpenseCategoryResponseModel"
    },
    "EssExpenseRequestResponseModel": {
      "properties": {
        "canCancel": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "canModify": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "lineItems": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ExpenseRequestLineItemModel"
          },
          "xml": {
            "name": "ExpenseRequestLineItemModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ExpenseRequestLineItemModel>"
        },
        "attachments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AttachmentModel"
          },
          "xml": {
            "name": "AttachmentModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AttachmentModel>"
        },
        "statusUpdatedByUser": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "statusUpdateNotes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateStatusUpdated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "EssExpenseRequestResponseModel"
      },
      "type": "object",
      "title": "EssExpenseRequestResponseModel"
    },
    "AuEssBankAccountModel": {
      "properties": {
        "accountType": {
          "description": "",
          "type": "string",
          "enum": [
            "Electronic",
            "ManualDeposit",
            "CashOrCheque",
            "Bpay"
          ],
          "title": "BankAccountTypeEnum"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "bsb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "allocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "fixedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "allocateBalance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isEmployeeEditable": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canBeDeleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuEssBankAccountModel"
      },
      "type": "object",
      "title": "AuEssBankAccountModel"
    },
    "AuEssSaveBankAccountResponseModel": {
      "properties": {
        "validationWarning": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "result": {
          "$ref": "#/definitions/AuEssBankAccountModel",
          "description": ""
        }
      },
      "xml": {
        "name": "AuEssSaveBankAccountResponseModel"
      },
      "type": "object",
      "title": "AuEssSaveBankAccountResponseModel"
    },
    "EmployeeTimesheetFilter": {
      "required": [
        "fromDate",
        "toDate"
      ],
      "properties": {
        "fromDate": {
          "description": "Required",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "Required",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "EmployeeTimesheetFilter"
      },
      "type": "object",
      "title": "EmployeeTimesheetFilter"
    },
    "EssTimesheetModel": {
      "properties": {
        "canDelete": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "canEdit": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "statusId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "attachment": {
          "$ref": "#/definitions/Attachment",
          "description": ""
        },
        "workDurationInMinutes": {
          "description": "",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "breaksDurationInMinutes": {
          "description": "",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "totalDurationInMinutes": {
          "description": "",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "autoApprovedByRosterShiftId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationIsDeleted": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "classificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "classificationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workTypeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isUnitBasedWorkType": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "start": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "end": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "submittedStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "submittedEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "Missing",
            "Submitted",
            "Approved",
            "Rejected",
            "Processed"
          ],
          "title": "TimesheetLineStatusType"
        },
        "paySlipUrl": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetBreakViewModel"
          },
          "xml": {
            "name": "TimesheetBreakViewModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetBreakViewModel>"
        },
        "comments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveRequestId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "isLocked": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "cost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "costingData": {
          "$ref": "#/definitions/ShiftCostingData",
          "description": ""
        },
        "costByLocation": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "costingDataByLocation": {
          "$ref": "#/definitions/ShiftCostingData",
          "description": ""
        },
        "discard": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "shiftConditionIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "isOverlapping": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "overdrawsLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "reviewedBy": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "durationOverride": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "hiddenComments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "readOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "ignoreRounding": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "dimensionValueIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        }
      },
      "xml": {
        "name": "EssTimesheetModel"
      },
      "type": "object",
      "title": "EssTimesheetModel"
    },
    "TimesheetBreakViewModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "start": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "end": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "submittedStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "submittedEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "formattedStart": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "formattedEnd": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "TimesheetBreakViewModel"
      },
      "type": "object",
      "title": "TimesheetBreakViewModel"
    },
    "ShiftCostingData": {
      "properties": {
        "shiftParts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ShiftPartModel"
          },
          "xml": {
            "name": "ShiftPartModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ShiftPartModel>"
        },
        "allowances": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ShiftAllowanceModel"
          },
          "xml": {
            "name": "ShiftAllowanceModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ShiftAllowanceModel>"
        },
        "liabilities": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ShiftLiabilityModel"
          },
          "xml": {
            "name": "ShiftLiabilityModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ShiftLiabilityModel>"
        },
        "isConsolidated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "ShiftCostingData"
      },
      "type": "object",
      "title": "ShiftCostingData"
    },
    "ShiftPartModel": {
      "properties": {
        "isBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "effectiveDuration": {
          "description": "",
          "type": "string",
          "title": "TimeSpan"
        },
        "actualDuration": {
          "description": "",
          "type": "string",
          "title": "TimeSpan"
        },
        "payCategory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "cost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "rateMultiplier": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "baseRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "calculatedRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "displayDuration": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "workType": {
          "$ref": "#/definitions/NominalWorkType",
          "description": ""
        },
        "classification": {
          "$ref": "#/definitions/NominalClassification",
          "description": ""
        },
        "leaveCategory": {
          "$ref": "#/definitions/NominalLeaveCategory",
          "description": ""
        },
        "location": {
          "$ref": "#/definitions/NominalLocation",
          "description": ""
        },
        "isAllowanceOrUnitBased": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "ShiftPartModel"
      },
      "type": "object",
      "title": "ShiftPartModel"
    },
    "ShiftAllowanceModel": {
      "properties": {
        "payCategory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "cost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "rateMultiplier": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "option": {
          "description": "",
          "type": "string",
          "enum": [
            "Fixed",
            "PerHourWorked",
            "PercentageOfShiftCost",
            "PerShiftUnit",
            "PerDay"
          ],
          "title": "ShiftAllowanceOption"
        },
        "type": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "AllPurpose"
          ],
          "title": "ShiftAllowanceType"
        },
        "classification": {
          "$ref": "#/definitions/NominalClassification",
          "description": ""
        }
      },
      "xml": {
        "name": "ShiftAllowanceModel"
      },
      "type": "object",
      "title": "ShiftAllowanceModel"
    },
    "ShiftLiabilityModel": {
      "properties": {
        "liabilityCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "liabilityCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "includeInShiftCost": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "option": {
          "description": "",
          "type": "string",
          "enum": [
            "Fixed",
            "PerHourWorked",
            "PercentageOfShiftCost",
            "PerShiftUnit",
            "PerDay"
          ],
          "title": "ShiftAllowanceOption"
        },
        "cost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "ShiftLiabilityModel"
      },
      "type": "object",
      "title": "ShiftLiabilityModel"
    },
    "NominalWorkType": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "linkType": {
          "description": "",
          "type": "string",
          "enum": [
            "PayCategory",
            "LeaveCategory",
            "ShiftCondition"
          ],
          "title": "WorkTypeLinkTypeRestriction"
        }
      },
      "xml": {
        "name": "NominalWorkType"
      },
      "type": "object",
      "title": "NominalWorkType"
    },
    "NominalClassification": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "rank": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "NominalClassification"
      },
      "type": "object",
      "title": "NominalClassification"
    },
    "NominalLeaveCategory": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "NominalLeaveCategory"
      },
      "type": "object",
      "title": "NominalLeaveCategory"
    },
    "NominalLocation": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "NominalLocation"
      },
      "type": "object",
      "title": "NominalLocation"
    },
    "AuEssTimesheetDataModel": {
      "properties": {
        "timesheets": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EssTimesheetModel"
          },
          "xml": {
            "name": "EssTimesheetModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<EssTimesheetModel>"
        },
        "leaveRequests": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EssLeaveRequestModel"
          },
          "xml": {
            "name": "EssLeaveRequestModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<EssLeaveRequestModel>"
        },
        "rosterShifts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuEssRosterShiftModel"
          },
          "xml": {
            "name": "AuEssRosterShiftModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AuEssRosterShiftModel>"
        },
        "publicHolidays": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PublicHolidayModel"
          },
          "xml": {
            "name": "PublicHolidayModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<PublicHolidayModel>"
        }
      },
      "xml": {
        "name": "AuEssTimesheetDataModel"
      },
      "type": "object",
      "title": "AuEssTimesheetDataModel"
    },
    "EssLeaveRequestModel": {
      "properties": {
        "totalHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isApproved": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isDeclined": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isCancelled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isPending": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "requestedDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "leaveCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hoursPerDay": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalUnits": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "previouslyAppliedUnits": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "canPartiallyEdit": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "totalDays": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "amount": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "statusUpdateNotes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "canCancel": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canModify": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "requireNotesForLeaveRequests": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "attachment": {
          "$ref": "#/definitions/AttachmentModel",
          "description": ""
        },
        "unitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Hours",
            "Days",
            "Weeks"
          ],
          "title": "LeaveUnitTypeEnum"
        },
        "banner": {
          "$ref": "#/definitions/PartiallyAppliedLeaveRequestBannerModel",
          "description": ""
        },
        "manuallyApplied": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "appliedLeaveUnitTypeDescription": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EssLeaveRequestModel"
      },
      "type": "object",
      "title": "EssLeaveRequestModel"
    },
    "AuEssRosterShiftModel": {
      "properties": {
        "classificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "classificationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "token": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "qualifications": {
          "description": "",
          "items": {
            "$ref": "#/definitions/QualificationModel"
          },
          "xml": {
            "name": "QualificationModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<QualificationModel>"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/RosterShiftBreakApiModel"
          },
          "xml": {
            "name": "RosterShiftBreakApiModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<RosterShiftBreakApiModel>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "role": {
          "$ref": "#/definitions/RosterShiftRole",
          "description": ""
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "published": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "accepted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "pendingSwap": {
          "$ref": "#/definitions/RosterShiftSwapModel",
          "description": ""
        },
        "datePublished": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "biddable": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "shiftSwapCutoffTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "shiftAssignmentStatus": {
          "description": "",
          "type": "string",
          "enum": [
            "Pending",
            "Assigned",
            "Bidding",
            "PendingShiftSwap",
            "PendingShiftSwapAwaitingApproval",
            "ProposedShiftSwap",
            "ProposedShiftSwapAwaitingApproval"
          ],
          "title": "Nullable<ShiftAssignmentStatusEnum>"
        }
      },
      "xml": {
        "name": "AuEssRosterShiftModel"
      },
      "type": "object",
      "title": "AuEssRosterShiftModel"
    },
    "PublicHolidayModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "date": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "states": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        },
        "locationIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "ICollection<Int32>"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isSystem": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notAPublicHoliday": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "mondayisedAlternativeToId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "PublicHolidayModel"
      },
      "type": "object",
      "title": "PublicHolidayModel"
    },
    "PartiallyAppliedLeaveRequestBannerModel": {
      "properties": {
        "header": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "items": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        }
      },
      "xml": {
        "name": "PartiallyAppliedLeaveRequestBannerModel"
      },
      "type": "object",
      "title": "PartiallyAppliedLeaveRequestBannerModel"
    },
    "QualificationModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "QualificationModel"
      },
      "type": "object",
      "title": "QualificationModel"
    },
    "RosterShiftBreakApiModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "RosterShiftBreakApiModel"
      },
      "type": "object",
      "title": "RosterShiftBreakApiModel"
    },
    "RosterShiftRole": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "className": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hexColourCode": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "RosterShiftRole"
      },
      "type": "object",
      "title": "RosterShiftRole"
    },
    "RosterShiftSwapModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromEmployee": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "toEmployee": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fromEmployeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "toEmployeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rejectedReason": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "status": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "statusDescription": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "RosterShiftSwapModel"
      },
      "type": "object",
      "title": "RosterShiftSwapModel"
    },
    "EssDeclineRosterShiftModel": {
      "properties": {
        "reason": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EssDeclineRosterShiftModel"
      },
      "type": "object",
      "title": "EssDeclineRosterShiftModel"
    },
    "EssRosterShiftCountModel": {
      "properties": {
        "proposedSwapCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "pendingShiftCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "biddableShiftCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "notAcceptedShiftsCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "EssRosterShiftCountModel"
      },
      "type": "object",
      "title": "EssRosterShiftCountModel"
    },
    "AuAcceptRosterShiftResponseModel": {
      "properties": {
        "shift": {
          "$ref": "#/definitions/AuEssRosterShiftModel",
          "description": ""
        },
        "proposedSwapCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "pendingShiftCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "biddableShiftCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "notAcceptedShiftsCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "AuAcceptRosterShiftResponseModel"
      },
      "type": "object",
      "title": "AuAcceptRosterShiftResponseModel"
    },
    "EssBulkAcceptRosterShiftsModel": {
      "properties": {
        "shifts": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        }
      },
      "xml": {
        "name": "EssBulkAcceptRosterShiftsModel"
      },
      "type": "object",
      "title": "EssBulkAcceptRosterShiftsModel"
    },
    "AuAcceptRosterShiftsResponseModel": {
      "properties": {
        "shifts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuEssRosterShiftModel"
          },
          "xml": {
            "name": "AuEssRosterShiftModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuEssRosterShiftModel>"
        },
        "proposedSwapCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "pendingShiftCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "biddableShiftCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "notAcceptedShiftsCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "AuAcceptRosterShiftsResponseModel"
      },
      "type": "object",
      "title": "AuAcceptRosterShiftsResponseModel"
    },
    "EssBulkDeclineRosterShiftsModel": {
      "properties": {
        "reason": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "shifts": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        }
      },
      "xml": {
        "name": "EssBulkDeclineRosterShiftsModel"
      },
      "type": "object",
      "title": "EssBulkDeclineRosterShiftsModel"
    },
    "AuRosterShiftMatchingResultModel": {
      "properties": {
        "shift": {
          "$ref": "#/definitions/AuEssRosterShiftModel",
          "description": ""
        }
      },
      "xml": {
        "name": "AuRosterShiftMatchingResultModel"
      },
      "type": "object",
      "title": "AuRosterShiftMatchingResultModel"
    },
    "EssShiftSwapCandidate": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "profileImageUrl": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EssShiftSwapCandidate"
      },
      "type": "object",
      "title": "EssShiftSwapCandidate"
    },
    "SwapShiftModel": {
      "properties": {
        "rosterShiftId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromEmployeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "toEmployeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "createdByUserId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "token": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "SwapShiftModel"
      },
      "type": "object",
      "title": "SwapShiftModel"
    },
    "AuEssRosterShiftActionResponse": {
      "properties": {
        "shift": {
          "$ref": "#/definitions/AuEssRosterShiftModel",
          "description": ""
        },
        "pendingShiftCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "proposedSwapCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "notAcceptedShiftsCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "AuEssRosterShiftActionResponse"
      },
      "type": "object",
      "title": "AuEssRosterShiftActionResponse"
    },
    "EssBulkRosterShiftSwapModel": {
      "properties": {
        "shifts": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        }
      },
      "xml": {
        "name": "EssBulkRosterShiftSwapModel"
      },
      "type": "object",
      "title": "EssBulkRosterShiftSwapModel"
    },
    "AuEssBulkRosterShiftActionResponse": {
      "properties": {
        "shifts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuEssRosterShiftModel"
          },
          "xml": {
            "name": "AuEssRosterShiftModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuEssRosterShiftModel>"
        },
        "pendingShiftCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "proposedSwapCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "notAcceptedShiftsCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "AuEssBulkRosterShiftActionResponse"
      },
      "type": "object",
      "title": "AuEssBulkRosterShiftActionResponse"
    },
    "TitleViewModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "TitleViewModel"
      },
      "type": "object",
      "title": "TitleViewModel"
    },
    "LocationModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "parentId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalAccountingLocationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fullyQualifiedName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isGlobal": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isRollupReportingLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "generalLedgerMappingCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "defaultShiftConditionIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "LocationModel"
      },
      "type": "object",
      "title": "LocationModel"
    },
    "PagedResultModelOfSuburbModel": {
      "properties": {
        "itemCountFuture": {
          "$ref": "#/definitions/IFutureValueOfInt32",
          "description": ""
        },
        "itemCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "items": {
          "description": "",
          "items": {
            "$ref": "#/definitions/SuburbModel"
          },
          "xml": {
            "name": "SuburbModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IEnumerable<SuburbModel>"
        },
        "currentPage": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "pageSize": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "pageCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "PagedResultModel`1"
      },
      "type": "object",
      "title": "PagedResultModel<SuburbModel>"
    },
    "IFutureValueOfInt32": {
      "properties": {
        "value": {
          "description": "",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "IFutureValue`1"
      },
      "type": "object",
      "title": "IFutureValue<Int32>"
    },
    "SuburbModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postcode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "country": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "countryId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "SuburbModel"
      },
      "type": "object",
      "title": "SuburbModel"
    },
    "SuburbResult": {
      "properties": {
        "result": {
          "$ref": "#/definitions/SuburbModel",
          "description": ""
        }
      },
      "xml": {
        "name": "SuburbResult"
      },
      "type": "object",
      "title": "SuburbResult"
    },
    "AvailableEmployeeModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "businessId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "businessName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "jobTitle": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hasProfileImage": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "branding": {
          "$ref": "#/definitions/WhiteLabelBrandingModel",
          "description": ""
        },
        "defaultLocationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "profileImageUrl": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "region": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isTerminated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AvailableEmployeeModel"
      },
      "type": "object",
      "title": "AvailableEmployeeModel"
    },
    "WhiteLabelBrandingModel": {
      "properties": {
        "logoUrl": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "backgroundImageUrl": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "backgroundColour": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "textColour": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "textHoverColour": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "textSecondaryColour": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "darkModeLogoUrl": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "darkModeBackgroundColour": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "darkModeTextColour": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "darkModeTextSecondaryColour": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "WhiteLabelBrandingModel"
      },
      "type": "object",
      "title": "WhiteLabelBrandingModel"
    },
    "RecoverPasswordModel": {
      "required": [
        "username"
      ],
      "properties": {
        "username": {
          "description": "Required",
          "type": "string",
          "title": "String"
        },
        "messageType": {
          "description": "",
          "type": "string",
          "enum": [
            "NewPaySlipAvailable",
            "NewUser",
            "RecoverPassword",
            "EmployeeAccess",
            "BusinessAccess",
            "Invoice",
            "AutomatedPassword",
            "LeaveRequestNotification",
            "RestrictedAccess",
            "ResendPayslip",
            "PaymentSummaryAvailable",
            "SuperPaymentsUpdateResults",
            "NewShiftsPublished",
            "ShiftsUnpublished",
            "ShiftDeclined",
            "KioskAccessGranted",
            "DailyNotifications",
            "BsbDataImported",
            "InvoiceeCardDetailsRemoved",
            "WhiteLabelManagerAccess",
            "ResellerAccess",
            "DirectDepositReminder",
            "ExpenseRequestNotification",
            "UnavailabilityNotification",
            "ReportPackGenerated",
            "ReportPackError",
            "SystemPublicHolidayImport",
            "TimesheetRejected",
            "ShiftRepublished",
            "PendingShiftsReminder",
            "EmployeeShiftActionTimeout",
            "InitiateEmployeeOnboarding",
            "FollowUpEmployeeOnboarding",
            "CompleteEmployeeOnboarding",
            "NewShiftsPreAccepted",
            "PayRunTaskNotification",
            "ShiftSwapCancelled",
            "BulkShiftSwapsCancelled",
            "ShiftSwapAwaitingApproval",
            "ShiftSwapProposed",
            "ShiftSwapAccepted",
            "ShiftSwapDeclined",
            "ShiftSwapRejected",
            "ShiftSwapApproved",
            "P60Available",
            "P60Error",
            "LeavingEmployeeFormNotification",
            "AutoEnrolmentNotification",
            "LodgementNotification",
            "TwoFactorLogin",
            "TwoFactorChallenge",
            "ConfirmEmailAddress",
            "ConfirmMobilePhone",
            "DocumentNotificationInitial",
            "DocumentNotificationInitialWithAcknowledgement",
            "DocumentNotificationReminder",
            "DocumentAcknowledgedNotification",
            "InitiateEmployeeOnboardingAdmin",
            "PayEventRequestAuthority",
            "PayEventApprovedOrRejected",
            "ShiftBidAccepted",
            "EmployeeDetailsUpdated",
            "BankAccountDetailsUpdated",
            "SuperDetailsUpdated",
            "ManagerShiftActionTimeout",
            "SuperFundNotificationNewMember",
            "SuperPaymentDishonour",
            "KiwiSaverDetailsUpdated",
            "AutoEnrolmentPostponementNotification",
            "AutomatedPayRunErrorCreation",
            "AutomatedPayRunErrorProcessing",
            "AutomatedPayRunErrorFinalisation",
            "AutomatedPayRunErrorPostFinalise",
            "AutomatedPayRunSuccessAndFinalised",
            "AutomatedPayRunSuccessNotFinalised",
            "AutomatedPayRunCreation",
            "PayRunUsageBillingFailures",
            "IncomeStatementAvailable",
            "MaliciousFileNotificationAdmin",
            "UserAccountLocked",
            "MaliciousFileNotificationEmployee",
            "SuperFundRefundNotification",
            "SuperBatchCancelledNotification",
            "JobKeeperEmployeeNomination",
            "HmrcPaymentReminder",
            "IrasFormAvailable",
            "HmrcPaymentReminderSendFailure",
            "SyncCancelledSuperBatchesFromBeam",
            "EAFormIncomeTaxAvailable",
            "PCB2FormAvailable",
            "JobMakerEmployeeNomination",
            "EarningsCertificateAvailable",
            "P11dAvailable",
            "PayRunApprovalNotification",
            "PayRunApprovalReminder",
            "PayRunStatusChanged",
            "QualificationUpdatedNotification",
            "QualificationExpiringNotification",
            "QualificationExpiredNotification",
            "CreditCardExpiringReminder",
            "ResendPaymentAndDeductionStatement",
            "EmployeeSelfSetupReminder",
            "EmployeeOnboardingP45Uploaded",
            "BusinessAccessGranted",
            "InitiateEmployeeOnboardingWithContract",
            "SignatoryContract",
            "WorkEligibilityExpiringNotification",
            "WorkEligibilityExpiredNotification",
            "ContractSignedEmployeeNotification",
            "ContractSignedEmployerNotification",
            "InitiateEmployeeOnboardingWithLogin",
            "AuthorisingSignatoryNotification",
            "IntegrationCustomFeatureRequest",
            "UserAccountLockedByAdmin",
            "UserAccountUnlockedByAdmin",
            "EmailAddressChanged",
            "EmailAddressConfirmChanged",
            "RecoveryEmailAddressChanged",
            "RecoveryEmailAddressConfirmChanged",
            "FraudProtectionCheckResult",
            "SuspiciousLogin",
            "ImpossibleTravelLogin",
            "PaymentApprovalNotification",
            "PaymentApprovalReminder",
            "PaymentApprovalStatusChanged",
            "BulkActionUserPasswordChanged",
            "BulkActionUserAccountLocked",
            "BulkActionUserAccountUnlocked",
            "P60DownloadReady",
            "PartnerBusinessDeactivationNotification30Days",
            "EHDirectBusinessDeactivationNotification30Days"
          ],
          "title": "MessageTypeEnum"
        }
      },
      "xml": {
        "name": "RecoverPasswordModel"
      },
      "type": "object",
      "title": "RecoverPasswordModel"
    },
    "SuperProductEditModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "abn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "productCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "productType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "businessName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "displayName": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "productName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "accountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bsb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "electronicServiceAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superDetailsDefaultFundId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "SuperProductEditModel"
      },
      "type": "object",
      "title": "SuperProductEditModel"
    },
    "EssEmployeeQualificationModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "qualificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expiryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "issueDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "documents": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EssEmployeeQualificationDocumentModel"
          },
          "xml": {
            "name": "EssEmployeeQualificationDocumentModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<EssEmployeeQualificationDocumentModel>"
        },
        "referenceNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hasQualification": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isExpired": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "isExpiring": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "EssEmployeeQualificationModel"
      },
      "type": "object",
      "title": "EssEmployeeQualificationModel"
    },
    "EssEmployeeQualificationDocumentModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "visible": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "url": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EssEmployeeQualificationDocumentModel"
      },
      "type": "object",
      "title": "EssEmployeeQualificationDocumentModel"
    },
    "AuFeaturesModel": {
      "properties": {
        "allowEmployeeSuperFundSelfService": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "clockOnCanSpecifyHigherClassification": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeLeaveSelfService": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeSelfEditing": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeTimesheetsSelfService": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeToSetUnavailability": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeToDeclineShifts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeBankAccountSelfService": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeSatisfactionSurvey": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeesToViewAllApprovedLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "unavailabilityCutOff": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "allowEmployeesToUploadProfilePicture": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeRosteringSelfService": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeExpensesSelfService": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeQualificationsSelfService": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeOverrideTaxCodes": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeesToEditKioskTimesheets": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "essTimesheetSetting": {
          "description": "",
          "type": "string",
          "enum": [
            "Disabled",
            "ReadOnly",
            "ReadWrite",
            "EditKiosk",
            "EditWorkZoneClockOnOff"
          ],
          "title": "ESSTimesheetSetting"
        },
        "employeeMustAcceptShifts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeTimesheetsWithoutStartStopTimes": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeToSwapShifts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "clockOnRequirePhoto": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "clockOnAllowEmployeeShiftSelection": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "clockOnWindowMinutes": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "clockOffWindowMinutes": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "timesheetsRequireLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timesheetsRequireWorkType": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "enableWorkZoneClockOn": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "shiftBidding": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowToSelectHigherClassification": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeWorkEligibilitySelfService": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "paidBreaksEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timesheetDimensionsEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuFeaturesModel"
      },
      "type": "object",
      "title": "AuFeaturesModel"
    },
    "AuEssEmployeeDetailsEditModel": {
      "properties": {
        "residentialAddress": {
          "$ref": "#/definitions/AuAddressModel",
          "description": ""
        },
        "postalAddress": {
          "$ref": "#/definitions/AuAddressModel",
          "description": ""
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "titleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "otherName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "middleName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "previousSurname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateOfBirth": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "gender": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "homePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workPhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mobilePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isPostalAddressSameAsResidential": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        }
      },
      "xml": {
        "name": "AuEssEmployeeDetailsEditModel"
      },
      "type": "object",
      "title": "AuEssEmployeeDetailsEditModel"
    },
    "AuAddressModel": {
      "properties": {
        "streetAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "addressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postcode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "country": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "countryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "suburbId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "suburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isManualAddress": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "isOutOfRegion": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        }
      },
      "xml": {
        "name": "AuAddressModel"
      },
      "type": "object",
      "title": "AuAddressModel"
    },
    "AuEssEmployeeDetailsViewModel": {
      "properties": {
        "residentialAddress": {
          "$ref": "#/definitions/AuAddressModel",
          "description": ""
        },
        "postalAddress": {
          "$ref": "#/definitions/AuAddressModel",
          "description": ""
        },
        "canEdit": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "hasProfileImage": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canEditProfileImage": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "anniversaryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "startDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "titleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "otherName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "middleName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "previousSurname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateOfBirth": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "gender": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "homePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workPhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mobilePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isPostalAddressSameAsResidential": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        }
      },
      "xml": {
        "name": "AuEssEmployeeDetailsViewModel"
      },
      "type": "object",
      "title": "AuEssEmployeeDetailsViewModel"
    },
    "EmployeePartialEditModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "anniversaryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "startDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "businessId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "taxFileNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxFileNumberMasked": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bankAccounts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/BankAccountEditModel"
          },
          "xml": {
            "name": "BankAccountEditModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<BankAccountEditModel>"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payrollId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeStarterType": {
          "description": "",
          "type": "string",
          "enum": [
            "NewStarter",
            "ReportedHmrc"
          ],
          "title": "EmployeeStarterTypeEnum"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "tagsString": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "timesheetSetting": {
          "description": "",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "EnabledForExceptions"
          ],
          "title": "EmployeeTimesheetSetting"
        },
        "terminationReason": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "portableLongServiceLeaveId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "includeInPortableLongServiceLeaveReport": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "titleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "otherName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "middleName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "previousSurname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "legalName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateOfBirth": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "gender": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialStreetAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialAddressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialSuburbId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "residentialSuburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialState": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialPostcode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialCountry": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialCountryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isOverseasResidentialAddress": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "residentialAddressType": {
          "description": "",
          "type": "string",
          "enum": [
            "LocalAddress",
            "ForeignAddress",
            "LocalCareOfAddress"
          ],
          "title": "Nullable<AddressTypeEnum>"
        },
        "residentialBlockNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialLevelNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialUnitNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialStreetName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialAddressLine3": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalStreetAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalAddressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalSuburbId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "postalSuburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalState": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalPostcode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalCountry": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalCountryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isOverseasPostalAddress": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "postalAddressType": {
          "description": "",
          "type": "string",
          "enum": [
            "LocalAddress",
            "ForeignAddress",
            "LocalCareOfAddress"
          ],
          "title": "Nullable<AddressTypeEnum>"
        },
        "postalBlockNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalLevelNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalUnitNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalStreetName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalAddressLine3": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isPostalAddressSameAsResidential": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "homePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workPhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mobilePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialAddress_MdmId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialAddress_MdmVersion": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "title": "Nullable<Int64>"
        },
        "residentialAddress_MdmSchemaVersion": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalAddress_MdmId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalAddress_MdmVersion": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "title": "Nullable<Int64>"
        },
        "postalAddress_MdmSchemaVersion": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "triggeredFromMdm": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "sendToMdm": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "ignoreFields": {
          "description": "",
          "additionalProperties": {
            "type": "string",
            "title": "String"
          },
          "type": "object",
          "title": "IDictionary<String,String>"
        },
        "mdmSyncUser": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "EmployeePartialEditModel"
      },
      "type": "object",
      "title": "EmployeePartialEditModel"
    },
    "BankAccountEditModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "bsb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "allocatedPercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "fixedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "allocateBalance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isEmployeeEditable": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canBeDeleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "accountType": {
          "description": "",
          "type": "string",
          "enum": [
            "Electronic",
            "ManualDeposit",
            "CashOrCheque",
            "Bpay"
          ],
          "title": "BankAccountTypeEnum"
        },
        "rollNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bankSwift": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "branchCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "myBankCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "myOtherBankName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mdmId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mdmVersion": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "title": "Nullable<Int64>"
        },
        "mdmSchemaVersion": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "triggeredFromMdm": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "sendToMdm": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "ignoreFields": {
          "description": "",
          "additionalProperties": {
            "type": "string",
            "title": "String"
          },
          "type": "object",
          "title": "IDictionary<String,String>"
        }
      },
      "xml": {
        "name": "BankAccountEditModel"
      },
      "type": "object",
      "title": "BankAccountEditModel"
    },
    "EssEmployeeDetailsModel": {
      "properties": {
        "timesheetsReadOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "titleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "otherName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "middleName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "previousSurname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "legalName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "gender": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateOfBirth": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "anniversaryDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialStreetAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialAddressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialSuburbId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "residentialSuburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialState": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialPostcode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialCountry": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialCountryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isOverseasResidentialAddress": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "postalStreetAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalAddressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalSuburbId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "postalSuburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalState": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalPostcode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalCountry": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalCountryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isOverseasPostalAddress": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "homePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workPhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mobilePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "startDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "isTerminated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isAnonymised": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "isPostalAddressSameAsResidential": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "titles": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TitleViewModel"
          },
          "xml": {
            "name": "TitleViewModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TitleViewModel>"
        },
        "editMode": {
          "description": "",
          "type": "string",
          "enum": [
            "EmployeePortal",
            "EmployeePortalReadOnly",
            "BusinessPortal"
          ],
          "title": "EmployeeDetailsEditMode"
        },
        "canEdit": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "tagsString": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "allTags": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        },
        "timesheetSetting": {
          "description": "",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "EnabledForExceptions"
          ],
          "title": "EmployeeTimesheetSetting"
        },
        "canDelete": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "hasProfileImage": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canEditProfileImage": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "bouncedEmail": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "irdDetailsCurrent": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "irdSettingsEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "hasConnectedDevices": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "addressTypes": {
          "description": "",
          "items": {
            "$ref": "#/definitions/SelectListItem"
          },
          "xml": {
            "name": "SelectListItem",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<SelectListItem>"
        },
        "residentialAddressType": {
          "description": "",
          "type": "string",
          "enum": [
            "LocalAddress",
            "ForeignAddress",
            "LocalCareOfAddress"
          ],
          "title": "Nullable<AddressTypeEnum>"
        },
        "postalAddressType": {
          "description": "",
          "type": "string",
          "enum": [
            "LocalAddress",
            "ForeignAddress",
            "LocalCareOfAddress"
          ],
          "title": "Nullable<AddressTypeEnum>"
        },
        "residentialBlockNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalBlockNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialLevelNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalLevelNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialUnitNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalUnitNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialStreetName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalStreetName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "residentialAddressLine3": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postalAddressLine3": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "terminationReason": {
          "description": "",
          "type": "string",
          "enum": [
            "VoluntaryCessation",
            "IllHealth",
            "Deceased",
            "Redundancy",
            "Dismissal",
            "ContractCessation",
            "Transfer",
            "Other"
          ],
          "title": "TerminationReasonEnum"
        },
        "terminationDescription": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "terminationReasons": {
          "description": "",
          "items": {
            "$ref": "#/definitions/NumericSelectListItem"
          },
          "xml": {
            "name": "NumericSelectListItem",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<NumericSelectListItem>"
        },
        "hasSoleUser": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fields": {
          "$ref": "#/definitions/EmployeeDetailsFields",
          "description": ""
        },
        "pendingEmailUpdate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "newEmail": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EssEmployeeDetailsModel"
      },
      "type": "object",
      "title": "EssEmployeeDetailsModel"
    },
    "SelectListItem": {
      "properties": {
        "text": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "value": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "group": {
          "$ref": "#/definitions/SelectListGroup",
          "description": ""
        },
        "disabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "selected": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "SelectListItem"
      },
      "type": "object",
      "title": "SelectListItem"
    },
    "NumericSelectListItem": {
      "properties": {
        "value": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "title": "Int64"
        },
        "text": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "NumericSelectListItem"
      },
      "type": "object",
      "title": "NumericSelectListItem"
    },
    "EmployeeDetailsFields": {
      "properties": {
        "showStartDate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showTitle": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showPreferredName": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showPreviousSurname": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showGender": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showDateOfBirth": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showAnniversaryDate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showPostalAddress": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isNameMandatory": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isAddressMandatory": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "EmployeeDetailsFields"
      },
      "type": "object",
      "title": "EmployeeDetailsFields"
    },
    "SelectListGroup": {
      "properties": {
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "SelectListGroup"
      },
      "type": "object",
      "title": "SelectListGroup"
    },
    "AuDashboardModel": {
      "properties": {
        "features": {
          "$ref": "#/definitions/AuFeaturesModel",
          "description": ""
        },
        "nextShift": {
          "$ref": "#/definitions/AuEssRosterShiftModel",
          "description": ""
        },
        "currentShift": {
          "$ref": "#/definitions/EssCurrentShiftModel",
          "description": ""
        },
        "latestPayslip": {
          "$ref": "#/definitions/EssPayslipModel",
          "description": ""
        },
        "leaveBalances": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LeaveBalanceModel"
          },
          "xml": {
            "name": "LeaveBalanceModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<LeaveBalanceModel>"
        },
        "titles": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TitleViewModel"
          },
          "xml": {
            "name": "TitleViewModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<TitleViewModel>"
        },
        "workTypes": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EssWorkTypeModel"
          },
          "xml": {
            "name": "EssWorkTypeModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<EssWorkTypeModel>"
        },
        "shiftConditions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EssWorkTypeModel"
          },
          "xml": {
            "name": "EssWorkTypeModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<EssWorkTypeModel>"
        },
        "locations": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LocationModel"
          },
          "xml": {
            "name": "LocationModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<LocationModel>"
        },
        "classifications": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ClassificationSelectModel"
          },
          "xml": {
            "name": "ClassificationSelectModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ClassificationSelectModel>"
        },
        "leaveCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EssLeaveCategoryModel"
          },
          "xml": {
            "name": "EssLeaveCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<EssLeaveCategoryModel>"
        },
        "currentWeekSatisfactionSurvey": {
          "$ref": "#/definitions/EssSatisfactionSurvey",
          "description": ""
        },
        "timesheets": {
          "$ref": "#/definitions/EssCurrentTimesheetsModel",
          "description": ""
        },
        "timesheetEntryPeriodEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "expenseCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ExpenseCategoryResponseModel"
          },
          "xml": {
            "name": "ExpenseCategoryResponseModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ExpenseCategoryResponseModel>"
        },
        "taxCodes": {
          "description": "",
          "items": {
            "$ref": "#/definitions/JournalServiceTaxCode"
          },
          "xml": {
            "name": "JournalServiceTaxCode",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<JournalServiceTaxCode>"
        },
        "expenses": {
          "$ref": "#/definitions/EssCurrentExpensesModel",
          "description": ""
        },
        "pendingShiftCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "proposedSwapCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "pendingLeaveCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "documentsRequiringAcknowledgementCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "region": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "biddableShiftCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "isTerminated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "googleMapsApiKey": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "startDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "standardHours": {
          "$ref": "#/definitions/StandardHoursModel",
          "description": ""
        },
        "notAcceptedShiftsCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "AuDashboardModel"
      },
      "type": "object",
      "title": "AuDashboardModel"
    },
    "EssCurrentShiftModel": {
      "properties": {
        "shiftId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "clockOnTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "breakStartTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "NotClockedOn",
            "ClockedOn",
            "OnBreak",
            "ClockedOff"
          ],
          "title": "TimeAttendanceStatus"
        },
        "longShift": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "EssCurrentShiftModel"
      },
      "type": "object",
      "title": "EssCurrentShiftModel"
    },
    "EssPayslipModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "paySchedule": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "datePaid": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "payPeriodStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "payPeriodEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "netPay": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "payerName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payerAbn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payerBusinessNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EssPayslipModel"
      },
      "type": "object",
      "title": "EssPayslipModel"
    },
    "EssWorkTypeModel": {
      "properties": {
        "isUnitBasedWorkType": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accruesLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employmentTypes": {
          "description": "",
          "items": {
            "type": "string",
            "enum": [
              "Unknown",
              "FullTime",
              "PartTime",
              "LabourHire",
              "SuperannuationIncomeStream",
              "Casual",
              "NotApplicable",
              "IndependentContractor",
              "Management",
              "Contract",
              "Intern",
              "Other"
            ],
            "title": "EmploymentTypeEnum"
          },
          "xml": {
            "name": "EmploymentTypeEnum",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<EmploymentTypeEnum>"
        },
        "mappingType": {
          "description": "",
          "type": "string",
          "enum": [
            "PayCategory",
            "LeaveCategory",
            "PrimaryPayCategory",
            "ShiftCondition"
          ],
          "title": "Nullable<WorkTypeMappingType>"
        },
        "shortCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "awardPackageId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "awardPackageName": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EssWorkTypeModel"
      },
      "type": "object",
      "title": "EssWorkTypeModel"
    },
    "ClassificationSelectModel": {
      "properties": {
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "ClassificationSelectModel"
      },
      "type": "object",
      "title": "ClassificationSelectModel"
    },
    "EssLeaveCategoryModel": {
      "properties": {
        "unitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Hours",
            "Days",
            "Weeks"
          ],
          "title": "LeaveUnitTypeEnum"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EssLeaveCategoryModel"
      },
      "type": "object",
      "title": "EssLeaveCategoryModel"
    },
    "EssSatisfactionSurvey": {
      "properties": {
        "value": {
          "description": "",
          "type": "string",
          "enum": [
            "NotSet",
            "Happy",
            "Neutral",
            "Sad"
          ],
          "title": "EmployeeSatisfactionValue"
        },
        "weekStartDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "EssSatisfactionSurvey"
      },
      "type": "object",
      "title": "EssSatisfactionSurvey"
    },
    "EssCurrentTimesheetsModel": {
      "properties": {
        "periodStarting": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "periodEnding": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "submittedCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "approvedCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "rejectedCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "processedCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "durationInMinutes": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "EssCurrentTimesheetsModel"
      },
      "type": "object",
      "title": "EssCurrentTimesheetsModel"
    },
    "EssCurrentExpensesModel": {
      "properties": {
        "periodStarting": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "periodEnding": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "submittedCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "approvedCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "rejectedCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "processedCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "EssCurrentExpensesModel"
      },
      "type": "object",
      "title": "EssCurrentExpensesModel"
    },
    "EmployeeEmergencyContactsEditModel": {
      "properties": {
        "primaryEmergencyContact": {
          "$ref": "#/definitions/EmergencyContactEditModel",
          "description": ""
        },
        "secondaryEmergencyContact": {
          "$ref": "#/definitions/EmergencyContactEditModel",
          "description": ""
        },
        "canEdit": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "EmployeeEmergencyContactsEditModel"
      },
      "type": "object",
      "title": "EmployeeEmergencyContactsEditModel"
    },
    "EmergencyContactEditModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "relationship": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "address": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "alternateContactNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmergencyContactEditModel"
      },
      "type": "object",
      "title": "EmergencyContactEditModel"
    },
    "EmployeePublicHolidayFilter": {
      "required": [
        "fromDate",
        "toDate"
      ],
      "properties": {
        "fromDate": {
          "description": "Required",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "Required",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "EmployeePublicHolidayFilter"
      },
      "type": "object",
      "title": "EmployeePublicHolidayFilter"
    },
    "EmployeeUnavailabilityFilter": {
      "properties": {
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "EmployeeUnavailabilityFilter"
      },
      "type": "object",
      "title": "EmployeeUnavailabilityFilter"
    },
    "EssUnavailabilityModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "reason": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "recurring": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "recurringDay": {
          "description": "",
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "title": "Nullable<DayOfWeek>"
        },
        "recurringDays": {
          "description": "",
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "title": "Nullable<DayOfWeekFlagsEnum>"
        },
        "recurringDaysCsv": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "isAllDay": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "viewOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "EssUnavailabilityModel"
      },
      "type": "object",
      "title": "EssUnavailabilityModel"
    },
    "UnavailabilityEditModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "reason": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "recurring": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "recurringDay": {
          "description": "",
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "title": "Nullable<DayOfWeek>"
        },
        "recurringDays": {
          "description": "",
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "title": "Nullable<DayOfWeekFlagsEnum>"
        },
        "recurringDaysCsv": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "isAllDay": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "viewOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "UnavailabilityEditModel"
      },
      "type": "object",
      "title": "UnavailabilityEditModel"
    },
    "ByteArrayContent": {
      "properties": {
        "headers": {
          "description": "",
          "items": {
            "$ref": "#/definitions/KeyValuePairOfStringAndIEnumerableOfString"
          },
          "readOnly": true,
          "xml": {
            "name": "KeyValuePair`2",
            "wrapped": true
          },
          "type": "array",
          "title": "HttpContentHeaders"
        }
      },
      "xml": {
        "name": "ByteArrayContent"
      },
      "type": "object",
      "title": "ByteArrayContent"
    },
    "KeyValuePairOfStringAndIEnumerableOfString": {
      "properties": {
        "key": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "value": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "readOnly": true,
          "type": "array",
          "title": "IEnumerable<String>"
        }
      },
      "xml": {
        "name": "KeyValuePair`2"
      },
      "type": "object",
      "title": "KeyValuePair<String,IEnumerable`1>"
    },
    "EssDocumentModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "friendlyName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "requiresEmployeeAcknowledgement": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "dateAcknowledged": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "EssDocumentModel"
      },
      "type": "object",
      "title": "EssDocumentModel"
    },
    "EmployeeLeaveRequestFilter": {
      "properties": {
        "showOtherEmployees": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "approvedOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "EmployeeLeaveRequestFilter"
      },
      "type": "object",
      "title": "EmployeeLeaveRequestFilter"
    },
    "LeaveApplicationWithAttachmentModel": {
      "required": [
        "fromDate",
        "toDate",
        "leaveCategoryId"
      ],
      "properties": {
        "attachment": {
          "description": "",
          "type": "string",
          "format": "byte",
          "title": "Byte[]"
        },
        "attachmentId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "filename": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromDate": {
          "description": "Required",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "Required",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "leaveCategoryId": {
          "description": "Required",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "notes": {
          "description": "",
          "type": "string",
          "maxLength": 255,
          "title": "String"
        }
      },
      "xml": {
        "name": "LeaveApplicationWithAttachmentModel"
      },
      "type": "object",
      "title": "LeaveApplicationWithAttachmentModel"
    },
    "LeaveHoursEstimateFilter": {
      "required": [
        "fromDate",
        "toDate"
      ],
      "properties": {
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromDate": {
          "description": "Required",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "Required",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "LeaveHoursEstimateFilter"
      },
      "type": "object",
      "title": "LeaveHoursEstimateFilter"
    },
    "EssLeaveEstimate": {
      "properties": {
        "leaveBalance": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "approvedLeave": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "availableBalance": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "leaveRequired": {
          "$ref": "#/definitions/UnitAndHourLeaveEstimateModel",
          "description": ""
        }
      },
      "xml": {
        "name": "EssLeaveEstimate"
      },
      "type": "object",
      "title": "EssLeaveEstimate"
    },
    "UnitAndHourLeaveEstimateModel": {
      "properties": {
        "hours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "details": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        }
      },
      "xml": {
        "name": "UnitAndHourLeaveEstimateModel"
      },
      "type": "object",
      "title": "UnitAndHourLeaveEstimateModel"
    },
    "DeviceTokenModel": {
      "properties": {
        "token": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "platform": {
          "description": "",
          "type": "string",
          "enum": [
            "iOS",
            "Android"
          ],
          "title": "MobilePlatform"
        }
      },
      "xml": {
        "name": "DeviceTokenModel"
      },
      "type": "object",
      "title": "DeviceTokenModel"
    },
    "EssPaymentSummaryModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "period": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isEtp": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "etpCode": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EssPaymentSummaryModel"
      },
      "type": "object",
      "title": "EssPaymentSummaryModel"
    },
    "InvoiceQueryOptionsModel": {
      "properties": {
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "InvoiceQueryOptionsModel"
      },
      "type": "object",
      "title": "InvoiceQueryOptionsModel"
    },
    "InvoiceModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "invoiceNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "date": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "totalExcludingGst": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "gst": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "totalIncludingGst": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "cultureName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "currency": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "lineItems": {
          "description": "",
          "items": {
            "$ref": "#/definitions/InvoiceLineItemModel"
          },
          "xml": {
            "name": "InvoiceLineItemModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<InvoiceLineItemModel>"
        }
      },
      "xml": {
        "name": "InvoiceModel"
      },
      "type": "object",
      "title": "InvoiceModel"
    },
    "InvoiceLineItemModel": {
      "properties": {
        "abn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "businessNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "businessId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "billingPlan": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "unitPriceIncludingGst": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "quantity": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalIncludingGst": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "details": {
          "description": "",
          "items": {
            "$ref": "#/definitions/InvoiceLineItemDetailModel"
          },
          "xml": {
            "name": "InvoiceLineItemDetailModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<InvoiceLineItemDetailModel>"
        },
        "whiteLabelName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "brandName": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "InvoiceLineItemModel"
      },
      "type": "object",
      "title": "InvoiceLineItemModel"
    },
    "InvoiceLineItemDetailModel": {
      "properties": {
        "groupName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "InvoiceLineItemDetailModel"
      },
      "type": "object",
      "title": "InvoiceLineItemDetailModel"
    },
    "ODataQueryOptionsOfLeaveAllowanceTemplate": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<LeaveAllowanceTemplate>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<LeaveAllowanceTemplate>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<LeaveAllowanceTemplate>"
    },
    "AuLeaveAllowancesRequest": {
      "properties": {
        "employeeIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "leaveCategoryIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "leaveAllowances": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/AuLeaveAllowanceModel"
            },
            "xml": {
              "name": "AuLeaveAllowanceModel",
              "wrapped": true
            },
            "type": "array",
            "title": "IList<AuLeaveAllowanceModel>"
          },
          "type": "object",
          "title": "Dictionary<String,IList`1>"
        }
      },
      "xml": {
        "name": "AuLeaveAllowancesRequest"
      },
      "type": "object",
      "title": "AuLeaveAllowancesRequest"
    },
    "ODataQueryOptionsOfLeaveCategory": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<LeaveCategory>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<LeaveCategory>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<LeaveCategory>"
    },
    "AuLeaveCategoryModel": {
      "properties": {
        "contingentPeriod": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "entitlementPeriod": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "leaveLoading": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Days",
            "Weeks",
            "HoursPerHourWorked",
            "HoursPerPayRun",
            "StandardDays",
            "StandardWeeks",
            "DayPerCalendarDay",
            "DayPerMonth"
          ],
          "title": "LeaveAllowanceUnitEnum"
        },
        "leaveCategoryType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "LongServiceLeave",
            "PersonalCarersLeave"
          ],
          "title": "AuLeaveCategoryTypeEnum"
        },
        "leaveAccrualRule": {
          "$ref": "#/definitions/AuLeaveAccrualRuleModel",
          "description": ""
        },
        "transferOnTerminationToPayCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "automaticallyAccrues": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isPrivate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "excludeFromTerminationPayout": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isBalanceUntracked": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "deductFromPrimaryPayCategory": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "deductFromPayCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "transferToPayCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "hideAccrualsOnPayslip": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "useDeductFromPayCategoryRate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isNamePrivate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "leaveUnitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Hours",
            "Days",
            "Weeks"
          ],
          "title": "LeaveUnitTypeEnum"
        },
        "payoutAsETP": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "accruesFirstPayRunPerPeriodOnly": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "preventNegativeBalanceUnpaidLeaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveEntitlement": {
          "$ref": "#/definitions/LeaveEntitlementModel",
          "description": ""
        }
      },
      "xml": {
        "name": "AuLeaveCategoryModel"
      },
      "type": "object",
      "title": "AuLeaveCategoryModel"
    },
    "LeaveEntitlementModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "carryOverType": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Unlimited",
            "UpTo"
          ],
          "title": "LeaveEntitlementCarryOverType"
        },
        "carryOverAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "isProRata": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "leaveBalanceType": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Full",
            "ProRata"
          ],
          "title": "LeaveEntitlementLeaveBalanceType"
        },
        "leaveEntitlementTiers": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LeaveEntitlementTierModel"
          },
          "xml": {
            "name": "LeaveEntitlementTierModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<LeaveEntitlementTierModel>"
        },
        "forfeitureType": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Unlimited",
            "UpTo"
          ],
          "title": "LeaveEntitlementForfeitureType"
        },
        "forfeitureAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "forfeitureMonthsStartAfter": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "standardAllowanceUnitTypeAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "standardAllowanceUnitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Monthly",
            "Yearly"
          ],
          "title": "LeaveEntitlementAccrualUnitType"
        }
      },
      "xml": {
        "name": "LeaveEntitlementModel"
      },
      "type": "object",
      "title": "LeaveEntitlementModel"
    },
    "LeaveEntitlementTierModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "accrualStartAfter": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "accrualStartAfterUnitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Month",
            "Year"
          ],
          "title": "LeaveEntitlementAccrualStartDateUnitType"
        },
        "accrualAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "accrualUnitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Monthly",
            "Yearly"
          ],
          "title": "LeaveEntitlementAccrualUnitType"
        },
        "isDeleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "LeaveEntitlementTierModel"
      },
      "type": "object",
      "title": "LeaveEntitlementTierModel"
    },
    "ODataQueryOptionsOfHourLeaveRequestQueryModel": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<HourLeaveRequestQueryModel>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<HourLeaveRequestQueryModel>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<HourLeaveRequestQueryModel>"
    },
    "HourLeaveRequestResponseModel": {
      "properties": {
        "totalHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "hoursApplied": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employee": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveCategory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "attachmentId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "HourLeaveRequestResponseModel"
      },
      "type": "object",
      "title": "HourLeaveRequestResponseModel"
    },
    "HourLeaveRequestModel": {
      "properties": {
        "hours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "automaticallyApprove": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "requireNotesForLeaveRequests": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "attachment": {
          "$ref": "#/definitions/AttachmentModel",
          "description": ""
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "HourLeaveRequestModel"
      },
      "type": "object",
      "title": "HourLeaveRequestModel"
    },
    "DeclineLeaveRequest": {
      "properties": {
        "reason": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "DeclineLeaveRequest"
      },
      "type": "object",
      "title": "DeclineLeaveRequest"
    },
    "HourLeaveEstimateModel": {
      "properties": {
        "hours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "details": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        }
      },
      "xml": {
        "name": "HourLeaveEstimateModel"
      },
      "type": "object",
      "title": "HourLeaveEstimateModel"
    },
    "LeaveRequestFilterModel": {
      "properties": {
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "Approved",
            "Pending",
            "Rejected",
            "Cancelled"
          ],
          "title": "Nullable<LeaveRequestStatus>"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "groupBy": {
          "description": "",
          "type": "string",
          "enum": [
            "Employee",
            "LeaveType"
          ],
          "title": "LeaveRequestGroupBy"
        },
        "restrictOverlappingLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "LeaveRequestFilterModel"
      },
      "type": "object",
      "title": "LeaveRequestFilterModel"
    },
    "AuSingleLocationModel": {
      "properties": {
        "nestedLocations": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuLocationModel"
          },
          "xml": {
            "name": "AuLocationModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AuLocationModel>"
        },
        "country": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "parentId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalAccountingLocationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fullyQualifiedName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isGlobal": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isRollupReportingLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "generalLedgerMappingCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "defaultShiftConditionIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuSingleLocationModel"
      },
      "type": "object",
      "title": "AuSingleLocationModel"
    },
    "AuLocationModel": {
      "properties": {
        "country": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "parentId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalAccountingLocationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fullyQualifiedName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isGlobal": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isRollupReportingLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "generalLedgerMappingCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "defaultShiftConditionIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuLocationModel"
      },
      "type": "object",
      "title": "AuLocationModel"
    },
    "ODataQueryOptionsOfLocation": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<Location>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<Location>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<Location>"
    },
    "NameIdPair": {
      "properties": {
        "id": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "NameIdPair"
      },
      "type": "object",
      "title": "NameIdPair"
    },
    "ManagerRosterEmployeeModel": {
      "properties": {
        "canManage": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ManagerRosterEmployeeModel"
      },
      "type": "object",
      "title": "ManagerRosterEmployeeModel"
    },
    "AuManagerRosterShiftModel": {
      "properties": {
        "classificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "classificationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeePhoneNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "cost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "costFormatted": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "warnings": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        },
        "isLeaveBasedRosterShift": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "currentShift": {
          "$ref": "#/definitions/ManagerCurrentRosterShift",
          "description": ""
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "token": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "qualifications": {
          "description": "",
          "items": {
            "$ref": "#/definitions/QualificationModel"
          },
          "xml": {
            "name": "QualificationModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<QualificationModel>"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/RosterShiftBreakApiModel"
          },
          "xml": {
            "name": "RosterShiftBreakApiModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<RosterShiftBreakApiModel>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "role": {
          "$ref": "#/definitions/RosterShiftRole",
          "description": ""
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "published": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "accepted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "pendingSwap": {
          "$ref": "#/definitions/RosterShiftSwapModel",
          "description": ""
        },
        "datePublished": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "biddable": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "shiftSwapCutoffTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "shiftAssignmentStatus": {
          "description": "",
          "type": "string",
          "enum": [
            "Pending",
            "Assigned",
            "Bidding",
            "PendingShiftSwap",
            "PendingShiftSwapAwaitingApproval",
            "ProposedShiftSwap",
            "ProposedShiftSwapAwaitingApproval"
          ],
          "title": "Nullable<ShiftAssignmentStatusEnum>"
        }
      },
      "xml": {
        "name": "AuManagerRosterShiftModel"
      },
      "type": "object",
      "title": "AuManagerRosterShiftModel"
    },
    "ManagerCurrentRosterShift": {
      "properties": {
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "NotClockedOn",
            "ClockedOn",
            "OnBreak",
            "ClockedOff"
          ],
          "title": "TimeAttendanceStatus"
        },
        "isLate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isNotClockedOff": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "ManagerCurrentRosterShift"
      },
      "type": "object",
      "title": "ManagerCurrentRosterShift"
    },
    "RosterShiftEditModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "qualifications": {
          "description": "",
          "items": {
            "$ref": "#/definitions/QualificationModel"
          },
          "xml": {
            "name": "QualificationModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<QualificationModel>"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/RosterShiftBreakApiModel"
          },
          "xml": {
            "name": "RosterShiftBreakApiModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<RosterShiftBreakApiModel>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "role": {
          "$ref": "#/definitions/RosterShiftRole",
          "description": ""
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "RosterShiftEditModel"
      },
      "type": "object",
      "title": "RosterShiftEditModel"
    },
    "ManagerRosterShiftFilterModel": {
      "properties": {
        "date": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "roleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "includeCosts": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "includeSubLocations": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        }
      },
      "xml": {
        "name": "ManagerRosterShiftFilterModel"
      },
      "type": "object",
      "title": "ManagerRosterShiftFilterModel"
    },
    "AuManagerRosterDataModel": {
      "properties": {
        "rosteredShifts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuManagerRosterShiftModel"
          },
          "xml": {
            "name": "AuManagerRosterShiftModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuManagerRosterShiftModel>"
        },
        "unassignedShifts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuManagerRosterShiftModel"
          },
          "xml": {
            "name": "AuManagerRosterShiftModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuManagerRosterShiftModel>"
        },
        "biddableShifts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ManagerBiddableRosterShiftModel"
          },
          "xml": {
            "name": "ManagerBiddableRosterShiftModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ManagerBiddableRosterShiftModel>"
        },
        "unavailability": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ManagerUnavailabilityModel"
          },
          "xml": {
            "name": "ManagerUnavailabilityModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ManagerUnavailabilityModel>"
        },
        "leaveRequests": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ILeaveBasedRosterShift"
          },
          "xml": {
            "name": "ILeaveBasedRosterShift",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ILeaveBasedRosterShift>"
        }
      },
      "xml": {
        "name": "AuManagerRosterDataModel"
      },
      "type": "object",
      "title": "AuManagerRosterDataModel"
    },
    "ManagerBiddableRosterShiftModel": {
      "properties": {
        "totalBiddingEmployees": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "biddingEmployees": {
          "description": "",
          "items": {
            "$ref": "#/definitions/BiddingEmployee"
          },
          "xml": {
            "name": "BiddingEmployee",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<BiddingEmployee>"
        },
        "employeePhoneNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "cost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "costFormatted": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "warnings": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        },
        "isLeaveBasedRosterShift": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "currentShift": {
          "$ref": "#/definitions/ManagerCurrentRosterShift",
          "description": ""
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "token": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "qualifications": {
          "description": "",
          "items": {
            "$ref": "#/definitions/QualificationModel"
          },
          "xml": {
            "name": "QualificationModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<QualificationModel>"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/RosterShiftBreakApiModel"
          },
          "xml": {
            "name": "RosterShiftBreakApiModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<RosterShiftBreakApiModel>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "role": {
          "$ref": "#/definitions/RosterShiftRole",
          "description": ""
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "published": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "accepted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "pendingSwap": {
          "$ref": "#/definitions/RosterShiftSwapModel",
          "description": ""
        },
        "datePublished": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "biddable": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "shiftSwapCutoffTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "shiftAssignmentStatus": {
          "description": "",
          "type": "string",
          "enum": [
            "Pending",
            "Assigned",
            "Bidding",
            "PendingShiftSwap",
            "PendingShiftSwapAwaitingApproval",
            "ProposedShiftSwap",
            "ProposedShiftSwapAwaitingApproval"
          ],
          "title": "Nullable<ShiftAssignmentStatusEnum>"
        }
      },
      "xml": {
        "name": "ManagerBiddableRosterShiftModel"
      },
      "type": "object",
      "title": "ManagerBiddableRosterShiftModel"
    },
    "ManagerUnavailabilityModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "terminationDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "reason": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "recurring": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "recurringDay": {
          "description": "",
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "title": "Nullable<DayOfWeek>"
        },
        "recurringDays": {
          "description": "",
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "title": "Nullable<DayOfWeekFlagsEnum>"
        },
        "recurringDaysCsv": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "isAllDay": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "viewOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "ManagerUnavailabilityModel"
      },
      "type": "object",
      "title": "ManagerUnavailabilityModel"
    },
    "ILeaveBasedRosterShift": {
      "properties": {
        "isLeaveBasedRosterShift": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "ILeaveBasedRosterShift"
      },
      "type": "object",
      "title": "ILeaveBasedRosterShift"
    },
    "BiddingEmployee": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeePhoneNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "BiddingEmployee"
      },
      "type": "object",
      "title": "BiddingEmployee"
    },
    "RosterShiftFilterModel": {
      "properties": {
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "shiftStatus": {
          "description": "",
          "type": "string",
          "enum": [
            "All",
            "Published",
            "Unpublished",
            "Accepted"
          ],
          "title": "RosterShiftStatus"
        },
        "shiftStatuses": {
          "description": "",
          "items": {
            "type": "string",
            "enum": [
              "All",
              "Published",
              "Unpublished",
              "Accepted"
            ],
            "title": "RosterShiftStatus"
          },
          "xml": {
            "name": "RosterShiftStatus",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<RosterShiftStatus>"
        },
        "selectedLocations": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        },
        "selectedEmployees": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        },
        "selectedRoles": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeGroupId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "unassignedShiftsOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "selectAllRoles": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "excludeShiftsOverlappingFromDate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "pageSize": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "currentPage": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "includeWarnings": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "RosterShiftFilterModel"
      },
      "type": "object",
      "title": "RosterShiftFilterModel"
    },
    "AuRosterShiftGenerateTimesheetModel": {
      "properties": {
        "classificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "classificationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "description": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "isDifferent": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fullyQualifiedLocationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "warnings": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "List<String>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "token": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "qualifications": {
          "description": "",
          "items": {
            "$ref": "#/definitions/QualificationModel"
          },
          "xml": {
            "name": "QualificationModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<QualificationModel>"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/RosterShiftBreakApiModel"
          },
          "xml": {
            "name": "RosterShiftBreakApiModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<RosterShiftBreakApiModel>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "role": {
          "$ref": "#/definitions/RosterShiftRole",
          "description": ""
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "published": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "accepted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "pendingSwap": {
          "$ref": "#/definitions/RosterShiftSwapModel",
          "description": ""
        },
        "datePublished": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "biddable": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "shiftSwapCutoffTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "shiftAssignmentStatus": {
          "description": "",
          "type": "string",
          "enum": [
            "Pending",
            "Assigned",
            "Bidding",
            "PendingShiftSwap",
            "PendingShiftSwapAwaitingApproval",
            "ProposedShiftSwap",
            "ProposedShiftSwapAwaitingApproval"
          ],
          "title": "Nullable<ShiftAssignmentStatusEnum>"
        }
      },
      "xml": {
        "name": "AuRosterShiftGenerateTimesheetModel"
      },
      "type": "object",
      "title": "AuRosterShiftGenerateTimesheetModel"
    },
    "StubRosterShiftViewModel": {
      "properties": {
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "StubRosterShiftViewModel"
      },
      "type": "object",
      "title": "StubRosterShiftViewModel"
    },
    "ManagerLeaveRequestModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "inProgress": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "terminationDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "canApprove": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "accruedBalance": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "exceedsBalance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isLeaveBasedRosterShift": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "totalHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isApproved": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isDeclined": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isCancelled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isPending": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "requestedDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "leaveCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hoursPerDay": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalUnits": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "previouslyAppliedUnits": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "canPartiallyEdit": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "totalDays": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "amount": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "statusUpdateNotes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "canCancel": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canModify": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "requireNotesForLeaveRequests": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "attachment": {
          "$ref": "#/definitions/AttachmentModel",
          "description": ""
        },
        "unitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Hours",
            "Days",
            "Weeks"
          ],
          "title": "LeaveUnitTypeEnum"
        },
        "banner": {
          "$ref": "#/definitions/PartiallyAppliedLeaveRequestBannerModel",
          "description": ""
        },
        "manuallyApplied": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "appliedLeaveUnitTypeDescription": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ManagerLeaveRequestModel"
      },
      "type": "object",
      "title": "ManagerLeaveRequestModel"
    },
    "ManagerLeaveApplicationModel": {
      "required": [
        "fromDate",
        "toDate",
        "leaveCategoryId"
      ],
      "properties": {
        "attachment": {
          "description": "",
          "type": "string",
          "format": "byte",
          "title": "Byte[]"
        },
        "attachmentId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "filename": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromDate": {
          "description": "Required",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "Required",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "leaveCategoryId": {
          "description": "Required",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "notes": {
          "description": "",
          "type": "string",
          "maxLength": 255,
          "title": "String"
        }
      },
      "xml": {
        "name": "ManagerLeaveApplicationModel"
      },
      "type": "object",
      "title": "ManagerLeaveApplicationModel"
    },
    "DeclineReason": {
      "properties": {
        "reason": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "DeclineReason"
      },
      "type": "object",
      "title": "DeclineReason"
    },
    "ManagerLeaveEstimate": {
      "properties": {
        "leaveBalance": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "approvedLeave": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "availableBalance": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "leaveRequired": {
          "$ref": "#/definitions/UnitAndHourLeaveEstimateModel",
          "description": ""
        }
      },
      "xml": {
        "name": "ManagerLeaveEstimate"
      },
      "type": "object",
      "title": "ManagerLeaveEstimate"
    },
    "ManagerLeaveCategoryModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ManagerLeaveCategoryModel"
      },
      "type": "object",
      "title": "ManagerLeaveCategoryModel"
    },
    "AuIndividualTimesheetLineModel": {
      "properties": {
        "classificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "classification": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationIsDeleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "comments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetBreakModelv3"
          },
          "xml": {
            "name": "TimesheetBreakModelv3",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetBreakModelv3>"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "attachmentId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "shiftConditionIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "workType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fullyQualifiedLocationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "shiftConditions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetShiftConditionModelv3"
          },
          "xml": {
            "name": "TimesheetShiftConditionModelv3",
            "wrapped": true
          },
          "type": "array",
          "title": "List<TimesheetShiftConditionModelv3>"
        },
        "hiddenComments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "attachment": {
          "$ref": "#/definitions/Attachment",
          "description": ""
        },
        "dimensionValueIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        }
      },
      "xml": {
        "name": "AuIndividualTimesheetLineModel"
      },
      "type": "object",
      "title": "AuIndividualTimesheetLineModel"
    },
    "TimesheetRequestFilterModel": {
      "properties": {
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "Submitted",
            "Approved",
            "Rejected",
            "Processed",
            "AnyExceptRejected"
          ],
          "title": "Nullable<TimesheetLineFilterStatus>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeGroupId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "includeCosts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "currentPage": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "pageSize": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "orderBy": {
          "description": "",
          "type": "string",
          "enum": [
            "Location",
            "WorkType",
            "Employee",
            "Date",
            "DefaultLocation",
            "PaySchedule"
          ],
          "title": "Nullable<TimesheetGrouping>"
        }
      },
      "xml": {
        "name": "TimesheetRequestFilterModel"
      },
      "type": "object",
      "title": "TimesheetRequestFilterModel"
    },
    "PagedResultModelOfManagerTimesheetLineModel": {
      "properties": {
        "itemCountFuture": {
          "$ref": "#/definitions/IFutureValueOfInt32",
          "description": ""
        },
        "itemCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "items": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ManagerTimesheetLineModel"
          },
          "xml": {
            "name": "ManagerTimesheetLineModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IEnumerable<ManagerTimesheetLineModel>"
        },
        "currentPage": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "pageSize": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "pageCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "PagedResultModel`1"
      },
      "type": "object",
      "title": "PagedResultModel<ManagerTimesheetLineModel>"
    },
    "ManagerTimesheetLineModel": {
      "properties": {
        "defaultLocationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "defaultLocationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payScheduleName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeGroups": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ManagerEmployeeGroup"
          },
          "xml": {
            "name": "ManagerEmployeeGroup",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ManagerEmployeeGroup>"
        },
        "shiftConditions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ShiftCondition"
          },
          "xml": {
            "name": "ShiftCondition",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ShiftCondition>"
        },
        "costFormatted": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "canDelete": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canEdit": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canEditNotesOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewCosts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canApprove": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "terminationDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "employeeStartDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "dimensionValues": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ReportingDimensionValueBaseApiModel"
          },
          "xml": {
            "name": "ReportingDimensionValueBaseApiModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ReportingDimensionValueBaseApiModel>"
        },
        "classification": {
          "$ref": "#/definitions/ClassificationSelection",
          "description": ""
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isUnitBasedWorkType": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "start": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "end": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "submittedStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "submittedEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "Missing",
            "Submitted",
            "Approved",
            "Rejected",
            "Processed"
          ],
          "title": "TimesheetLineStatusType"
        },
        "paySlipUrl": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetBreakManagerModel"
          },
          "xml": {
            "name": "TimesheetBreakManagerModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetBreakManagerModel>"
        },
        "comments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveRequestId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "isLocked": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "cost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "discard": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "attachment": {
          "$ref": "#/definitions/AttachmentModel",
          "description": ""
        },
        "isOverlapping": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "overdrawsLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "reviewedBy": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "durationOverride": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "autoApprovedByRosterShiftId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workDurationInMinutes": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Double"
        },
        "breaksDurationInMinutes": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Double"
        },
        "totalDurationInMinutes": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Double"
        },
        "hiddenComments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "readOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "ignoreRounding": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "ManagerTimesheetLineModel"
      },
      "type": "object",
      "title": "ManagerTimesheetLineModel"
    },
    "ManagerEmployeeGroup": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ManagerEmployeeGroup"
      },
      "type": "object",
      "title": "ManagerEmployeeGroup"
    },
    "ShiftCondition": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ShiftCondition"
      },
      "type": "object",
      "title": "ShiftCondition"
    },
    "ClassificationSelection": {
      "properties": {
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "ClassificationSelection"
      },
      "type": "object",
      "title": "ClassificationSelection"
    },
    "TimesheetBreakManagerModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "start": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "end": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "submittedStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "submittedEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "formattedStart": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "formattedEnd": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "TimesheetBreakManagerModel"
      },
      "type": "object",
      "title": "TimesheetBreakManagerModel"
    },
    "AuAvailableBusinessModel": {
      "properties": {
        "managementSoftwareId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "sbrSoftwareProvider": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "sbrSoftwareId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "kiosks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuTimeAndAttendanceKioskModel"
          },
          "xml": {
            "name": "AuTimeAndAttendanceKioskModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuTimeAndAttendanceKioskModel>"
        },
        "abn": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "branding": {
          "$ref": "#/definitions/WhiteLabelBrandingModel",
          "description": ""
        },
        "timesheetEntryPeriodEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "isPayrollAdmin": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canApproveLeaveRequests": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewLeaveRequests": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canApproveTimesheets": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canApproveExpenses": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewExpenses": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewShiftCosts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timesheetsRequireWorkType": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timesheetsRequireLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeTimesheetsWithoutStartStopTimes": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canCreateTimesheets": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canCreateAndApproveTimesheets": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "noTimesheetPermissions": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewRosterShifts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canManageRosterShifts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "billingStatus": {
          "description": "",
          "type": "string",
          "enum": [
            "NotBillable",
            "Trial",
            "Billable"
          ],
          "title": "Nullable<BillingStatusEnum>"
        },
        "paidBreaksEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "locationPermissions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LocationPermissionModel"
          },
          "xml": {
            "name": "LocationPermissionModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<LocationPermissionModel>"
        },
        "employeeGroupPermissions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EmployeeGroupPermissionModel"
          },
          "xml": {
            "name": "EmployeeGroupPermissionModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<EmployeeGroupPermissionModel>"
        },
        "timesheetDimensionsEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "region": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "registrationNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "registrationNumberValidationBypassed": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "legalName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactEmailAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactPhoneNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactFaxNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "standardHoursPerDay": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "journalService": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "endOfWeek": {
          "description": "",
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "title": "DayOfWeek"
        },
        "initialFinancialYearStart": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "managersCanEditRosterBudgets": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "budgetWarningPercent": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "budgetEntryMethod": {
          "description": "",
          "type": "string",
          "enum": [
            "PercentageOfSales",
            "Direct"
          ],
          "title": "BudgetEntryMethodEnum"
        },
        "addressLine1": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "addressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "suburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "whiteLabelName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "promoCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "leaveAccrualStartDateType": {
          "description": "",
          "type": "string",
          "enum": [
            "EmployeeStartDate",
            "SpecifiedDate",
            "CalendarYear",
            "CategorySpecificDate"
          ],
          "title": "LeaveAccrualStartDateType"
        },
        "leaveYearStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "city": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "autoEnrolmentStagingDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "AuAvailableBusinessModel"
      },
      "type": "object",
      "title": "AuAvailableBusinessModel"
    },
    "AuTimeAndAttendanceKioskModel": {
      "properties": {
        "allowHigherClassificationSelection": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "timeZone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "branding": {
          "$ref": "#/definitions/WhiteLabelBrandingModel",
          "description": ""
        },
        "isLocationRequired": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isWorkTypeRequired": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "restrictLocationsForEmployees": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeShiftSelection": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "clockOnWindowMinutes": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "clockOffWindowMinutes": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "ianaTimeZone": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "isPhotoRequired": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "canAddEmployees": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "availableToAllRestrictedUsersWithKioskAccess": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuTimeAndAttendanceKioskModel"
      },
      "type": "object",
      "title": "AuTimeAndAttendanceKioskModel"
    },
    "LocationPermissionModel": {
      "properties": {
        "id": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "canApproveLeaveRequests": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewLeaveRequests": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canApproveTimesheets": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canCreateTimesheets": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canApproveExpenses": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewExpenses": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewShiftCosts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewRosters": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canManageRosters": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "LocationPermissionModel"
      },
      "type": "object",
      "title": "LocationPermissionModel"
    },
    "EmployeeGroupPermissionModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "canApproveLeaveRequests": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewLeaveRequests": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canApproveTimesheets": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canCreateTimesheets": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canApproveExpenses": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewExpenses": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewShiftCosts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canViewRosters": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canManageRosters": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "EmployeeGroupPermissionModel"
      },
      "type": "object",
      "title": "EmployeeGroupPermissionModel"
    },
    "AuTimesheetReferenceData": {
      "properties": {
        "classifications": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ClassificationSelectModel"
          },
          "xml": {
            "name": "ClassificationSelectModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ClassificationSelectModel>"
        },
        "workTypes": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuEssWorkTypeModel"
          },
          "xml": {
            "name": "AuEssWorkTypeModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AuEssWorkTypeModel>"
        },
        "shiftConditions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuEssWorkTypeModel"
          },
          "xml": {
            "name": "AuEssWorkTypeModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AuEssWorkTypeModel>"
        },
        "locations": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LocationModel"
          },
          "xml": {
            "name": "LocationModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<LocationModel>"
        },
        "dimensionValues": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ReportingDimensionValueSelectModel"
          },
          "xml": {
            "name": "ReportingDimensionValueSelectModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ReportingDimensionValueSelectModel>"
        }
      },
      "xml": {
        "name": "AuTimesheetReferenceData"
      },
      "type": "object",
      "title": "AuTimesheetReferenceData"
    },
    "AuEssWorkTypeModel": {
      "properties": {
        "isUnitBasedWorkType": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employmentTypes": {
          "description": "",
          "items": {
            "type": "string",
            "enum": [
              "Unknown",
              "FullTime",
              "PartTime",
              "LabourHire",
              "SuperannuationIncomeStream",
              "Casual"
            ],
            "title": "AuEmploymentTypeEnum"
          },
          "xml": {
            "name": "AuEmploymentTypeEnum",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuEmploymentTypeEnum>"
        },
        "awardPackageId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "awardPackageName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accruesLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "mappingType": {
          "description": "",
          "type": "string",
          "enum": [
            "PayCategory",
            "LeaveCategory",
            "PrimaryPayCategory",
            "ShiftCondition"
          ],
          "title": "Nullable<WorkTypeMappingType>"
        },
        "shortCode": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuEssWorkTypeModel"
      },
      "type": "object",
      "title": "AuEssWorkTypeModel"
    },
    "ManagerTimesheetSubmitModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveRequestId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "classificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "shiftConditionIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "start": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "end": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "submittedStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "submittedEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "comments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hiddenComments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetBreakSubmitModel"
          },
          "xml": {
            "name": "TimesheetBreakSubmitModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetBreakSubmitModel>"
        },
        "attachment": {
          "$ref": "#/definitions/Attachment",
          "description": ""
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "Nullable<ExternalService>"
        },
        "locationIsDeleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "dimensionValueIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        }
      },
      "xml": {
        "name": "ManagerTimesheetSubmitModel"
      },
      "type": "object",
      "title": "ManagerTimesheetSubmitModel"
    },
    "TimesheetBreakSubmitModel": {
      "properties": {
        "start": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "end": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "TimesheetBreakSubmitModel"
      },
      "type": "object",
      "title": "TimesheetBreakSubmitModel"
    },
    "ExpenseReferenceData": {
      "properties": {
        "expenseCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ExpenseCategoryResponseModel"
          },
          "xml": {
            "name": "ExpenseCategoryResponseModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ExpenseCategoryResponseModel>"
        },
        "taxCodes": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ExpenseTaxCode"
          },
          "xml": {
            "name": "ExpenseTaxCode",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ExpenseTaxCode>"
        },
        "locations": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LocationModel"
          },
          "xml": {
            "name": "LocationModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<LocationModel>"
        },
        "defaultLocationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "ExpenseReferenceData"
      },
      "type": "object",
      "title": "ExpenseReferenceData"
    },
    "ExpenseTaxCode": {
      "properties": {
        "taxCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxCodeDisplayName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "ExpenseTaxCode"
      },
      "type": "object",
      "title": "ExpenseTaxCode"
    },
    "ManagerExpenseRequestModel": {
      "properties": {
        "canCancel": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canModify": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canApprove": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "lineItems": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ExpenseRequestLineItemModel"
          },
          "xml": {
            "name": "ExpenseRequestLineItemModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ExpenseRequestLineItemModel>"
        },
        "attachments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AttachmentModel"
          },
          "xml": {
            "name": "AttachmentModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AttachmentModel>"
        },
        "statusUpdatedByUser": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "statusUpdateNotes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateStatusUpdated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "ManagerExpenseRequestModel"
      },
      "type": "object",
      "title": "ManagerExpenseRequestModel"
    },
    "ExpenseManagementFilterModel": {
      "properties": {
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "Pending",
            "Approved",
            "Cancelled",
            "Declined",
            "Processed"
          ],
          "title": "Nullable<EmployeeExpenseRequestStatus>"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "expenseCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "groupBy": {
          "description": "",
          "type": "string",
          "enum": [
            "Employee",
            "ExpenseCategory"
          ],
          "title": "Nullable<EmployeeExpenseRequestGroupBy>"
        },
        "currentPage": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "pageSize": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "ExpenseManagementFilterModel"
      },
      "type": "object",
      "title": "ExpenseManagementFilterModel"
    },
    "PagedResultModelOfManagerExpenseRequestModel": {
      "properties": {
        "itemCountFuture": {
          "$ref": "#/definitions/IFutureValueOfInt32",
          "description": ""
        },
        "itemCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "items": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ManagerExpenseRequestModel"
          },
          "xml": {
            "name": "ManagerExpenseRequestModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IEnumerable<ManagerExpenseRequestModel>"
        },
        "currentPage": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "pageSize": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "pageCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "PagedResultModel`1"
      },
      "type": "object",
      "title": "PagedResultModel<ManagerExpenseRequestModel>"
    },
    "ManagerExpenseEmployeeModel": {
      "properties": {
        "canCreate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canApprove": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ManagerExpenseEmployeeModel"
      },
      "type": "object",
      "title": "ManagerExpenseEmployeeModel"
    },
    "TimeAndAttendanceKioskModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "timeZone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "allowHigherClassificationSelection": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "branding": {
          "$ref": "#/definitions/WhiteLabelBrandingModel",
          "description": ""
        },
        "isLocationRequired": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isWorkTypeRequired": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "restrictLocationsForEmployees": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowEmployeeShiftSelection": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "clockOnWindowMinutes": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "clockOffWindowMinutes": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "ianaTimeZone": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "isPhotoRequired": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "canAddEmployees": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "availableToAllRestrictedUsersWithKioskAccess": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "paidBreaksEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timesheetDimensionsEnabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "TimeAndAttendanceKioskModel"
      },
      "type": "object",
      "title": "TimeAndAttendanceKioskModel"
    },
    "ODataQueryOptionsOfTimesheetLine": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<TimesheetLine>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<TimesheetLine>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<TimesheetLine>"
    },
    "TimesheetLineModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "workTypeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "comments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetBreakModel"
          },
          "xml": {
            "name": "TimesheetBreakModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetBreakModel>"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "classificationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "attachmentId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "shiftConditionIds": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        },
        "workType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fullyQualifiedLocationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "classification": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "shiftConditions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetShiftConditionModel"
          },
          "xml": {
            "name": "TimesheetShiftConditionModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<TimesheetShiftConditionModel>"
        },
        "hiddenComments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "submittedByUser": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dimensionValues": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ReportingDimensionValueBaseApiModel"
          },
          "xml": {
            "name": "ReportingDimensionValueBaseApiModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ReportingDimensionValueBaseApiModel>"
        }
      },
      "xml": {
        "name": "TimesheetLineModel"
      },
      "type": "object",
      "title": "TimesheetLineModel"
    },
    "TimesheetBreakModel": {
      "properties": {
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "TimesheetBreakModel"
      },
      "type": "object",
      "title": "TimesheetBreakModel"
    },
    "TimesheetShiftConditionModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "TimesheetShiftConditionModel"
      },
      "type": "object",
      "title": "TimesheetShiftConditionModel"
    },
    "TimesheetLineCommentsModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "comments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hiddenComments": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "TimesheetLineCommentsModel"
      },
      "type": "object",
      "title": "TimesheetLineCommentsModel"
    },
    "ManagerLeaveEmployeeModel": {
      "properties": {
        "canApprove": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ManagerLeaveEmployeeModel"
      },
      "type": "object",
      "title": "ManagerLeaveEmployeeModel"
    },
    "ManagerDashboardModel": {
      "properties": {
        "pendingLeaveRequests": {
          "$ref": "#/definitions/ManagerItemCountModel",
          "description": ""
        },
        "submittedTimesheets": {
          "$ref": "#/definitions/ManagerItemCountModel",
          "description": ""
        },
        "pendingExpenseRequests": {
          "$ref": "#/definitions/ManagerItemCountModel",
          "description": ""
        }
      },
      "xml": {
        "name": "ManagerDashboardModel"
      },
      "type": "object",
      "title": "ManagerDashboardModel"
    },
    "ManagerItemCountModel": {
      "properties": {
        "itemCount": {
          "description": "",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "itemCountByEmployeeId": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EmployeeItemCountModel"
          },
          "xml": {
            "name": "EmployeeItemCountModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<EmployeeItemCountModel>"
        }
      },
      "xml": {
        "name": "ManagerItemCountModel"
      },
      "type": "object",
      "title": "ManagerItemCountModel"
    },
    "EmployeeItemCountModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "itemCount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "EmployeeItemCountModel"
      },
      "type": "object",
      "title": "EmployeeItemCountModel"
    },
    "ManagerTimesheetEmployeeModel": {
      "properties": {
        "canCreate": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "canApprove": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ManagerTimesheetEmployeeModel"
      },
      "type": "object",
      "title": "ManagerTimesheetEmployeeModel"
    },
    "KioskCreateEmployeeModel": {
      "properties": {
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mobileNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "pin": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "KioskCreateEmployeeModel"
      },
      "type": "object",
      "title": "KioskCreateEmployeeModel"
    },
    "CheckKioskEmployeeIdModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "CheckKioskEmployeeIdModel"
      },
      "type": "object",
      "title": "CheckKioskEmployeeIdModel"
    },
    "CheckKioskPinModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "pin": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "CheckKioskPinModel"
      },
      "type": "object",
      "title": "CheckKioskPinModel"
    },
    "ChangeKioskPinModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "oldPin": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "newPin": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ChangeKioskPinModel"
      },
      "type": "object",
      "title": "ChangeKioskPinModel"
    },
    "PinResetModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "PinResetModel"
      },
      "type": "object",
      "title": "PinResetModel"
    },
    "ClockOnModel": {
      "properties": {
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "classificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "shiftConditionIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dimensionValueIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "latitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "longitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "kioskId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "ipAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "image": {
          "description": "",
          "type": "string",
          "format": "byte",
          "title": "Byte[]"
        },
        "isAdminInitiated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "recordedTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "utcOffset": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "noteVisibility": {
          "description": "",
          "type": "string",
          "enum": [
            "Hidden",
            "Visible"
          ],
          "title": "Nullable<TimeAttendanceShiftNoteVisibility>"
        }
      },
      "xml": {
        "name": "ClockOnModel"
      },
      "type": "object",
      "title": "ClockOnModel"
    },
    "ShiftNoteViewModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employee": {
          "$ref": "#/definitions/EmployeeViewModel",
          "description": ""
        },
        "date": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "type": {
          "description": "",
          "type": "string",
          "enum": [
            "Shift",
            "ClockOn",
            "ClockOff"
          ],
          "title": "TimeAttendanceShiftNoteType"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "noteId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "visibility": {
          "description": "",
          "type": "string",
          "enum": [
            "Hidden",
            "Visible"
          ],
          "title": "TimeAttendanceShiftNoteVisibility"
        },
        "read": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "createdByAdmin": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "ShiftNoteViewModel"
      },
      "type": "object",
      "title": "ShiftNoteViewModel"
    },
    "EmployeeViewModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "profileImageUrl": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "name": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeViewModel"
      },
      "type": "object",
      "title": "EmployeeViewModel"
    },
    "PayRunCreateMultipleRequest": {
      "properties": {
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "timesheetImportOption": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "ThisPayPeriod",
            "AllOutstanding",
            "CustomPeriod"
          ],
          "title": "Nullable<TimesheetImportOption>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "callbackUrl": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "createWithEmptyPays": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "adhoc": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        }
      },
      "xml": {
        "name": "PayRunCreateMultipleRequest"
      },
      "type": "object",
      "title": "PayRunCreateMultipleRequest"
    },
    "PayRunCreateMultipleRequestDates": {
      "properties": {
        "payPeriodEnding": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "datePaid": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "PayRunCreateMultipleRequestDates"
      },
      "type": "object",
      "title": "PayRunCreateMultipleRequestDates"
    },
    "FinalisePayRunOptions": {
      "properties": {
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "datePaid": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "exportJournals": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "publishPaySlips": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PublishPaySlipsPreference"
        },
        "publishPaySlipsDateTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "suppressNotifications": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "lodgePayRun": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "lodgePayRunInTestMode": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "submitToPensionSync": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "lodgeFinalPayRun": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "relodgeHmrcLateSubmissionReason": {
          "description": "",
          "type": "string",
          "enum": [
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H"
          ],
          "title": "Nullable<HmrcFpsLateSubmissionReason>"
        },
        "relodgeSelectedEmployeesOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "finaliseAsAdmin": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "publishPaySlipsPreference": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "Nullable<PayRunFinaliseActionPreference>"
        },
        "exportJournalsPreference": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "Nullable<PayRunFinaliseActionPreference>"
        },
        "exportJournalsDateTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "lodgePayRunPreference": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "Nullable<PayRunFinaliseActionPreference>"
        },
        "superPaymentPreference": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "lodgePayRunDateTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "runReportPacksPreference": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "Nullable<PayRunFinaliseActionPreference>"
        },
        "runReportPacksDateTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "reportPacksToRun": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "submitToPensionSyncPreference": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "Nullable<PayRunFinaliseActionPreference>"
        },
        "submitToPensionSyncDateTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "saveChangesToDefaultSettings": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromPayRunAutomation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "FinalisePayRunOptions"
      },
      "type": "object",
      "title": "FinalisePayRunOptions"
    },
    "PayRunCreateAndFinaliseMultipleResponse": {
      "properties": {
        "results": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PayRunCreateAndFinaliseMultipleResult"
          },
          "xml": {
            "name": "PayRunCreateAndFinaliseMultipleResult",
            "wrapped": true
          },
          "type": "array",
          "title": "List<PayRunCreateAndFinaliseMultipleResult>"
        }
      },
      "xml": {
        "name": "PayRunCreateAndFinaliseMultipleResponse"
      },
      "type": "object",
      "title": "PayRunCreateAndFinaliseMultipleResponse"
    },
    "PayRunCreateAndFinaliseMultipleResult": {
      "properties": {
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "finaliseResult": {
          "$ref": "#/definitions/PayRunFinaliseResult",
          "description": ""
        }
      },
      "xml": {
        "name": "PayRunCreateAndFinaliseMultipleResult"
      },
      "type": "object",
      "title": "PayRunCreateAndFinaliseMultipleResult"
    },
    "PayRunFinaliseResult": {
      "properties": {
        "journalExportResult": {
          "$ref": "#/definitions/JournalExportResult",
          "description": ""
        },
        "journalExportFailedMessage": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "removedEmployees": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "notifications": {
          "$ref": "#/definitions/PaySlipNotificationResponse",
          "description": ""
        },
        "paySlipsPublished": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "publishPreference": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PublishPaySlipsPreference"
        },
        "datePaid": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "exportJournalsPreference": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "publishPaySlipsScheduledDateTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "payRunLodgementJobId": {
          "description": "",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid",
          "title": "Nullable<Guid>"
        },
        "pensionSyncJobId": {
          "description": "",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid",
          "title": "Nullable<Guid>"
        },
        "activeEmployees": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "publishPaySlips": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PayRunFinaliseActionPreference"
        },
        "publishPreferenceTimeOfDay": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "exportJournals": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PayRunFinaliseActionPreference"
        },
        "exportJournalsScheduledDateTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "lodgePayRun": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PayRunFinaliseActionPreference"
        },
        "lodgePayRunScheduledDateTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "runReportPacks": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PayRunFinaliseActionPreference"
        },
        "runReportPacksScheduledDateTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "areReportPacksProcessed": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "selectedReportPacks": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "List<String>"
        },
        "submitToPensionSync": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PayRunFinaliseActionPreference"
        },
        "submitToPensionSyncScheduledDateTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "superPayments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PayRunSuperBatchModel"
          },
          "xml": {
            "name": "PayRunSuperBatchModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<PayRunSuperBatchModel>"
        },
        "isFirstFinalisation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "PayRunFinaliseResult"
      },
      "type": "object",
      "title": "PayRunFinaliseResult"
    },
    "JournalExportResult": {
      "properties": {
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "NotExported",
            "Success",
            "FailureUnknownError",
            "FailureAccountsNotConfigured",
            "FailureItemsDeleted",
            "FailureAccountPeriodClosed",
            "FailureNotAuthenticated",
            "FailureAlreadyExported",
            "FailureFunctionDisabled",
            "FailureCannotUseAccountsPayableAccount",
            "FailureVendorMessage",
            "FailureIntercompanyLoanAccountsNotConfigured",
            "FailureGSTSetup",
            "FailureKnownError",
            "FailuresTenantNotSupplied",
            "FailureNoJournalId",
            "FailureAPIError",
            "FailureMissingTaxInfo",
            "FailureRecordingJournalReference",
            "FailureNoProviderFound",
            "FailureUsingManuallyEnteredDimension",
            "ResultUnknown"
          ],
          "title": "JournalExportStatus"
        },
        "message": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "journalSource": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "journalExternalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "JournalExportResult"
      },
      "type": "object",
      "title": "JournalExportResult"
    },
    "PaySlipNotificationResponse": {
      "properties": {
        "totalEmailNotificationsSent": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "totalSmsNotificationsSent": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "errors": {
          "$ref": "#/definitions/PayRunWarningResult",
          "description": ""
        },
        "hasPartiallySentNotifications": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "PaySlipNotificationResponse"
      },
      "type": "object",
      "title": "PaySlipNotificationResponse"
    },
    "PayRunSuperBatchModel": {
      "properties": {
        "superInterchangeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "PayRunSuperBatchModel"
      },
      "type": "object",
      "title": "PayRunSuperBatchModel"
    },
    "PayRunWarningResult": {
      "properties": {
        "warningMessage": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "warnings": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PayRunWarningDto"
          },
          "xml": {
            "name": "PayRunWarningDto",
            "wrapped": true
          },
          "type": "array",
          "title": "List<PayRunWarningDto>"
        },
        "templateName": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "PayRunWarningResult"
      },
      "type": "object",
      "title": "PayRunWarningResult"
    },
    "PayRunWarningDto": {
      "properties": {
        "warningType": {
          "description": "",
          "type": "string",
          "enum": [
            "PaymentFile",
            "MoreLeaveThanAccrued",
            "UnpaidEarnings",
            "Birthday",
            "Anniversary",
            "NegativeEarnings",
            "PreviouslyTerminated",
            "TerminatedWithExpenseReimbursements",
            "ExpiredQualification",
            "DuplicateEarningsLines",
            "TaxCodeMissing",
            "Bpay",
            "LeaveYearCapReached",
            "AutoEnrolmentChanges",
            "EmployeePensionContributionRefund",
            "PensionSchemeRequiresAuthorization",
            "UkTaxCodeUpdate",
            "UkTaxCodeUpdateError",
            "NINOUnknown",
            "ProRataEarnings",
            "HmrcLateReasonWarning",
            "BelowMinimumWage",
            "ExpiredSpecialTaxRate",
            "ExpiredStudentLoanRate",
            "PendingLeaveRequest",
            "LeaveRequestBeyondPayPeriod",
            "PrecedingLeaveRequest",
            "IncompletePayRunTasks",
            "PendingExpenseRequests",
            "PayDayFiling",
            "PayDayFilingAmendment",
            "EmployeeInformation",
            "IrdSettings",
            "AutoUpdatedNICategory",
            "UkStudentLoanUpdate",
            "PensionProviderDoesNotAllowOverseasAddress",
            "MissingLeaveYearEntitlement",
            "LeaveRequestUnitTypeMismatch",
            "ExpiredNric",
            "ExcessOvertime",
            "ForeignEmployee",
            "ExcessDeductions",
            "TerminatedForeignEmployee",
            "StatutoryPaymentApplied",
            "StatutoryPaymentAppliedPrevious",
            "NationalInsuranceValidations",
            "MixedOffsets",
            "PendingSapPayment",
            "ScheduledUpdateApplied",
            "PensionSettingsUpdated",
            "TaxReliefThresholdExceeded",
            "UkNotNoticeUpdate",
            "EarningsAutomaticallyAdjusted",
            "EarningsRequireAdjustment",
            "UkTaxCodeP9Update",
            "HrdfEmployeeWarning",
            "NewPayrolledBenefits",
            "SubmitTerminatedEmployeeToHmrc",
            "SuperReconciliationPreviousPayRun",
            "SuperReconciliationThisPayRun",
            "MoreThan28DaysWithoutTfnQuoted",
            "BackCalculationsApplied",
            "LeaveAccrualReconciliationPreviousPayRun",
            "LeaveAccrualReconciliationThisPayRun",
            "PublicHolidayAutomation",
            "CisSubcontractorRequiresVerification",
            "ItnRequiresUpdate",
            "CisSubcontractorLastPaymentDate",
            "CisSubcontractorUnmatched",
            "CpfRefundRequired",
            "CpfYearEndRecalculationRequired",
            "TaxCodeDisplayNameTooLong",
            "TimesheetOutOfSequence",
            "ExpiredContractorTaxRate",
            "ConcurrentPayRun",
            "StudentLoanAdjustment",
            "UnpaidLeaveWithAvailableBalance",
            "OccupationalLeaveApplied",
            "OccupationalLeaveAppliedPrevious",
            "OccupationalLeaveEntitlementExhausted",
            "AnnualLeaveCashedOut",
            "EmployeeHasTakenPaidFamilyAndDomesticViolenceLeave",
            "ConcurrentPayRunAU",
            "EmployeePensionOptoutForPeriod",
            "EmployeePensionContributionsCeased",
            "EmployeePensionOptoutOrCease",
            "PensionOptOutCouldNotConnect",
            "PensionOptoutScopeUnauthorised",
            "PensionOptoutUnmatched",
            "PensionCeaseUnmatched",
            "RolledUpHolidayPayAndStatutoryPayWarning",
            "PendingDeductions"
          ],
          "title": "PayRunWarningType"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "warning": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payRunTotalId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "metaData": {
          "description": "",
          "type": "object",
          "title": "Object"
        },
        "metaDataJson": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "disableAutoProgression": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "formattedWarningMessage": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "PayRunWarningDto"
      },
      "type": "object",
      "title": "PayRunWarningDto"
    },
    "PayrollExemptReportRequestModel": {
      "properties": {
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "includePostTaxDeductions": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "PayrollExemptReportRequestModel"
      },
      "type": "object",
      "title": "PayrollExemptReportRequestModel"
    },
    "PayrollExemptReportExportModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "grossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superContributions": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "PayrollExemptReportExportModel"
      },
      "type": "object",
      "title": "PayrollExemptReportExportModel"
    },
    "WorkersCompReportGridModel": {
      "properties": {
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employingEntity": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "earningsReporting": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superContributionReporting": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "reportingLocationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "reportingLocationName": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "WorkersCompReportGridModel"
      },
      "type": "object",
      "title": "WorkersCompReportGridModel"
    },
    "MLCSuperReportExportModel": {
      "properties": {
        "code": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fundCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "spin": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "memberCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "secondName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "title": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "gender": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateOfBirth": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "address1": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "address2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "suburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "postcode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "telephone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "mobilePhone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "startDate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "annualSalary": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payGroup": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "benefitCategory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "endDate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superGuarantee": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employerAdditional": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "memberVoluntary": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "salarySacrifice": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "spouseContribution": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxFileNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employmentStatus": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "MLCSuperReportExportModel"
      },
      "type": "object",
      "title": "MLCSuperReportExportModel"
    },
    "AuPayRunDetailsModel": {
      "properties": {
        "payRunTotals": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuPayRunTotalDetailModel"
          },
          "xml": {
            "name": "AuPayRunTotalDetailModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuPayRunTotalDetailModel>"
        },
        "grandTotal": {
          "$ref": "#/definitions/AuPayRunGrandTotalModel",
          "description": ""
        },
        "payRun": {
          "$ref": "#/definitions/PayRunModel",
          "description": ""
        }
      },
      "xml": {
        "name": "AuPayRunDetailsModel"
      },
      "type": "object",
      "title": "AuPayRunDetailsModel"
    },
    "AuPayRunTotalDetailModel": {
      "properties": {
        "paygWithholdingAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "paygWithholdingPercent": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "sfssAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "helpAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superContributionMinusSuperAdjustments": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "allSuperContributionsTotal": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "grossPlusSuper": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superAdjustmentsAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "salarySacrificeSuperAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "memberVoluntarySuperAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "nonSuperDeductionTotal": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superPaymentsTotal": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "isEmployeeUnder18": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employerContributionAdjustmentsAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "paygAdjustmentsAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superContributionsCapApplied": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "paygPaymentTotal": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "totalHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "grossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "netEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxableEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "postTaxDeductionAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "preTaxDeductionAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "payConditionRuleSetName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "isTermination": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notation": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeStartDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "employeeExternalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isExcluded": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "bankPaymentsTotal": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "terminationDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "earliestTerminationDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "previousTerminationDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "employeeExpensesTotal": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerLiabilitiesTotal": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "isComplete": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuPayRunTotalDetailModel"
      },
      "type": "object",
      "title": "AuPayRunTotalDetailModel"
    },
    "AuPayRunGrandTotalModel": {
      "properties": {
        "sfssAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "helpAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "paygWithholdingAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "numberOfEmployees": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "totalHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxableEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "grossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "netEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "preTaxDeductionAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "postTaxDeductionAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeeExpensesTotal": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerLiabilitiesTotal": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "AuPayRunGrandTotalModel"
      },
      "type": "object",
      "title": "AuPayRunGrandTotalModel"
    },
    "PayRunModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "dateFinalised": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payPeriodStarting": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "payPeriodEnding": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "datePaid": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "isFinalised": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "paySlipsPublished": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notation": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "PayRunModel"
      },
      "type": "object",
      "title": "PayRunModel"
    },
    "RosterLiveLeaveAccruals": {
      "properties": {
        "referenceNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "balance": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "RosterLiveLeaveAccruals"
      },
      "type": "object",
      "title": "RosterLiveLeaveAccruals"
    },
    "CommunicationMessageAttachmentModel": {
      "properties": {
        "value": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "type": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "title": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "recordId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "CommunicationMessageAttachmentModel"
      },
      "type": "object",
      "title": "CommunicationMessageAttachmentModel"
    },
    "ConversationStatusUpdateHookModel": {
      "properties": {
        "businessId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "caseId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "subject": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isAutomatic": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "ConversationStatusUpdateHookModel"
      },
      "type": "object",
      "title": "ConversationStatusUpdateHookModel"
    },
    "PayrollExport": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeAgreementId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "periodId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "recommendedLoadings": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timesheets": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "timesheetsTimeApproved": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "timesheetsPayApproved": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "paycycleRules": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "paycycleRulesApproved": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "exported": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "exportId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "paid": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timeTotal": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "costTotal": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeeAgreementHistoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "creator": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "created": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "modified": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "employeeAgreement": {
          "$ref": "#/definitions/EmployeeAgreement",
          "description": ""
        },
        "paycycleReturnArray": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetPayReturnArray"
          },
          "xml": {
            "name": "TimesheetPayReturnArray",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetPayReturnArray>"
        },
        "timesheetArray": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetArray"
          },
          "xml": {
            "name": "TimesheetArray",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetArray>"
        }
      },
      "xml": {
        "name": "PayrollExport"
      },
      "type": "object",
      "title": "PayrollExport"
    },
    "EmployeeAgreement": {
      "properties": {
        "search": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "Object"
        },
        "start": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "max": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payPoint": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "empType": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "companyName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "active": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "startDate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contract": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "salaryPayRule": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "contractFile": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payrollId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payPeriod": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "historyId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "creator": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "created": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "modified": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeAgreement"
      },
      "type": "object",
      "title": "EmployeeAgreement"
    },
    "TimesheetPayReturnArray": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "timesheet": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payRule": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "overridden": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "value": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "cost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "overrideComment": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCycleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "created": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "modified": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "TimesheetPayReturnArray"
      },
      "type": "object",
      "title": "TimesheetPayReturnArray"
    },
    "TimesheetArray": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employee": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeHistory": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeAgreement": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "date": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "startTime": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "endTime": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "mealbreak": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "totalTime": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalTimeInv": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "cost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "roster": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeComment": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "supervisorComment": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "supervisor": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "disputed": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timeApproved": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timeApprover": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "discarded": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "validationFlag": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "operationalUnit": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "isInProgress": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "isLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "leaveId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveRule": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "invoiced": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "invoiceComment": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payRuleApproved": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "exported": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "stagingId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payStaged": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "paycycleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "file": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "creator": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "created": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "modified": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "startTimeLocalized": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "endTimeLocalized": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "timesheetPayReturnArray": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetPayReturnArray"
          },
          "xml": {
            "name": "TimesheetPayReturnArray",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetPayReturnArray>"
        }
      },
      "xml": {
        "name": "TimesheetArray"
      },
      "type": "object",
      "title": "TimesheetArray"
    },
    "UserAccessModel": {
      "properties": {
        "accessType": {
          "description": "",
          "type": "string",
          "enum": [
            "Unrestricted",
            "Restricted"
          ],
          "title": "Nullable<RelatedUserType>"
        }
      },
      "xml": {
        "name": "UserAccessModel"
      },
      "type": "object",
      "title": "UserAccessModel"
    },
    "AuPayCategoryModel": {
      "properties": {
        "paymentSummaryClassification": {
          "description": "",
          "type": "string",
          "enum": [
            "Default",
            "Allowance",
            "LumpSumATypeR",
            "LumpSumATypeT",
            "LumpSumB",
            "LumpSumD",
            "LumpSumE",
            "Exclude",
            "Cdep",
            "ExemptForeignEmploymentIncome",
            "AllowanceCar",
            "AllowanceTransport",
            "AllowanceLaundry",
            "AllowanceMeals",
            "AllowanceTravel",
            "GrossSalary",
            "Bonus",
            "DirectorsFees",
            "AllowanceEntertainment",
            "GrossCommission",
            "Pension",
            "NotReportable",
            "MyGrossSalary",
            "MyFees",
            "MyGrossTips",
            "MyEsosBenefit",
            "MyGratuity",
            "MyBenefitsInKind",
            "MyValueOfLivingAccommodations",
            "MyRefundProvidentPensionFund",
            "MyCompensationForLossOfEmployment",
            "MyPension",
            "MyAnnuities",
            "MyCp38Deduction",
            "MyZakatPaidViaSalaryDeduction",
            "MyReliefClaimTp1",
            "MyZakatReliefClaimTp1",
            "MyTaxExemptAllowances",
            "MyArrearsIncomeA",
            "MyArrearsIncomeB",
            "None",
            "LeaveCashOutOfLeaveInService",
            "LeaveUnusedLeaveOnTermination",
            "LeavePaidParentalLeave",
            "LeaveWorkersCompensation",
            "LeaveAncillaryAndDefenceLeave",
            "LeaveOtherPaidLeave",
            "Overtime",
            "AllowanceTool",
            "AllowanceTasks",
            "AllowanceQualificationsCertificates",
            "EtpLifeBenefitCodeR",
            "EtpLifeBenefitCodeO",
            "EtpMultiplePaymentsCodeS",
            "EtpMultiplePaymentsCodeP",
            "EtpDeathBenefitCodeD",
            "EtpDeathBenefitCodeN",
            "EtpDeathBenefitCodeB",
            "EtpDeathBenefitCodeT",
            "ReturnToWorkPayment",
            "SgGratuity",
            "SgNoticePay",
            "SgExGratiaPayment",
            "SgOtherLumpSumPayments",
            "SgCompensationLossOfOffice",
            "SgRetirementBenefitsPre1993",
            "SgRetirementBenefitsFrom1993"
          ],
          "title": "Nullable<PayCategoryPaymentSummaryClassification>"
        },
        "allowanceDescription": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "defaultSuperRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superExpenseMappingCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superLiabilityMappingCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isPayrollTaxExempt": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "awardName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "awardId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payCategoryType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "LeaveLoading",
            "GenuineRedundancyLeavePayment",
            "OpeningBalanceAllowances",
            "EtpTypeRTaxable",
            "EtpTypeRTaxFree",
            "EtpTypeOTaxable",
            "EtpTypeOTaxFree",
            "EtpLumpSumD",
            "GenuineRedundancyLeaveLoading",
            "MethodB2AdditionalPaymentsOpeningBalance",
            "EtpSuperableTypeOTaxable",
            "EtpSuperableTypeOTaxFree",
            "EtpTypeOUnusedLeavePayment",
            "EtpTypeSTaxable",
            "EtpTypeSTaxFree",
            "EtpTypePTaxable",
            "EtpTypePTaxFree",
            "EtpSuperableTypePTaxable",
            "EtpSuperableTypePTaxFree",
            "EtpTypePUnusedLeavePayment",
            "JobKeeperTier",
            "JobKeeperCancelTier",
            "JobMakerNomination",
            "JobMakerRenomination",
            "JobMakerPeriod",
            "JobMakerCancelNomination",
            "JobMakerCancelRenomination",
            "JobMakerCancelPeriod",
            "NormalTerminationLeaveLoading",
            "PublicHolidayWorked",
            "PublicHolidayNotWorked",
            "UnusedLeavePaymentNormalTermination",
            "BackPayment",
            "PaidFamilyAndDomesticViolenceLeave"
          ],
          "title": "AuPayCategoryType"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "parentId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rateUnit": {
          "description": "",
          "type": "string",
          "enum": [
            "Hourly",
            "Annually",
            "Fixed",
            "Daily",
            "Monthly"
          ],
          "title": "RateUnitEnum"
        },
        "accruesLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "rateLoadingPercent": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "penaltyLoadingPercent": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "isTaxExempt": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "generalLedgerMappingCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isSystemPayCategory": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "numberOfDecimalPlaces": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "roundingMethod": {
          "description": "",
          "type": "string",
          "enum": [
            "ToEven",
            "AwayFromZero"
          ],
          "title": "Nullable<MidpointRounding>"
        },
        "hideUnitsOnPaySlip": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isPrimary": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuPayCategoryModel"
      },
      "type": "object",
      "title": "AuPayCategoryModel"
    },
    "ODataQueryOptionsOfPayCategory": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<PayCategory>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<PayCategory>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<PayCategory>"
    },
    "ODataQueryOptionsOfPaygPaymentSummarySnapshot": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<PaygPaymentSummarySnapshot>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<PaygPaymentSummarySnapshot>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<PaygPaymentSummarySnapshot>"
    },
    "PaygPaymentSummaryModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "dateGenerated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "paymentSummaryType": {
          "description": "",
          "type": "string",
          "enum": [
            "BusinessAndPersonalServicesIncome",
            "EmployeeTerminationPayment",
            "ForeignEmployment",
            "IndividualNonBusiness",
            "SuperannuationIncomeStream",
            "SuperannuationLumpSum",
            "PayEvent"
          ],
          "title": "PaygPaymentSummaryTypeEnum"
        },
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "Generated",
            "Published",
            "Unpublished"
          ],
          "title": "PaygPaymentSummaryStatus"
        },
        "etpCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isAmended": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "payeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payeeAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payeeAddressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payeeSuburb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payeePostCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payeeState": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payeeCountry": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paymentPeriodStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "paymentPeriodEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "financialYearStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "financialYearEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "payeeTaxFileNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "totalTaxWithheld": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "grossPayments": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "cdepPayments": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fringeBenefits": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "isExemptFromFringeBenefitsTax": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "employerSuperContributions": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "totalAllowances": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "lumpSumA": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "lumpSumB": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "lumpSumD": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "lumpSumE": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "lumpSumAType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "notReportedAmount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "allowances": {
          "description": "",
          "additionalProperties": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "object",
          "title": "Dictionary<String,Int32>"
        },
        "unionFeeDeductions": {
          "description": "",
          "additionalProperties": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "object",
          "title": "Dictionary<String,Int32>"
        },
        "workplaceGiving": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "exemptForeignEmploymentIncome": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "deductibleAmountOfUndeductedAnnuityPrice": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "otherAmounts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/OtherAmounts"
          },
          "xml": {
            "name": "OtherAmounts",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<OtherAmounts>"
        },
        "payerABN": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payerName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payerBranch": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payerSignatory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paymentDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "isTransitionalTerminationPayment": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isPartOfEarlierPayment": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "taxableComponent": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "taxFreeComponent": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payeeABN": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paymentType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "grossPaymentType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "foreignTaxPaid": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "taxableComponentTaxedElement": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "taxableComponentUntaxedElement": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "taxableComponentTaxFreeComponent": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "taxableComponentTaxOffsetAmount": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "lumpSumInArrearsTaxedElement": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "lumpSumInArrearsUntaxedElement": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "lumpSumInArrearsTaxFreeComponent": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "isDeathBenefit": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "deathBenefitType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "inputGrossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "inputPreTaxDeductionAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "totalDeductions": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "PaygPaymentSummaryModel"
      },
      "type": "object",
      "title": "PaygPaymentSummaryModel"
    },
    "OtherAmounts": {
      "properties": {
        "workPlaceGiving": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "exemptForeignExemptIncome": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "deductibleAmountOfUndeductedAnnuityPrice": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "OtherAmounts"
      },
      "type": "object",
      "title": "OtherAmounts"
    },
    "ODataQueryOptionsOfPayRateTemplate": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<PayRateTemplate>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<PayRateTemplate>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<PayRateTemplate>"
    },
    "AuPayRateTemplateModel": {
      "properties": {
        "superThresholdAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "maximumQuarterlySuperContributionsBase": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "primaryPayCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payCategories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PayRateTemplatePayCategoryExportModel"
          },
          "xml": {
            "name": "PayRateTemplatePayCategoryExportModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<PayRateTemplatePayCategoryExportModel>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "reapplyToLinkedEmployees": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuPayRateTemplateModel"
      },
      "type": "object",
      "title": "AuPayRateTemplateModel"
    },
    "PayRateTemplatePayCategoryExportModel": {
      "properties": {
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "userSuppliedRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "calculatedRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "standardWeeklyHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "PayRateTemplatePayCategoryExportModel"
      },
      "type": "object",
      "title": "PayRateTemplatePayCategoryExportModel"
    },
    "PayRunEmployeeExpenseResponse": {
      "properties": {
        "employeeExpenses": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/EmployeeExpenseModel"
            },
            "xml": {
              "name": "EmployeeExpenseModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<EmployeeExpenseModel>"
          },
          "readOnly": true,
          "type": "object",
          "title": "Dictionary<String,List`1>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "PayRunEmployeeExpenseResponse"
      },
      "type": "object",
      "title": "PayRunEmployeeExpenseResponse"
    },
    "EmployeeExpenseModel": {
      "properties": {
        "employeeExpenseCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeExpenseCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "taxCodeDisplayName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "reportingDimensionValueIds": {
          "description": "Nullable</p><p><i>Note:</i> Only applicable to businesses where the Dimensions feature is enabled.</p><p>Specify an array of dimension value ids (normally only one-per dimension) eg [1,3,7].</p><p>If you prefer to specify dimension values by name, use the ReportingDimensionValueNames field instead.</p><p>If this field is used, ReportingDimensionValueNames will be ignored (the Ids take precedence)",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "reportingDimensionValueNames": {
          "description": "Nullable</p><p><i>Note:</i> Only applicable to businesses where the Dimensions feature is enabled.</p><p>Specify an object with dimension names and for each one, specify an array of associated value names (normally one-per dimension) eg { \"Department\": [\"Accounting\"], \"Job Code\": [\"JC1\"] }.</p><p>If you prefer to specify dimension values directly by Id, use the ReportingDimensionValueIds field instead.</p><p>If ReportingDimensionValueIds is used, ReportingDimensionValueNames will be ignored (the Ids take precedence)",
          "additionalProperties": {
            "items": {
              "type": "string",
              "title": "String"
            },
            "type": "array",
            "title": "IList<String>"
          },
          "type": "object",
          "title": "IDictionary<String,IList`1>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeExpenseModel"
      },
      "type": "object",
      "title": "EmployeeExpenseModel"
    },
    "SubmitPayRunEmployeeExpenseRequest": {
      "properties": {
        "locationIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "employeeExpenseCategoryIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "expenses": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/EmployeeExpenseModel"
            },
            "xml": {
              "name": "EmployeeExpenseModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<EmployeeExpenseModel>"
          },
          "type": "object",
          "title": "Dictionary<String,List`1>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "replaceExisting": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "suppressCalculations": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "SubmitPayRunEmployeeExpenseRequest"
      },
      "type": "object",
      "title": "SubmitPayRunEmployeeExpenseRequest"
    },
    "PayRunTotalModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "totalHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "grossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "preTaxDeductions": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxableEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "postTaxDeductions": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "netEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalEmployeeExpenses": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalEmployerLiabilities": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "isPublished": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "notation": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paygWithheld": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "sfssWithheld": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "helpWithheld": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "kiwiSaverEmployeeContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "kiwiSaverEmployerContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "esctContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "studentLoanAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "postGradLoanAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "studentLoanAdditionalMandatoryAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "studentLoanAdditionalVoluntaryAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "accLevyAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "cpfEmployerContributionAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "cpfEmployeeContributionAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerVoluntaryCpfAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerVoluntaryMediSaveAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "sdlContributionAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerPensionContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeePensionContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeeNationalInsuranceContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerNationalInsuranceContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeePensionableEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerPensionableEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "terminationPaymentNIExempt": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "terminationPaymentEmployerNI": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "nicClass1A": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "enrolledInPensionScheme": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "deferralDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "bikTaxableAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "bikTaxExemptAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "cp38Amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "pcbBorneByEmployerAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "epfEmployerAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "epfEmployeeAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "eisEmployerAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "eisEmployeeAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "socsoEmployerAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "socsoEmployeeAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "hrdfAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "PayRunTotalModel"
      },
      "type": "object",
      "title": "PayRunTotalModel"
    },
    "AuPayRunEarningsLineResponseModel": {
      "properties": {
        "earningsLines": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/AuEarningsLineModel"
            },
            "xml": {
              "name": "AuEarningsLineModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<AuEarningsLineModel>"
          },
          "type": "object",
          "title": "Dictionary<String,List`1>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "AuPayRunEarningsLineResponseModel"
      },
      "type": "object",
      "title": "AuPayRunEarningsLineResponseModel"
    },
    "AuEarningsLineModel": {
      "properties": {
        "super": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "sfss": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "help": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "payg": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "payCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "earnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "lumpSumNumberOfPayPeriods": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "lumpSumCalculationMethod": {
          "description": "",
          "type": "string",
          "enum": [
            "A",
            "B2",
            "NotApplicable"
          ],
          "title": "Nullable<LumpSumCalculationMethod>"
        },
        "lumpSumEFinancialYear": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "timesheetLineId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "timesheetLineExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "reportingDimensionValueIds": {
          "description": "Nullable</p><p><i>Note:</i> Only applicable to businesses where the Dimensions feature is enabled.</p><p>Specify an array of dimension value ids (normally only one-per dimension) eg [1,3,7].</p><p>If you prefer to specify dimension values by name, use the ReportingDimensionValueNames field instead.</p><p>If this field is used, ReportingDimensionValueNames will be ignored (the Ids take precedence)",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "reportingDimensionValueNames": {
          "description": "Nullable</p><p><i>Note:</i> Only applicable to businesses where the Dimensions feature is enabled.</p><p>Specify an object with dimension names and for each one, specify an array of associated value names (normally one-per dimension) eg { \"Department\": [\"Accounting\"], \"Job Code\": [\"JC1\"] }.</p><p>If you prefer to specify dimension values directly by Id, use the ReportingDimensionValueIds field instead.</p><p>If ReportingDimensionValueIds is used, ReportingDimensionValueNames will be ignored (the Ids take precedence)",
          "additionalProperties": {
            "items": {
              "type": "string",
              "title": "String"
            },
            "type": "array",
            "title": "IList<String>"
          },
          "type": "object",
          "title": "IDictionary<String,IList`1>"
        },
        "netPayment": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "title": "Int64"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuEarningsLineModel"
      },
      "type": "object",
      "title": "AuEarningsLineModel"
    },
    "AuSubmitPayRunEarningsLineRequest": {
      "properties": {
        "earningsLines": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/AuEarningsLineModel"
            },
            "xml": {
              "name": "AuEarningsLineModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<AuEarningsLineModel>"
          },
          "type": "object",
          "title": "Dictionary<String,List`1>"
        },
        "locationIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "payCategoryIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "replaceExisting": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "suppressCalculations": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "AuSubmitPayRunEarningsLineRequest"
      },
      "type": "object",
      "title": "AuSubmitPayRunEarningsLineRequest"
    },
    "AuPayRunDeductionResponse": {
      "properties": {
        "deductions": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/AuDeductionModel"
            },
            "xml": {
              "name": "AuDeductionModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<AuDeductionModel>"
          },
          "readOnly": true,
          "type": "object",
          "title": "Dictionary<String,List`1>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "AuPayRunDeductionResponse"
      },
      "type": "object",
      "title": "AuPayRunDeductionResponse"
    },
    "AuDeductionModel": {
      "properties": {
        "deductionCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "deductionCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paymentReference": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "associatedEmployeeDeductionCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payToBankAccountBSB": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payToBankAccountBankCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payToBankAccountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payToSuperFundName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payToSuperFundMemberNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payTo": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "additionalData": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuDeductionModel"
      },
      "type": "object",
      "title": "AuDeductionModel"
    },
    "SubmitPayRunDeductionRequest": {
      "properties": {
        "deductionCategoryIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "deductions": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/DeductionModel"
            },
            "xml": {
              "name": "DeductionModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<DeductionModel>"
          },
          "type": "object",
          "title": "Dictionary<String,List`1>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "replaceExisting": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "suppressCalculations": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "SubmitPayRunDeductionRequest"
      },
      "type": "object",
      "title": "SubmitPayRunDeductionRequest"
    },
    "DeductionModel": {
      "properties": {
        "deductionCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "deductionCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paymentReference": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "associatedEmployeeDeductionCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payToBankAccountBSB": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payToBankAccountSwift": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payToBankAccountBankCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payToBankAccountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payToSuperFundName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payToSuperFundMemberNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payTo": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "additionalData": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "DeductionModel"
      },
      "type": "object",
      "title": "DeductionModel"
    },
    "TerminateEmployeeRequest": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "terminationReason": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "terminationDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "TerminateEmployeeRequest"
      },
      "type": "object",
      "title": "TerminateEmployeeRequest"
    },
    "AuPayRunTotalResponse": {
      "properties": {
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payRunTotals": {
          "description": "",
          "additionalProperties": {
            "$ref": "#/definitions/AuPayRunTotalModel"
          },
          "type": "object",
          "title": "Dictionary<String,AuPayRunTotalModel>"
        }
      },
      "xml": {
        "name": "AuPayRunTotalResponse"
      },
      "type": "object",
      "title": "AuPayRunTotalResponse"
    },
    "AuPayRunTotalModel": {
      "properties": {
        "paygWithheld": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "sfssWithheld": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "helpWithheld": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "totalHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "grossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "preTaxDeductions": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxableEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "postTaxDeductions": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "netEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalEmployeeExpenses": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalEmployerLiabilities": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "isPublished": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "notation": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuPayRunTotalModel"
      },
      "type": "object",
      "title": "AuPayRunTotalModel"
    },
    "PayRunTotalNotationModel": {
      "properties": {
        "notation": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "PayRunTotalNotationModel"
      },
      "type": "object",
      "title": "PayRunTotalNotationModel"
    },
    "AuJournalItemResponse": {
      "properties": {
        "journalItemType": {
          "description": "",
          "type": "string",
          "enum": [
            "Asset",
            "PaygExpense",
            "PaygLiability",
            "StudentLoanLiability",
            "PostGraduateStudentLoanLiability",
            "SuperExpense",
            "SuperLiability",
            "DefaultExpense",
            "WagesExpense",
            "DefaultSalarySacrificeExpense",
            "DefaultSalarySacrificeLiability",
            "DefaultDeductionExpense",
            "DefaultDeductionLiability",
            "DefaultEmployerLiabilityExpense",
            "DefaultEmployerLiabilityLiability",
            "DeductionExpense",
            "DeductionLiability",
            "DeductionAsset",
            "DefaultEmployeeExpense",
            "EmployeeExpense",
            "PreTaxDeductionLiability",
            "PostTaxDeductionLiability",
            "EmployerLiabilityExpense",
            "EmployerLiabilityLiability",
            "W1ExemptWagesExpense",
            "PreTaxDeductionAsset",
            "InterCompanyLoanCredit",
            "InterCompanyLoanDebit",
            "LeaveAccrualLiability",
            "LeaveAccrualExpense",
            "LeaveTakenLiability",
            "LeaveTakenExpense",
            "LeaveAdjustmentLiability",
            "LeaveAdjustmentExpense"
          ],
          "title": "JournalItemType"
        },
        "externalAccountReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "amountUnrounded": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "reference": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "details": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isCredit": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isDebit": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "locationExternalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "reportingDimensionValueIds": {
          "description": "Nullable</p><p><i>Note:</i> Only applicable to businesses where the Dimensions feature is enabled.</p><p>Specify an array of dimension value ids (normally only one-per dimension) eg [1,3,7].</p><p>If you prefer to specify dimension values by name, use the ReportingDimensionValueNames field instead.</p><p>If this field is used, ReportingDimensionValueNames will be ignored (the Ids take precedence)",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "reportingDimensionValueNames": {
          "description": "Nullable</p><p><i>Note:</i> Only applicable to businesses where the Dimensions feature is enabled.</p><p>Specify an object with dimension names and for each one, specify an array of associated value names (normally one-per dimension) eg { \"Department\": [\"Accounting\"], \"Job Code\": [\"JC1\"] }.</p><p>If you prefer to specify dimension values directly by Id, use the ReportingDimensionValueIds field instead.</p><p>If ReportingDimensionValueIds is used, ReportingDimensionValueNames will be ignored (the Ids take precedence)",
          "additionalProperties": {
            "items": {
              "type": "string",
              "title": "String"
            },
            "type": "array",
            "title": "IList<String>"
          },
          "type": "object",
          "title": "IDictionary<String,IList`1>"
        }
      },
      "xml": {
        "name": "AuJournalItemResponse"
      },
      "type": "object",
      "title": "AuJournalItemResponse"
    },
    "AuBankPaymentModel": {
      "properties": {
        "bsb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeFirstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeSurname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "accountType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "lodgementReference": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuBankPaymentModel"
      },
      "type": "object",
      "title": "AuBankPaymentModel"
    },
    "ODataQueryOptionsOfPayRun": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<PayRun>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<PayRun>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<PayRun>"
    },
    "PayRunCreateRequest": {
      "properties": {
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payPeriodEnding": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "datePaid": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "timesheetImportOption": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "ThisPayPeriod",
            "AllOutstanding",
            "CustomPeriod"
          ],
          "title": "Nullable<TimesheetImportOption>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "callbackUrl": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "createWithEmptyPays": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "adhoc": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        }
      },
      "xml": {
        "name": "PayRunCreateRequest"
      },
      "type": "object",
      "title": "PayRunCreateRequest"
    },
    "PayRunJobModel": {
      "properties": {
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "jobId": {
          "description": "",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid",
          "title": "Guid"
        }
      },
      "xml": {
        "name": "PayRunJobModel"
      },
      "type": "object",
      "title": "PayRunJobModel"
    },
    "PayRunJobStatusModel": {
      "properties": {
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "additionalInfo": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "PayRunJobStatusModel"
      },
      "type": "object",
      "title": "PayRunJobStatusModel"
    },
    "PayRunNotationModel": {
      "properties": {
        "notation": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "PayRunNotationModel"
      },
      "type": "object",
      "title": "PayRunNotationModel"
    },
    "NetToGrossRequest": {
      "properties": {
        "netAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "payCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payRunTotalId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "NetToGrossRequest"
      },
      "type": "object",
      "title": "NetToGrossRequest"
    },
    "NetToGrossModel": {
      "properties": {
        "grossAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "NetToGrossModel"
      },
      "type": "object",
      "title": "NetToGrossModel"
    },
    "PayRunSummaryModel": {
      "properties": {
        "totalHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalNetWages": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalGrossWages": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "dateFinalised": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payPeriodStarting": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "payPeriodEnding": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "datePaid": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "isFinalised": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "paySlipsPublished": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notation": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "PayRunSummaryModel"
      },
      "type": "object",
      "title": "PayRunSummaryModel"
    },
    "BulkApplyLeaveRequestModel": {
      "properties": {
        "leaveRequestIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "alignToPayRunPeriod": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "BulkApplyLeaveRequestModel"
      },
      "type": "object",
      "title": "BulkApplyLeaveRequestModel"
    },
    "ApplyLeaveRequestResult": {
      "properties": {
        "updatedPayRunTotals": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "failedLeaveRequests": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ApplyLeaveRequestModel"
          },
          "xml": {
            "name": "ApplyLeaveRequestModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ApplyLeaveRequestModel>"
        }
      },
      "xml": {
        "name": "ApplyLeaveRequestResult"
      },
      "type": "object",
      "title": "ApplyLeaveRequestResult"
    },
    "ApplyLeaveRequestModel": {
      "properties": {
        "payRunTotalId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "leaveRequestId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "errorMessage": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "ApplyLeaveRequestModel"
      },
      "type": "object",
      "title": "ApplyLeaveRequestModel"
    },
    "DetailedPayRunWarningModel": {
      "properties": {
        "warningType": {
          "description": "",
          "type": "string",
          "enum": [
            "PaymentFile",
            "MoreLeaveThanAccrued",
            "UnpaidEarnings",
            "Birthday",
            "Anniversary",
            "NegativeEarnings",
            "PreviouslyTerminated",
            "TerminatedWithExpenseReimbursements",
            "ExpiredQualification",
            "DuplicateEarningsLines",
            "TaxCodeMissing",
            "Bpay",
            "LeaveYearCapReached",
            "AutoEnrolmentChanges",
            "EmployeePensionContributionRefund",
            "PensionSchemeRequiresAuthorization",
            "UkTaxCodeUpdate",
            "UkTaxCodeUpdateError",
            "NINOUnknown",
            "ProRataEarnings",
            "HmrcLateReasonWarning",
            "BelowMinimumWage",
            "ExpiredSpecialTaxRate",
            "ExpiredStudentLoanRate",
            "PendingLeaveRequest",
            "LeaveRequestBeyondPayPeriod",
            "PrecedingLeaveRequest",
            "IncompletePayRunTasks",
            "PendingExpenseRequests",
            "PayDayFiling",
            "PayDayFilingAmendment",
            "EmployeeInformation",
            "IrdSettings",
            "AutoUpdatedNICategory",
            "UkStudentLoanUpdate",
            "PensionProviderDoesNotAllowOverseasAddress",
            "MissingLeaveYearEntitlement",
            "LeaveRequestUnitTypeMismatch",
            "ExpiredNric",
            "ExcessOvertime",
            "ForeignEmployee",
            "ExcessDeductions",
            "TerminatedForeignEmployee",
            "StatutoryPaymentApplied",
            "StatutoryPaymentAppliedPrevious",
            "NationalInsuranceValidations",
            "MixedOffsets",
            "PendingSapPayment",
            "ScheduledUpdateApplied",
            "PensionSettingsUpdated",
            "TaxReliefThresholdExceeded",
            "UkNotNoticeUpdate",
            "EarningsAutomaticallyAdjusted",
            "EarningsRequireAdjustment",
            "UkTaxCodeP9Update",
            "HrdfEmployeeWarning",
            "NewPayrolledBenefits",
            "SubmitTerminatedEmployeeToHmrc",
            "SuperReconciliationPreviousPayRun",
            "SuperReconciliationThisPayRun",
            "MoreThan28DaysWithoutTfnQuoted",
            "BackCalculationsApplied",
            "LeaveAccrualReconciliationPreviousPayRun",
            "LeaveAccrualReconciliationThisPayRun",
            "PublicHolidayAutomation",
            "CisSubcontractorRequiresVerification",
            "ItnRequiresUpdate",
            "CisSubcontractorLastPaymentDate",
            "CisSubcontractorUnmatched",
            "CpfRefundRequired",
            "CpfYearEndRecalculationRequired",
            "TaxCodeDisplayNameTooLong",
            "TimesheetOutOfSequence",
            "ExpiredContractorTaxRate",
            "ConcurrentPayRun",
            "StudentLoanAdjustment",
            "UnpaidLeaveWithAvailableBalance",
            "OccupationalLeaveApplied",
            "OccupationalLeaveAppliedPrevious",
            "OccupationalLeaveEntitlementExhausted",
            "AnnualLeaveCashedOut",
            "EmployeeHasTakenPaidFamilyAndDomesticViolenceLeave",
            "ConcurrentPayRunAU",
            "EmployeePensionOptoutForPeriod",
            "EmployeePensionContributionsCeased",
            "EmployeePensionOptoutOrCease",
            "PensionOptOutCouldNotConnect",
            "PensionOptoutScopeUnauthorised",
            "PensionOptoutUnmatched",
            "PensionCeaseUnmatched",
            "RolledUpHolidayPayAndStatutoryPayWarning",
            "PendingDeductions"
          ],
          "title": "PayRunWarningType"
        },
        "warningTypeDescription": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "warning": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "DetailedPayRunWarningModel"
      },
      "type": "object",
      "title": "DetailedPayRunWarningModel"
    },
    "AuApiPaySlipModel": {
      "properties": {
        "paygAdjustments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ApiPaySlipPaygAdjustmentModel"
          },
          "xml": {
            "name": "ApiPaySlipPaygAdjustmentModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ApiPaySlipPaygAdjustmentModel>"
        },
        "superAdjustments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ApiPaySlipSuperAdjustmentModel"
          },
          "xml": {
            "name": "ApiPaySlipSuperAdjustmentModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ApiPaySlipSuperAdjustmentModel>"
        },
        "superPayments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ApiPaySlipSuperPaymentModel"
          },
          "xml": {
            "name": "ApiPaySlipSuperPaymentModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ApiPaySlipSuperPaymentModel>"
        },
        "bankPayments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuApiPaySlipBankPaymentModel"
          },
          "xml": {
            "name": "AuApiPaySlipBankPaymentModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuApiPaySlipBankPaymentModel>"
        },
        "earningsLines": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuApiPaySlipEarningsLineModel"
          },
          "xml": {
            "name": "AuApiPaySlipEarningsLineModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<AuApiPaySlipEarningsLineModel>"
        },
        "paygWithholdingAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "sfssAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "helpAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeePostalSuburbName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeePostalSuburbPostcode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeePostalSuburbState": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superYTD": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "sfssYTD": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "helpYTD": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "paygYTD": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "abn": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "totalAccruedLeave": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ApiPaySlipLeaveModel"
          },
          "xml": {
            "name": "ApiPaySlipLeaveModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ApiPaySlipLeaveModel>"
        },
        "accruedLeave": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ApiPaySlipLeaveModel"
          },
          "xml": {
            "name": "ApiPaySlipLeaveModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ApiPaySlipLeaveModel>"
        },
        "leaveTaken": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ApiPaySlipLeaveModel"
          },
          "xml": {
            "name": "ApiPaySlipLeaveModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ApiPaySlipLeaveModel>"
        },
        "deductions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ApiPaySlipDeductionModel"
          },
          "xml": {
            "name": "ApiPaySlipDeductionModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ApiPaySlipDeductionModel>"
        },
        "grossYTDDetails": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ApiYearToDateEarningsBreakdownModel"
          },
          "xml": {
            "name": "ApiYearToDateEarningsBreakdownModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ApiYearToDateEarningsBreakdownModel>"
        },
        "employeeExpenses": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ApiEmployeeExpenseGridModel"
          },
          "xml": {
            "name": "ApiEmployeeExpenseGridModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ApiEmployeeExpenseGridModel>"
        },
        "totalHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "grossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "netEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxableEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "postTaxDeductionAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "preTaxDeductionAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "businessName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "businessAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "contactName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payPeriodStarting": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payPeriodEnding": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "message": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeFirstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeSurname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeePostalStreetAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeePostalAddressLine2": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeePostalAddressCountry": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "notation": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isPublished": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "grossYTD": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "netYTD": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "withholdingYTD": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "basePayRate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "baseRate": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "hourlyRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "preTaxDeductionsYTD": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "postTaxDeductionsYTD": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeeBaseRate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeeBaseRateUnit": {
          "description": "",
          "type": "string",
          "enum": [
            "Hourly",
            "Annually",
            "Fixed",
            "Daily",
            "Monthly"
          ],
          "title": "RateUnitEnum"
        }
      },
      "xml": {
        "name": "AuApiPaySlipModel"
      },
      "type": "object",
      "title": "AuApiPaySlipModel"
    },
    "ApiPaySlipPaygAdjustmentModel": {
      "properties": {
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "ApiPaySlipPaygAdjustmentModel"
      },
      "type": "object",
      "title": "ApiPaySlipPaygAdjustmentModel"
    },
    "ApiPaySlipSuperAdjustmentModel": {
      "properties": {
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "ApiPaySlipSuperAdjustmentModel"
      },
      "type": "object",
      "title": "ApiPaySlipSuperAdjustmentModel"
    },
    "ApiPaySlipSuperPaymentModel": {
      "properties": {
        "fundName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "memberNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "ApiPaySlipSuperPaymentModel"
      },
      "type": "object",
      "title": "ApiPaySlipSuperPaymentModel"
    },
    "AuApiPaySlipBankPaymentModel": {
      "properties": {
        "bsb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "lodgementReference": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "AuApiPaySlipBankPaymentModel"
      },
      "type": "object",
      "title": "AuApiPaySlipBankPaymentModel"
    },
    "AuApiPaySlipEarningsLineModel": {
      "properties": {
        "superContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "payCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "isFixed": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "isTaxExempt": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "grossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxableEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuApiPaySlipEarningsLineModel"
      },
      "type": "object",
      "title": "AuApiPaySlipEarningsLineModel"
    },
    "ApiPaySlipLeaveModel": {
      "properties": {
        "leaveCategory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ApiPaySlipLeaveModel"
      },
      "type": "object",
      "title": "ApiPaySlipLeaveModel"
    },
    "ApiPaySlipDeductionModel": {
      "properties": {
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxStatus": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ApiPaySlipDeductionModel"
      },
      "type": "object",
      "title": "ApiPaySlipDeductionModel"
    },
    "ApiYearToDateEarningsBreakdownModel": {
      "properties": {
        "payCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "grossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "ApiYearToDateEarningsBreakdownModel"
      },
      "type": "object",
      "title": "ApiYearToDateEarningsBreakdownModel"
    },
    "ApiEmployeeExpenseGridModel": {
      "properties": {
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeExpenseCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ApiEmployeeExpenseGridModel"
      },
      "type": "object",
      "title": "ApiEmployeeExpenseGridModel"
    },
    "EmploymentTerminationPayment": {
      "properties": {
        "taxFreeComponent": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxableAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "attractSuper": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "comments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isGenuineRedundancy": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "etpType": {
          "description": "",
          "type": "string",
          "enum": [
            "O",
            "P",
            "R",
            "S"
          ],
          "title": "EtpTypeEnum"
        }
      },
      "xml": {
        "name": "EmploymentTerminationPayment"
      },
      "type": "object",
      "title": "EmploymentTerminationPayment"
    },
    "PayRunPaygAdjustmentResponse": {
      "properties": {
        "paygAdjustments": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/PaygAdjustmentModel"
            },
            "xml": {
              "name": "PaygAdjustmentModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<PaygAdjustmentModel>"
          },
          "readOnly": true,
          "type": "object",
          "title": "Dictionary<String,List`1>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "PayRunPaygAdjustmentResponse"
      },
      "type": "object",
      "title": "PayRunPaygAdjustmentResponse"
    },
    "PaygAdjustmentModel": {
      "properties": {
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "PaygAdjustmentModel"
      },
      "type": "object",
      "title": "PaygAdjustmentModel"
    },
    "SubmitPayRunPaygAdjustmentRequest": {
      "properties": {
        "paygAdjustments": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/PaygAdjustmentModel"
            },
            "xml": {
              "name": "PaygAdjustmentModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<PaygAdjustmentModel>"
          },
          "type": "object",
          "title": "Dictionary<String,List`1>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "replaceExisting": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "suppressCalculations": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "SubmitPayRunPaygAdjustmentRequest"
      },
      "type": "object",
      "title": "SubmitPayRunPaygAdjustmentRequest"
    },
    "SetPayRunUIUnlockStateRequest": {
      "properties": {
        "enableUIUnlock": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "SetPayRunUIUnlockStateRequest"
      },
      "type": "object",
      "title": "SetPayRunUIUnlockStateRequest"
    },
    "PayRunUnlockRequest": {
      "properties": {
        "comments": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "PayRunUnlockRequest"
      },
      "type": "object",
      "title": "PayRunUnlockRequest"
    },
    "PayRunSuperAdjustmentResponse": {
      "properties": {
        "superAdjustments": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/SuperAdjustmentModel"
            },
            "xml": {
              "name": "SuperAdjustmentModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<SuperAdjustmentModel>"
          },
          "readOnly": true,
          "type": "object",
          "title": "Dictionary<String,List`1>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "PayRunSuperAdjustmentResponse"
      },
      "type": "object",
      "title": "PayRunSuperAdjustmentResponse"
    },
    "SuperAdjustmentModel": {
      "properties": {
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "contributionType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "SuperAdjustmentModel"
      },
      "type": "object",
      "title": "SuperAdjustmentModel"
    },
    "SubmitPayRunSuperAdjustmentRequest": {
      "properties": {
        "superAdjustments": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/SuperAdjustmentModel"
            },
            "xml": {
              "name": "SuperAdjustmentModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<SuperAdjustmentModel>"
          },
          "type": "object",
          "title": "Dictionary<String,List`1>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "replaceExisting": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "suppressCalculations": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "SubmitPayRunSuperAdjustmentRequest"
      },
      "type": "object",
      "title": "SubmitPayRunSuperAdjustmentRequest"
    },
    "LeaveAccrualResponse": {
      "properties": {
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "leave": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/LeaveAccrualModel"
            },
            "xml": {
              "name": "LeaveAccrualModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<LeaveAccrualModel>"
          },
          "type": "object",
          "title": "Dictionary<String,List`1>"
        }
      },
      "xml": {
        "name": "LeaveAccrualResponse"
      },
      "type": "object",
      "title": "LeaveAccrualResponse"
    },
    "LeaveAccrualModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "leaveCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accrualType": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "LeaveAccrualModel"
      },
      "type": "object",
      "title": "LeaveAccrualModel"
    },
    "SubmitLeaveAccrualsModel": {
      "properties": {
        "replaceExisting": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employeeIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "suppressCalculations": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "leave": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/SaveLeaveAccrualModel"
            },
            "xml": {
              "name": "SaveLeaveAccrualModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<SaveLeaveAccrualModel>"
          },
          "type": "object",
          "title": "Dictionary<String,List`1>"
        }
      },
      "xml": {
        "name": "SubmitLeaveAccrualsModel"
      },
      "type": "object",
      "title": "SubmitLeaveAccrualsModel"
    },
    "SaveLeaveAccrualModel": {
      "properties": {
        "accrualType": {
          "description": "",
          "type": "string",
          "enum": [
            "LeaveAccrued",
            "LeaveTaken",
            "LeaveAdjustment"
          ],
          "title": "SaveLeaveAccrualTypeEnum"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "applyLeaveLoading": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "adjustEarnings": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "externalReferenceId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "SaveLeaveAccrualModel"
      },
      "type": "object",
      "title": "SaveLeaveAccrualModel"
    },
    "PayRunEmployerLiabilityResponse": {
      "properties": {
        "employerLiabilities": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/EmployerLiabilityModel"
            },
            "xml": {
              "name": "EmployerLiabilityModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<EmployerLiabilityModel>"
          },
          "readOnly": true,
          "type": "object",
          "title": "Dictionary<String,List`1>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "PayRunEmployerLiabilityResponse"
      },
      "type": "object",
      "title": "PayRunEmployerLiabilityResponse"
    },
    "EmployerLiabilityModel": {
      "properties": {
        "employerLiabilityCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employerLiabilityCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployerLiabilityModel"
      },
      "type": "object",
      "title": "EmployerLiabilityModel"
    },
    "SubmitPayRunEmployerLiabilityRequest": {
      "properties": {
        "employerLiabilityCategoryIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "employerLiabilities": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/EmployerLiabilityModel"
            },
            "xml": {
              "name": "EmployerLiabilityModel",
              "wrapped": true
            },
            "type": "array",
            "title": "List<EmployerLiabilityModel>"
          },
          "type": "object",
          "title": "Dictionary<String,List`1>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "replaceExisting": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "suppressCalculations": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "SubmitPayRunEmployerLiabilityRequest"
      },
      "type": "object",
      "title": "SubmitPayRunEmployerLiabilityRequest"
    },
    "ODataQueryOptionsOfPayCycle": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<PayCycle>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<PayCycle>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<PayCycle>"
    },
    "AuPayScheduleModel": {
      "properties": {
        "abaDetailsId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "paygAccountBsb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paygAccountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paygAccountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paygReference": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "autoPayConfiguration": {
          "$ref": "#/definitions/AuAutoPayConfigurationModel",
          "description": ""
        },
        "frequency": {
          "description": "",
          "type": "string",
          "enum": [
            "Weekly",
            "Fortnightly",
            "Monthly"
          ],
          "title": "AuPayCycleFrequencyEnum"
        },
        "paySchedulePaymentApprovalSettings": {
          "$ref": "#/definitions/PayScheduleApprovalSettingsModel",
          "description": ""
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeSelectionStrategy": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "PayRunDefault",
            "TimesheetLocations",
            "PayRunDefaultWithTimesheets",
            "ActiveSubcontractors",
            "EmployingEntity"
          ],
          "title": "Nullable<PayRunEmployeeSelectionStrategy>"
        },
        "lastDatePaid": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "lastPayRun": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locations": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "equalMonthlyPayments": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "ignoredPayRunWarnings": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "defaultFinaliseSettings": {
          "$ref": "#/definitions/PayRunFinaliseDefaultSettingsModel",
          "description": ""
        },
        "payScheduleApprovalSettings": {
          "$ref": "#/definitions/PayScheduleApprovalSettingsModel",
          "description": ""
        }
      },
      "xml": {
        "name": "AuPayScheduleModel"
      },
      "type": "object",
      "title": "AuPayScheduleModel"
    },
    "AuAutoPayConfigurationModel": {
      "properties": {
        "enabled": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "paused": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "initialPayPeriodEnding": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "initialDatePaid": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "initialPayRunCreationDateTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "scheduledEndDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "nextScheduledCreationDateTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "finalise": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timesheetImportOption": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "ThisPayPeriod",
            "AllOutstanding",
            "CustomPeriod"
          ],
          "title": "TimesheetImportOption"
        },
        "exportJournals": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "lodgePayRun": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "publishPaySlips": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PublishPaySlipsPreference"
        },
        "publishPaySlipsHour": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "suppressNotifications": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "usersToNotify": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "List<String>"
        },
        "runOnSpecificDayOfMonth": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "adjustRunDateToWorkDay": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "adjustDatePaidToWorkDay": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "specificDayOfMonth": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "weekOfMonth": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "dayOfWeek": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "reportPacksToRun": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        }
      },
      "xml": {
        "name": "AuAutoPayConfigurationModel"
      },
      "type": "object",
      "title": "AuAutoPayConfigurationModel"
    },
    "PayScheduleApprovalSettingsModel": {
      "properties": {
        "requireApproval": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "reminderDay": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "notificationTemplate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "notificationSubject": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "reminderTemplate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "reminderSubject": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "sendReminder": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "approversToNotify": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "List<String>"
        }
      },
      "xml": {
        "name": "PayScheduleApprovalSettingsModel"
      },
      "type": "object",
      "title": "PayScheduleApprovalSettingsModel"
    },
    "PayRunFinaliseDefaultSettingsModel": {
      "properties": {
        "exportJournals": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PayRunFinaliseActionPreference"
        },
        "exportJournalsTimeline": {
          "description": "",
          "type": "string",
          "enum": [
            "Before",
            "After",
            "On"
          ],
          "title": "PayRunFinaliseActionTimeline"
        },
        "exportJournalsDay": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "exportJournalsTimeOfDay": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "lodgePayRun": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PayRunFinaliseActionPreference"
        },
        "lodgePayRunDay": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "lodgePayRunTimeline": {
          "description": "",
          "type": "string",
          "enum": [
            "Before",
            "After",
            "On"
          ],
          "title": "PayRunFinaliseActionTimeline"
        },
        "lodgePayRunTimeOfDay": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "publishPaySlipsDay": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "publishPaySlipsTimeline": {
          "description": "",
          "type": "string",
          "enum": [
            "Before",
            "After",
            "On"
          ],
          "title": "PayRunFinaliseActionTimeline"
        },
        "publishPaySlips": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PayRunFinaliseActionPreference"
        },
        "publishPaySlipsTimeOfDay": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "suppressNotifications": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "submitToPensionSync": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PayRunFinaliseActionPreference"
        },
        "submitToPensionSyncTimeline": {
          "description": "",
          "type": "string",
          "enum": [
            "Before",
            "After",
            "On"
          ],
          "title": "PayRunFinaliseActionTimeline"
        },
        "submitToPensionSyncDay": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "submitToPensionSyncTimeOfDay": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "runReportPacks": {
          "description": "",
          "type": "string",
          "enum": [
            "Manual",
            "Immediate",
            "Scheduled"
          ],
          "title": "PayRunFinaliseActionPreference"
        },
        "runReportPacksTimeline": {
          "description": "",
          "type": "string",
          "enum": [
            "Before",
            "After",
            "On"
          ],
          "title": "PayRunFinaliseActionTimeline"
        },
        "runReportPacksDay": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "runReportPacksTimeOfDay": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "reportPacksToRun": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "superPayment": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "PayRunFinaliseDefaultSettingsModel"
      },
      "type": "object",
      "title": "PayRunFinaliseDefaultSettingsModel"
    },
    "PayScheduleMetaDataModel": {
      "properties": {
        "payRunWarnings": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PayRunWarningModel"
          },
          "xml": {
            "name": "PayRunWarningModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<PayRunWarningModel>"
        },
        "frequencies": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "List<String>"
        },
        "employmentSelectionStrategies": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "List<String>"
        },
        "timesheetImportOptions": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "List<String>"
        },
        "publishPaySlipsPreferences": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "List<String>"
        },
        "reportPacks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ReportPackModel"
          },
          "xml": {
            "name": "ReportPackModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ReportPackModel>"
        },
        "usersToNotify": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "List<String>"
        }
      },
      "xml": {
        "name": "PayScheduleMetaDataModel"
      },
      "type": "object",
      "title": "PayScheduleMetaDataModel"
    },
    "PayRunWarningModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "PayRunWarningModel"
      },
      "type": "object",
      "title": "PayRunWarningModel"
    },
    "ReportPackModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ReportPackModel"
      },
      "type": "object",
      "title": "ReportPackModel"
    },
    "PayScheduleDateForecastResultApiModel": {
      "properties": {
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "nextScheduledFromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "nextScheduledToDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "nextScheduledPaidDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        }
      },
      "xml": {
        "name": "PayScheduleDateForecastResultApiModel"
      },
      "type": "object",
      "title": "PayScheduleDateForecastResultApiModel"
    },
    "ODataQueryOptionsOfQualification": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<Qualification>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<Qualification>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<Qualification>"
    },
    "PayRunAuditReportRequestModel": {
      "properties": {
        "singleEmployeeWorksheet": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showAllSummaryDetails": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showAllEmployeeDetails": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "PayRunAuditReportRequestModel"
      },
      "type": "object",
      "title": "PayRunAuditReportRequestModel"
    },
    "TasksReportRequestModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "All",
            "Completed",
            "NotCompleted"
          ],
          "title": "TasksReportStatusEnum"
        }
      },
      "xml": {
        "name": "TasksReportRequestModel"
      },
      "type": "object",
      "title": "TasksReportRequestModel"
    },
    "TasksReportExportModel": {
      "properties": {
        "payRunTaskId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taskDescription": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "createdBy": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "createdDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "dueDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "completed": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "notes": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TasksReportNoteModel"
          },
          "xml": {
            "name": "TasksReportNoteModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<TasksReportNoteModel>"
        },
        "completedBy": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "completedDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "TasksReportExportModel"
      },
      "type": "object",
      "title": "TasksReportExportModel"
    },
    "TasksReportNoteModel": {
      "properties": {
        "username": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isVisibleToManager": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "TasksReportNoteModel"
      },
      "type": "object",
      "title": "TasksReportNoteModel"
    },
    "LeaveBalancesReportRequestModel": {
      "properties": {
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "leaveTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "groupBy": {
          "description": "",
          "type": "string",
          "enum": [
            "AccrualLocation",
            "DefaultLocation"
          ],
          "title": "LeaveReportDisplayEnum"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "asAtDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        }
      },
      "xml": {
        "name": "LeaveBalancesReportRequestModel"
      },
      "type": "object",
      "title": "LeaveBalancesReportRequestModel"
    },
    "AuLeaveBalancesExportModel": {
      "properties": {
        "accruedAmountInDays": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leaveValue": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "loadingValue": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leavePlusLoading": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accruedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "accruedAmountInHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Hours",
            "Days",
            "Weeks"
          ],
          "title": "LeaveUnitTypeEnum"
        }
      },
      "xml": {
        "name": "AuLeaveBalancesExportModel"
      },
      "type": "object",
      "title": "AuLeaveBalancesExportModel"
    },
    "LeaveBalancesReportExportRequest": {
      "properties": {
        "filterType": {
          "description": "",
          "type": "string",
          "enum": [
            "DateRange",
            "PayRun",
            "SuperBatch"
          ],
          "title": "DateTypeEnum"
        },
        "asAtDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "groupBy": {
          "description": "",
          "type": "string",
          "enum": [
            "AccrualLocation",
            "DefaultLocation"
          ],
          "title": "LeaveReportDisplayEnum"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "leaveTypeIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "hideLeaveValues": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "LeaveBalancesReportExportRequest"
      },
      "type": "object",
      "title": "LeaveBalancesReportExportRequest"
    },
    "GrossToNetReportRequest": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "payCategoryIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "groupBy": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "filterType": {
          "description": "",
          "type": "string",
          "enum": [
            "DateRange",
            "PayRun",
            "SuperBatch"
          ],
          "title": "Nullable<DateTypeEnum>"
        },
        "includeExpenses": {
          "description": "",
          "type": "boolean",
          "title": "Nullable<Boolean>"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "includePostTaxDeductions": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "GrossToNetReportRequest"
      },
      "type": "object",
      "title": "GrossToNetReportRequest"
    },
    "AuGrossToNetResponseModel": {
      "properties": {
        "payg": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "sfss": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "help": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "netEarnings": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "sgc": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "nonRescEmployerContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalGrossPlusSuper": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "primaryLocationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "primaryLocation": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "totalHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "grossEarnings": {
          "description": "",
          "additionalProperties": {
            "type": "number",
            "format": "double",
            "title": "Decimal"
          },
          "type": "object",
          "title": "Dictionary<String,Decimal>"
        },
        "totalGrossEarnings": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalTaxExemptEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "preTaxDeductions": {
          "description": "",
          "additionalProperties": {
            "type": "number",
            "format": "double",
            "title": "Decimal"
          },
          "type": "object",
          "title": "Dictionary<String,Decimal>"
        },
        "totalPreTaxDeductions": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxableEarnings": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "postTaxDeductions": {
          "description": "",
          "additionalProperties": {
            "type": "number",
            "format": "double",
            "title": "Decimal"
          },
          "type": "object",
          "title": "Dictionary<String,Decimal>"
        },
        "totalPostTaxDeductions": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "expenses": {
          "description": "",
          "additionalProperties": {
            "type": "number",
            "format": "double",
            "title": "Decimal"
          },
          "type": "object",
          "title": "Dictionary<String,Decimal>"
        },
        "totalExpenses": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "bankPayments": {
          "description": "",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "AuGrossToNetResponseModel"
      },
      "type": "object",
      "title": "AuGrossToNetResponseModel"
    },
    "EmployeeDetailsReportField": {
      "properties": {
        "value": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "displayText": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeDetailsReportField"
      },
      "type": "object",
      "title": "EmployeeDetailsReportField"
    },
    "PayRunInclusionsReportRequestModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "All",
            "Active",
            "Expired"
          ],
          "title": "PayRunInclusionsStatus"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "PayRunInclusionsReportRequestModel"
      },
      "type": "object",
      "title": "PayRunInclusionsReportRequestModel"
    },
    "AuPayRunInclusionExportModel": {
      "properties": {
        "superContributionType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superRate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxCode": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxRate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "primaryLocation": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "deductionCategory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expenseCategory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employerLiabilityCategory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxAdjustmentType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "startDate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "expiry": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "amountType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paid": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "preservedEarnings": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "rate": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "total": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuPayRunInclusionExportModel"
      },
      "type": "object",
      "title": "AuPayRunInclusionExportModel"
    },
    "CostingReportRequestModel": {
      "properties": {
        "showZeroPayCategories": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "includePostTaxDeductions": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "CostingReportRequestModel"
      },
      "type": "object",
      "title": "CostingReportRequestModel"
    },
    "AuCostingReportApiModel": {
      "properties": {
        "superContribution": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategories": {
          "description": "",
          "additionalProperties": {
            "type": "number",
            "format": "double",
            "title": "Decimal"
          },
          "type": "object",
          "title": "IDictionary<String,Decimal>"
        }
      },
      "xml": {
        "name": "AuCostingReportApiModel"
      },
      "type": "object",
      "title": "AuCostingReportApiModel"
    },
    "PaymentHistoryReportRequestModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "PaymentHistoryReportRequestModel"
      },
      "type": "object",
      "title": "PaymentHistoryReportRequestModel"
    },
    "AuPaymentHistoryModel": {
      "properties": {
        "bsb": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "datePaid": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accountType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "taxableEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "netEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalAllowances": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "totalDeductions": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "AuPaymentHistoryModel"
      },
      "type": "object",
      "title": "AuPaymentHistoryModel"
    },
    "DocumentAcknowledgementsReportExportModel": {
      "properties": {
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "documentName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "lastNotification": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "DocumentAcknowledgementsReportExportModel"
      },
      "type": "object",
      "title": "DocumentAcknowledgementsReportExportModel"
    },
    "TimesheetReportRequestModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "includeCosts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "statuses": {
          "description": "",
          "items": {
            "type": "string",
            "enum": [
              "Missing",
              "Submitted",
              "Approved",
              "Rejected",
              "Processed"
            ],
            "title": "TimesheetLineStatusType"
          },
          "xml": {
            "name": "TimesheetLineStatusType",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetLineStatusType>"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "includePostTaxDeductions": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "TimesheetReportRequestModel"
      },
      "type": "object",
      "title": "TimesheetReportRequestModel"
    },
    "AuTimesheetExportModel": {
      "properties": {
        "super": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "payg": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "classification": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "start": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "startTime": {
          "description": "",
          "type": "string",
          "title": "TimeSpan"
        },
        "end": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "title": "TimeSpan"
        },
        "actualStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "actualStartTime": {
          "description": "",
          "type": "string",
          "title": "TimeSpan"
        },
        "actualEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "actualEndTime": {
          "description": "",
          "type": "string",
          "title": "TimeSpan"
        },
        "timeVariance": {
          "description": "",
          "type": "string",
          "title": "TimeSpan"
        },
        "formattedTimeVariance": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "durationExcludingBreaks": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "TimeSpan"
        },
        "duration": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "TimeSpan"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "shiftConditions": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "numberOfBreaks": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "breakDuration": {
          "description": "",
          "type": "string",
          "title": "TimeSpan"
        },
        "comments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "consolidatedWithTimesheetLineId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "reviewedBy": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "gross": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "netEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "employerLiabilities": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "totalCost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "totalCostVariance": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "dateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "dateReviewed": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "shiftConditionShortCodes": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetBreakModel"
          },
          "xml": {
            "name": "TimesheetBreakModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetBreakModel>"
        }
      },
      "xml": {
        "name": "AuTimesheetExportModel"
      },
      "type": "object",
      "title": "AuTimesheetExportModel"
    },
    "AuRosterTimesheetComparisonReportRequestModel": {
      "properties": {
        "employmentTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "includeCosts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timesheetStatuses": {
          "description": "",
          "items": {
            "type": "string",
            "enum": [
              "Missing",
              "Submitted",
              "Approved",
              "Rejected",
              "Processed"
            ],
            "title": "TimesheetLineStatusType"
          },
          "xml": {
            "name": "TimesheetLineStatusType",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetLineStatusType>"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "rosterLocationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "timesheetLocationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "rosterStatuses": {
          "description": "",
          "items": {
            "type": "string",
            "enum": [
              "All",
              "Published",
              "Unpublished",
              "Accepted"
            ],
            "title": "RosterShiftStatus"
          },
          "xml": {
            "name": "RosterShiftStatus",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<RosterShiftStatus>"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "includePostTaxDeductions": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "AuRosterTimesheetComparisonReportRequestModel"
      },
      "type": "object",
      "title": "AuRosterTimesheetComparisonReportRequestModel"
    },
    "AuRosterTimesheetComparisonReportExportModel": {
      "properties": {
        "employmentType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeFirstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeSurname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeDefaultLocation": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payScheduleName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rosteredId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "rosteredStatus": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rosteredLocation": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rosteredWorkType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rosteredStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "rosteredStartTime": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "rosteredEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "rosteredEndTime": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "rosteredDuration": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "rosteredBreaks": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "rosteredCost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "timesheetId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "timesheetStatus": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "timesheetLocation": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "timesheetWorkType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "timesheetStart": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "timesheetStartTime": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "timesheetEnd": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "timesheetEndTime": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "timesheetDuration": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "timesheetBreaks": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "timesheetUnits": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "timesheetUnitType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "timesheetCost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "timeVariance": {
          "description": "",
          "type": "string",
          "title": "TimeSpan"
        },
        "costVariance": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "AuRosterTimesheetComparisonReportExportModel"
      },
      "type": "object",
      "title": "AuRosterTimesheetComparisonReportExportModel"
    },
    "PayCategoriesReportRequestModel": {
      "properties": {
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "groupByEarningsLocation": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "PayCategoriesReportRequestModel"
      },
      "type": "object",
      "title": "PayCategoriesReportRequestModel"
    },
    "AuPayCategoriesModel": {
      "properties": {
        "superAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "payCategory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payRun": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "datePaid": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "AuPayCategoriesModel"
      },
      "type": "object",
      "title": "AuPayCategoriesModel"
    },
    "PaySlipReportRequestModel": {
      "properties": {
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "PaySlipReportRequestModel"
      },
      "type": "object",
      "title": "PaySlipReportRequestModel"
    },
    "DeductionsReportRequestModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "deductionCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "disableRollupReporting": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "includePostTaxDeductions": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "DeductionsReportRequestModel"
      },
      "type": "object",
      "title": "DeductionsReportRequestModel"
    },
    "DeductionsReportExportModel": {
      "properties": {
        "payRun": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "datePaid": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amounts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/DeductionsReportDeductionAmountModel"
          },
          "xml": {
            "name": "DeductionsReportDeductionAmountModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<DeductionsReportDeductionAmountModel>"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "DeductionsReportExportModel"
      },
      "type": "object",
      "title": "DeductionsReportExportModel"
    },
    "DeductionsReportDeductionAmountModel": {
      "properties": {
        "deductionCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "deductionCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "DeductionsReportDeductionAmountModel"
      },
      "type": "object",
      "title": "DeductionsReportDeductionAmountModel"
    },
    "SuperContributionsReportRequestModel": {
      "properties": {
        "superContributionsReportExportType": {
          "description": "",
          "type": "string",
          "enum": [
            "AccrualsExcel",
            "PaymentsExcel"
          ],
          "title": "SuperContributionsReportExportTypeEnum"
        },
        "filterType": {
          "description": "",
          "type": "string",
          "enum": [
            "DateRange",
            "PayRun",
            "SuperBatch"
          ],
          "title": "DateTypeEnum"
        },
        "superBatchId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "contributionType": {
          "description": "",
          "type": "string",
          "enum": [
            "SuperGuarantee",
            "SalarySacrifice",
            "MemberVoluntary",
            "EmployerContribution",
            "NonRescEmployerContribution"
          ],
          "title": "Nullable<SuperContributionType>"
        },
        "groupBy": {
          "description": "",
          "type": "string",
          "enum": [
            "Employee",
            "SuperFund"
          ],
          "title": "ContributionsServiceType"
        },
        "fundPerPage": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "includePostTaxDeductions": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "SuperContributionsReportRequestModel"
      },
      "type": "object",
      "title": "SuperContributionsReportRequestModel"
    },
    "PaygReportRequestModel": {
      "properties": {
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "PaygReportRequestModel"
      },
      "type": "object",
      "title": "PaygReportRequestModel"
    },
    "PaygReportExportModel": {
      "properties": {
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "month": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "grossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxExemptEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "preTaxDeductions": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxableEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "payg": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "PaygReportExportModel"
      },
      "type": "object",
      "title": "PaygReportExportModel"
    },
    "DetailedActivityReportRequestModel": {
      "properties": {
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "groupBy": {
          "description": "",
          "type": "string",
          "enum": [
            "EarningsLocation",
            "RollUpLocation",
            "DefaultLocation"
          ],
          "title": "EarningsReportDisplayEnum"
        },
        "filterType": {
          "description": "",
          "type": "string",
          "enum": [
            "DateRange",
            "PayRun",
            "SuperBatch"
          ],
          "title": "DateTypeEnum"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationsIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "employeeIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "includePostTaxDeductions": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "showLocationTotalsOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "includeEmployeePayRunBreakdown": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "DetailedActivityReportRequestModel"
      },
      "type": "object",
      "title": "DetailedActivityReportRequestModel"
    },
    "ReportRequestWithPayScheduleModel": {
      "properties": {
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "includePostTaxDeductions": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "ReportRequestWithPayScheduleModel"
      },
      "type": "object",
      "title": "ReportRequestWithPayScheduleModel"
    },
    "AuDetailedActivityReportExportModel": {
      "properties": {
        "payg": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "sfss": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "help": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "super": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "grossPlusSuper": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "hours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "grossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "preTaxDeductions": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "postTaxDeductions": {
          "description": "",
          "type": "object",
          "title": "Object"
        },
        "taxExemptEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxableEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "netEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerLiabilities": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "AuDetailedActivityReportExportModel"
      },
      "type": "object",
      "title": "AuDetailedActivityReportExportModel"
    },
    "ReportLeaveLiabilityRequestModel": {
      "properties": {
        "jobId": {
          "description": "",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid",
          "title": "Nullable<Guid>"
        },
        "filterType": {
          "description": "",
          "type": "string",
          "enum": [
            "DateRange",
            "PayRun",
            "SuperBatch"
          ],
          "title": "DateTypeEnum"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "leaveTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "includeApprovedLeave": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "asAtDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payRunId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "leaveTypeIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        },
        "groupBy": {
          "description": "",
          "type": "string",
          "enum": [
            "AccrualLocation",
            "DefaultLocation"
          ],
          "title": "Nullable<LeaveReportDisplayEnum>"
        }
      },
      "xml": {
        "name": "ReportLeaveLiabilityRequestModel"
      },
      "type": "object",
      "title": "ReportLeaveLiabilityRequestModel"
    },
    "AuLeaveLiabilityExportModel": {
      "properties": {
        "leaveLoadingDollarValue": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "startDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "lastPaidDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "lastPayPeriodEnding": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "calculatedWeeks": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveCategoryName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "approvedLeaveAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "accruedAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leaveValue": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "approvedLeaveAmountInHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Hours",
            "Days",
            "Weeks"
          ],
          "title": "LeaveUnitTypeEnum"
        },
        "accruedAmountInHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "AuLeaveLiabilityExportModel"
      },
      "type": "object",
      "title": "AuLeaveLiabilityExportModel"
    },
    "ReportLeaveLiabilityPreparationResponse": {
      "properties": {
        "jobId": {
          "description": "",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid",
          "title": "Guid"
        },
        "status": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Queued",
            "Running",
            "Complete",
            "Failed",
            "Cancelled"
          ],
          "title": "LongRunningJobStatus"
        }
      },
      "xml": {
        "name": "ReportLeaveLiabilityPreparationResponse"
      },
      "type": "object",
      "title": "ReportLeaveLiabilityPreparationResponse"
    },
    "EmployeeDetailsAuditReportRequestModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "section": {
          "description": "",
          "type": "string",
          "enum": [
            "EmployeeDetails",
            "EmergencyContacts",
            "TaxFileDeclaration",
            "PayRunDefaults",
            "BankAccounts",
            "SuperFunds",
            "Locations",
            "WorkTypes",
            "Qualifications",
            "RecurringTransactions",
            "PayRates",
            "LeaveAllowances",
            "AdditionalEarningsLines",
            "Notes",
            "OpeningBalances",
            "EmployeePortalAccess",
            "KioskAccess",
            "Documents",
            "Unavailabilities",
            "NationalInsuranceRecord",
            "PensionSettings",
            "KiwiSaver",
            "TaxCodeDeclaration",
            "NationalRegistrationIdentityRecord",
            "LeavePaySettings",
            "EmployeeStatutoryDetails",
            "EmployeeScheduledUpdates",
            "EarningsCertificate",
            "PreviousEmployer",
            "JobKeeper",
            "JobMaker",
            "SelfManagedSuperFunds",
            "CisSubcontractor"
          ],
          "title": "Nullable<EmployeeAuditSection>"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "includePostTaxDeductions": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "EmployeeDetailsAuditReportRequestModel"
      },
      "type": "object",
      "title": "EmployeeDetailsAuditReportRequestModel"
    },
    "EmployeeDetailsAuditReportApiModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "timestampUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "timestampLocal": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "section": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fieldName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "oldValue": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "newValue": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "userName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "channel": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeDetailsAuditReportApiModel"
      },
      "type": "object",
      "title": "EmployeeDetailsAuditReportApiModel"
    },
    "LeaveHistoryApiReportModel": {
      "properties": {
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "LeaveHistoryApiReportModel"
      },
      "type": "object",
      "title": "LeaveHistoryApiReportModel"
    },
    "LeaveHistoryReportGroupModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeExternalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveCategoryType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "openingBalance": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "closingBalance": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leaveHistoryDetails": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LeaveHistoryReportDetailModel"
          },
          "xml": {
            "name": "LeaveHistoryReportDetailModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<LeaveHistoryReportDetailModel>"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Hours",
            "Days",
            "Weeks"
          ],
          "title": "LeaveUnitTypeEnum"
        }
      },
      "xml": {
        "name": "LeaveHistoryReportGroupModel"
      },
      "type": "object",
      "title": "LeaveHistoryReportGroupModel"
    },
    "LeaveHistoryReportDetailModel": {
      "properties": {
        "payPeriod": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "leaveAccrued": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "leaveTaken": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "unitType": {
          "description": "",
          "type": "string",
          "enum": [
            "Hours",
            "Days",
            "Weeks"
          ],
          "title": "LeaveUnitTypeEnum"
        }
      },
      "xml": {
        "name": "LeaveHistoryReportDetailModel"
      },
      "type": "object",
      "title": "LeaveHistoryReportDetailModel"
    },
    "EmployeeDetailsReportRequestModel": {
      "properties": {
        "selectedColumns": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "List<String>"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "includeActive": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "includeInactive": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "EmployeeDetailsReportRequestModel"
      },
      "type": "object",
      "title": "EmployeeDetailsReportRequestModel"
    },
    "PayrollTaxReportRequestModel": {
      "properties": {
        "groupBy": {
          "description": "",
          "type": "string",
          "enum": [
            "EarningsLocation",
            "DefaultLocation",
            "EarningsRollUpLocation"
          ],
          "title": "PayrollTaxGroupByEnum"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "PayrollTaxReportRequestModel"
      },
      "type": "object",
      "title": "PayrollTaxReportRequestModel"
    },
    "PayrollTaxReportExportModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "type": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "state": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeePayrollTaxExempt": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "payCategoryPayrollTaxExempt": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "terminationPayment": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "allowance": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "etp": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "genuineRedundancy": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "lumpSumD": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "PayrollTaxReportExportModel"
      },
      "type": "object",
      "title": "PayrollTaxReportExportModel"
    },
    "ActivityReportExportModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "totalHours": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "grossEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "taxableEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "paygWithholding": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superContributions": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employerContributions": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "netEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "ActivityReportExportModel"
      },
      "type": "object",
      "title": "ActivityReportExportModel"
    },
    "OrdinaryTimeEarningsReportRequestModel": {
      "properties": {
        "payScheduleId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "financialYearEnding": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "OrdinaryTimeEarningsReportRequestModel"
      },
      "type": "object",
      "title": "OrdinaryTimeEarningsReportRequestModel"
    },
    "AuOrdinaryTimeEarningsApiModel": {
      "properties": {
        "super": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "superPercentageOfEarnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payRun": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategory": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payPeriodStarting": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "payPeriodEnding": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "earnings": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "AuOrdinaryTimeEarningsApiModel"
      },
      "type": "object",
      "title": "AuOrdinaryTimeEarningsApiModel"
    },
    "ReportPayRunVarianceRequestModel": {
      "properties": {
        "payRunId1": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payRunId2": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "payPeriodFrom1": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "payPeriodTo1": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "payPeriodFrom2": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "payPeriodTo2": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "comparisonType": {
          "description": "",
          "type": "string",
          "enum": [
            "PayRuns",
            "PayPeriods"
          ],
          "title": "PayRunComparisonType"
        },
        "highlightVariancePercentage": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "onlyShowVariances": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "ReportPayRunVarianceRequestModel"
      },
      "type": "object",
      "title": "ReportPayRunVarianceRequestModel"
    },
    "SuperAccrualExportModel": {
      "properties": {
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accrualDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "accrualType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "accrualAmount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        },
        "batchId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "status": {
          "description": "",
          "type": "string",
          "enum": [
            "New",
            "SubmittedForProcessing",
            "SubmissionFailed",
            "SubmissionProcessed",
            "SubmissionQueuedForPayment",
            "SubmissionPaid",
            "AwaitingPayment",
            "AwaitingClearance",
            "Reconciled",
            "SentToFund",
            "SentToFundWithResponse",
            "SentToFundWithRefund",
            "Cancelled",
            "Submitted",
            "Refunded",
            "Cancelling",
            "Paid",
            "PaymentFailed"
          ],
          "title": "Nullable<SuperInterchangeStatus>"
        }
      },
      "xml": {
        "name": "SuperAccrualExportModel"
      },
      "type": "object",
      "title": "SuperAccrualExportModel"
    },
    "SuperContributionsReportExportModel": {
      "properties": {
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superFundName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "superFundNumber": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "paymentType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "amount": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Decimal"
        }
      },
      "xml": {
        "name": "SuperContributionsReportExportModel"
      },
      "type": "object",
      "title": "SuperContributionsReportExportModel"
    },
    "BirthdayReportExportModel": {
      "properties": {
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dateOfBirth": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "firstName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "surname": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employmentStatus": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "age": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "BirthdayReportExportModel"
      },
      "type": "object",
      "title": "BirthdayReportExportModel"
    },
    "ShiftSwappingReportRequestModel": {
      "properties": {
        "fromEmployeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "toEmployeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "includeCosts": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "statuses": {
          "description": "",
          "items": {
            "type": "string",
            "enum": [
              "Created",
              "Cancelled",
              "Accepted",
              "Declined",
              "AwaitingManagerApproval",
              "ApprovedByManager",
              "RejectedByManager"
            ],
            "title": "RosterShiftSwapStatusEnum"
          },
          "xml": {
            "name": "RosterShiftSwapStatusEnum",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<RosterShiftSwapStatusEnum>"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employingEntityId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "ShiftSwappingReportRequestModel"
      },
      "type": "object",
      "title": "ShiftSwappingReportRequestModel"
    },
    "ShiftSwappingReportExportModel": {
      "properties": {
        "fromEmployeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromEmployeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "toEmployeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "toEmployeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "start": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "startTime": {
          "description": "",
          "type": "string",
          "title": "TimeSpan"
        },
        "end": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "title": "TimeSpan"
        },
        "locationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "location": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workTypeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "oldCost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "newCost": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        }
      },
      "xml": {
        "name": "ShiftSwappingReportExportModel"
      },
      "type": "object",
      "title": "ShiftSwappingReportExportModel"
    },
    "ODataQueryOptionsOfReportingDimensionValue": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<ReportingDimensionValue>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<ReportingDimensionValue>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<ReportingDimensionValue>"
    },
    "ReportingDimensionValueApiModel": {
      "properties": {
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "allEmployees": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "specificEmployees": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "filterCombinationStrategy": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "filters": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ReportingDimensionValueFilterApiModel"
          },
          "xml": {
            "name": "ReportingDimensionValueFilterApiModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<ReportingDimensionValueFilterApiModel>"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "reportingDimensionId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "ReportingDimensionValueApiModel"
      },
      "type": "object",
      "title": "ReportingDimensionValueApiModel"
    },
    "ReportingDimensionValueFilterApiModel": {
      "properties": {
        "filterType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "value": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ReportingDimensionValueFilterApiModel"
      },
      "type": "object",
      "title": "ReportingDimensionValueFilterApiModel"
    },
    "ODataQueryOptionsOfReportingDimension": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<ReportingDimension>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<ReportingDimension>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<ReportingDimension>"
    },
    "ReportingDimensionApiModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ReportingDimensionApiModel"
      },
      "type": "object",
      "title": "ReportingDimensionApiModel"
    },
    "ResellerModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "ResellerModel"
      },
      "type": "object",
      "title": "ResellerModel"
    },
    "AuRosterShiftEditModel": {
      "properties": {
        "classificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "classificationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "qualifications": {
          "description": "",
          "items": {
            "$ref": "#/definitions/QualificationModel"
          },
          "xml": {
            "name": "QualificationModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<QualificationModel>"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/RosterShiftBreakApiModel"
          },
          "xml": {
            "name": "RosterShiftBreakApiModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<RosterShiftBreakApiModel>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "employeeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "locationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "role": {
          "$ref": "#/definitions/RosterShiftRole",
          "description": ""
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "notes": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuRosterShiftEditModel"
      },
      "type": "object",
      "title": "AuRosterShiftEditModel"
    },
    "AuSmsfElectronicServiceAddressModel": {
      "properties": {
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AuSmsfElectronicServiceAddressModel"
      },
      "type": "object",
      "title": "AuSmsfElectronicServiceAddressModel"
    },
    "AuAddShiftModel": {
      "properties": {
        "locationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "classificationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "workTypeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "shiftConditionIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "note": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "recordedStartTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "recordedEndTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ShiftBreakModel"
          },
          "xml": {
            "name": "ShiftBreakModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<ShiftBreakModel>"
        },
        "dimensionValueIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "latitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "longitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "kioskId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "ipAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "image": {
          "description": "",
          "type": "string",
          "format": "byte",
          "title": "Byte[]"
        },
        "isAdminInitiated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "recordedTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "utcOffset": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "noteVisibility": {
          "description": "",
          "type": "string",
          "enum": [
            "Hidden",
            "Visible"
          ],
          "title": "Nullable<TimeAttendanceShiftNoteVisibility>"
        }
      },
      "xml": {
        "name": "AuAddShiftModel"
      },
      "type": "object",
      "title": "AuAddShiftModel"
    },
    "ShiftBreakModel": {
      "properties": {
        "start": {
          "$ref": "#/definitions/StartBreakModel",
          "description": ""
        },
        "end": {
          "$ref": "#/definitions/EndBreakModel",
          "description": ""
        },
        "isPaidBreak": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "latitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "longitude": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "kioskId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "ipAddress": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "image": {
          "description": "",
          "type": "string",
          "format": "byte",
          "title": "Byte[]"
        },
        "isAdminInitiated": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "recordedTimeUtc": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "utcOffset": {
          "description": "",
          "type": "string",
          "title": "Nullable<TimeSpan>"
        },
        "noteVisibility": {
          "description": "",
          "type": "string",
          "enum": [
            "Hidden",
            "Visible"
          ],
          "title": "Nullable<TimeAttendanceShiftNoteVisibility>"
        }
      },
      "xml": {
        "name": "ShiftBreakModel"
      },
      "type": "object",
      "title": "ShiftBreakModel"
    },
    "AuTimesheetLineModel": {
      "properties": {
        "classificationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "classification": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationIsDeleted": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "startTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endTime": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "units": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "workTypeId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "locationId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "comments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "breaks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetBreakModelv3"
          },
          "xml": {
            "name": "TimesheetBreakModelv3",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<TimesheetBreakModelv3>"
        },
        "status": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "rate": {
          "description": "",
          "type": "number",
          "format": "double",
          "title": "Nullable<Decimal>"
        },
        "leaveCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "payCategoryId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "externalId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "source": {
          "description": "",
          "type": "string",
          "enum": [
            "None",
            "Saasu",
            "Xero",
            "MYOB",
            "Deputy",
            "EmployeeTimePunch",
            "ClickSuper",
            "IntegratedTimesheets",
            "FileImport",
            "FileExport",
            "QuickBooks",
            "Harmony",
            "AwardStore",
            "Attache",
            "IntegratedRostering",
            "ReckonAccounts",
            "API",
            "MicroPower",
            "RosterLive",
            "NetSuite",
            "Kounta",
            "TimeAndAttendanceKiosk",
            "DetailedFileExport",
            "JonasPremier",
            "WageEasy",
            "Maestrano",
            "WorkZone",
            "EmployeePortal",
            "RosterTemplate",
            "Onboarding",
            "Admin",
            "WorkZoneClockOnOff",
            "NetSuiteOneWorld",
            "Sage50",
            "PensionSync",
            "FinancialsOffice",
            "ProntoXI",
            "PayRunDefault",
            "StandardWorkDay",
            "Beam",
            "PayRunAutomation",
            "BureauDashboard",
            "Wiise",
            "QBOMigrationTool",
            "AbridgedFileImport",
            "QBOForcedMigration",
            "HmrcDpsUpdate",
            "HmrcDpsStudentLoan",
            "HmrcDpsPostGradLoan",
            "Sage50FileImporter",
            "FPSFileImporter",
            "OAuth",
            "FreshBooks",
            "StarFileImporter",
            "ActiveCampaign",
            "SummaryAndDetailsExport",
            "Telleroo",
            "EmployeeAdvancedHoursUpload",
            "BusinessCentral",
            "Paytron",
            "AccessFinancials",
            "Comma",
            "Zoho",
            "FlatFileEmployeeImporter",
            "Twinfield",
            "SageAccounting",
            "Square",
            "Quickfile",
            "Tide",
            "TideSso",
            "FreeAgent",
            "Akahu",
            "InstaPay",
            "Zepto",
            "Slack",
            "Caxton",
            "QuickbooksStandalonePayroll",
            "ImportEmployeeSelfSetup",
            "XeroIdentityPayrollSignUp",
            "XeroIdentityHrSignUp",
            "SageIntacct",
            "InstaPayDaily",
            "Salesforce",
            "AutomatedPublicHolidayNotWorked",
            "EmployeePayRatesUpload",
            "Zapier",
            "StapledSuperFund",
            "Swag"
          ],
          "title": "ExternalService"
        },
        "attachmentId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "shiftConditionIds": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "type": "array",
          "title": "IList<String>"
        },
        "workType": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "fullyQualifiedLocationName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "shiftConditions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TimesheetShiftConditionModelv3"
          },
          "xml": {
            "name": "TimesheetShiftConditionModelv3",
            "wrapped": true
          },
          "type": "array",
          "title": "List<TimesheetShiftConditionModelv3>"
        },
        "hiddenComments": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "attachment": {
          "$ref": "#/definitions/Attachment",
          "description": ""
        },
        "submittedByUser": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "dimensionValueIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "IList<Int32>"
        }
      },
      "xml": {
        "name": "AuTimesheetLineModel"
      },
      "type": "object",
      "title": "AuTimesheetLineModel"
    },
    "AuSubmitTimesheetsRequest": {
      "properties": {
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "replaceExisting": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "approved": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "employeeIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "locationIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "workTypeIdType": {
          "description": "",
          "type": "string",
          "enum": [
            "Standard",
            "External"
          ],
          "title": "IdType"
        },
        "returnResponse": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "timesheets": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/AuTimesheetLineModel"
            },
            "xml": {
              "name": "AuTimesheetLineModel",
              "wrapped": true
            },
            "type": "array",
            "title": "IList<AuTimesheetLineModel>"
          },
          "type": "object",
          "title": "IDictionary<String,IList`1>"
        }
      },
      "xml": {
        "name": "AuSubmitTimesheetsRequest"
      },
      "type": "object",
      "title": "AuSubmitTimesheetsRequest"
    },
    "AuSubmitTimesheetsResponse": {
      "properties": {
        "timesheets": {
          "description": "",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/AuIndividualTimesheetLineModel"
            },
            "xml": {
              "name": "AuIndividualTimesheetLineModel",
              "wrapped": true
            },
            "type": "array",
            "title": "IList<AuIndividualTimesheetLineModel>"
          },
          "type": "object",
          "title": "IDictionary<String,IList`1>"
        }
      },
      "xml": {
        "name": "AuSubmitTimesheetsResponse"
      },
      "type": "object",
      "title": "AuSubmitTimesheetsResponse"
    },
    "UnavailabilityFilter": {
      "properties": {
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "defaultLocationId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "UnavailabilityFilter"
      },
      "type": "object",
      "title": "UnavailabilityFilter"
    },
    "UnavailabilityModel": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "reason": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "recurring": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "recurringDay": {
          "description": "",
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "title": "Nullable<DayOfWeek>"
        },
        "recurringDays": {
          "description": "",
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "title": "Nullable<DayOfWeekFlagsEnum>"
        },
        "recurringDaysCsv": {
          "description": "",
          "readOnly": true,
          "type": "string",
          "title": "String"
        },
        "isAllDay": {
          "description": "",
          "readOnly": true,
          "type": "boolean",
          "title": "Boolean"
        },
        "viewOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "UnavailabilityModel"
      },
      "type": "object",
      "title": "UnavailabilityModel"
    },
    "UnavailabilitySaveModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "fromDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "DateTime"
        },
        "toDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "endDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "title": "Nullable<DateTime>"
        },
        "reason": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "recurring": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "recurringDay": {
          "description": "",
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "title": "Nullable<DayOfWeek>"
        }
      },
      "xml": {
        "name": "UnavailabilitySaveModel"
      },
      "type": "object",
      "title": "UnavailabilitySaveModel"
    },
    "UserAccountMetadataOmopModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "businesses": {
          "description": "",
          "items": {
            "$ref": "#/definitions/BusinessMetadataOmopModel"
          },
          "xml": {
            "name": "BusinessMetadataOmopModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<BusinessMetadataOmopModel>"
        },
        "employees": {
          "description": "",
          "items": {
            "$ref": "#/definitions/EmployeeMetadataOmopModel"
          },
          "xml": {
            "name": "EmployeeMetadataOmopModel",
            "wrapped": true
          },
          "type": "array",
          "title": "IList<EmployeeMetadataOmopModel>"
        }
      },
      "xml": {
        "name": "UserAccountMetadataOmopModel"
      },
      "type": "object",
      "title": "UserAccountMetadataOmopModel"
    },
    "BusinessMetadataOmopModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "mdmId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "BusinessMetadataOmopModel"
      },
      "type": "object",
      "title": "BusinessMetadataOmopModel"
    },
    "EmployeeMetadataOmopModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "mdmId": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "businessId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "businessMdmId": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "EmployeeMetadataOmopModel"
      },
      "type": "object",
      "title": "EmployeeMetadataOmopModel"
    },
    "AuUserAccountMetadata": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "employees": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AvailableEmployeeModel"
          },
          "xml": {
            "name": "AvailableEmployeeModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AvailableEmployeeModel>"
        },
        "businesses": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AuAvailableBusinessModel"
          },
          "xml": {
            "name": "AuAvailableBusinessModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AuAvailableBusinessModel>"
        }
      },
      "xml": {
        "name": "AuUserAccountMetadata"
      },
      "type": "object",
      "title": "AuUserAccountMetadata"
    },
    "UserAccountMetadataLite": {
      "properties": {
        "userId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "username": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "relations": {
          "description": "",
          "items": {
            "$ref": "#/definitions/MetadataLite"
          },
          "xml": {
            "name": "MetadataLite",
            "wrapped": true
          },
          "type": "array",
          "title": "List<MetadataLite>"
        }
      },
      "xml": {
        "name": "UserAccountMetadataLite"
      },
      "type": "object",
      "title": "UserAccountMetadataLite"
    },
    "MetadataLite": {
      "properties": {
        "employeeId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        },
        "businessId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "brandId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "partnerId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Nullable<Int32>"
        }
      },
      "xml": {
        "name": "MetadataLite"
      },
      "type": "object",
      "title": "MetadataLite"
    },
    "AuUserAccountPartnerMetadata": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "partnerIds": {
          "description": "",
          "items": {
            "type": "integer",
            "format": "int32",
            "title": "Int32"
          },
          "type": "array",
          "title": "List<Int32>"
        }
      },
      "xml": {
        "name": "AuUserAccountPartnerMetadata"
      },
      "type": "object",
      "title": "AuUserAccountPartnerMetadata"
    },
    "RelatedBusinessesModel": {
      "properties": {
        "relatedBusinesses": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AbbreviatedBusinessModel"
          },
          "xml": {
            "name": "AbbreviatedBusinessModel",
            "wrapped": true
          },
          "type": "array",
          "title": "List<AbbreviatedBusinessModel>"
        },
        "userId": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        }
      },
      "xml": {
        "name": "RelatedBusinessesModel"
      },
      "type": "object",
      "title": "RelatedBusinessesModel"
    },
    "AbbreviatedBusinessModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "AbbreviatedBusinessModel"
      },
      "type": "object",
      "title": "AbbreviatedBusinessModel"
    },
    "UserModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "displayName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "timeZone": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "UserModel"
      },
      "type": "object",
      "title": "UserModel"
    },
    "NewUserModel": {
      "required": [
        "username",
        "displayName"
      ],
      "properties": {
        "username": {
          "description": "Required",
          "type": "string",
          "title": "String"
        },
        "displayName": {
          "description": "Required",
          "type": "string",
          "title": "String"
        },
        "timeZone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "apiOnly": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "emailConfirmed": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "NewUserModel"
      },
      "type": "object",
      "title": "NewUserModel"
    },
    "NewUserCreatedModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "username": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "displayName": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "timeZone": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "apiKey": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "email": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "emailConfirmed": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "NewUserCreatedModel"
      },
      "type": "object",
      "title": "NewUserCreatedModel"
    },
    "UpdateUserModel": {
      "required": [
        "username"
      ],
      "properties": {
        "username": {
          "description": "Required",
          "type": "string",
          "title": "String"
        },
        "emailConfirmed": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "UpdateUserModel"
      },
      "type": "object",
      "title": "UpdateUserModel"
    },
    "UserUpdatedModel": {
      "properties": {
        "username": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "emailConfirmed": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        }
      },
      "xml": {
        "name": "UserUpdatedModel"
      },
      "type": "object",
      "title": "UserUpdatedModel"
    },
    "WebHook": {
      "properties": {
        "id": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "webHookUri": {
          "description": "",
          "type": "string",
          "title": "Uri"
        },
        "secret": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "description": {
          "description": "",
          "type": "string",
          "title": "String"
        },
        "isPaused": {
          "description": "",
          "type": "boolean",
          "title": "Boolean"
        },
        "filters": {
          "description": "",
          "items": {
            "type": "string",
            "title": "String"
          },
          "readOnly": true,
          "type": "array",
          "uniqueItems": true,
          "title": "ISet<String>"
        },
        "headers": {
          "description": "",
          "additionalProperties": {
            "type": "string",
            "title": "String"
          },
          "readOnly": true,
          "type": "object",
          "title": "IDictionary<String,String>"
        },
        "properties": {
          "description": "",
          "additionalProperties": {
            "type": "object",
            "title": "Object"
          },
          "readOnly": true,
          "type": "object",
          "title": "IDictionary<String,Object>"
        }
      },
      "xml": {
        "name": "WebHook"
      },
      "type": "object",
      "title": "WebHook"
    },
    "WhiteLabelModel": {
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "title": "Int32"
        },
        "name": {
          "description": "",
          "type": "string",
          "title": "String"
        }
      },
      "xml": {
        "name": "WhiteLabelModel"
      },
      "type": "object",
      "title": "WhiteLabelModel"
    },
    "ODataQueryOptionsOfWorkType": {
      "properties": {
        "ifMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<WorkType>"
        },
        "ifNoneMatch": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "ETag<WorkType>"
        },
        "context": {
          "$ref": "#/definitions/ODataQueryContext",
          "description": "",
          "readOnly": true
        },
        "request": {
          "description": "",
          "readOnly": true,
          "type": "object",
          "title": "HttpRequestMessage"
        },
        "rawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "description": "",
          "readOnly": true
        },
        "selectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "description": "",
          "readOnly": true
        },
        "filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "description": "",
          "readOnly": true
        },
        "orderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "description": "",
          "readOnly": true
        },
        "skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "description": "",
          "readOnly": true
        },
        "top": {
          "$ref": "#/definitions/TopQueryOption",
          "description": "",
          "readOnly": true
        },
        "inlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "description": "",
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/ODataQueryValidator",
          "description": ""
        }
      },
      "xml": {
        "name": "ODataQueryOptions`1"
      },
      "type": "object",
      "title": "ODataQueryOptions<WorkType>"
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic",
      "description": "Your API key should be the username and the password can be left blank"
    },
    "apiKey": {
      "type": "apiKey",
      "description": "API Key Authentication",
      "name": "apiKey",
      "in": "header"
    },
    "oauth2": {
      "type": "oauth2",
      "description": "OAuth2 Implicit Grant",
      "flow": "implicit",
      "authorizationUrl": "https://{yourwhitelabel}.yourpayroll.com.au/oauth/authorise",
      "tokenUrl": "https://{yourwhitelabel}.yourpayroll.com.au/oauth/token",
      "scopes": {
        "read": "Read access to protected resources",
        "write": "Write access to protected resources"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "tags": [
    {
      "name": "AbaSettings",
      "description": "ABA Settings"
    },
    {
      "name": "Authentication",
      "description": "Authentication"
    },
    {
      "name": "BenefitCategory",
      "description": "Benefit Categories"
    },
    {
      "name": "Brand",
      "description": "Brand"
    },
    {
      "name": "Business",
      "description": "Business"
    },
    {
      "name": "ChartOfAccounts",
      "description": "Chart of Accounts"
    },
    {
      "name": "DeductionCategories",
      "description": "Deduction Categories"
    },
    {
      "name": "ReportingDimensions",
      "description": "Dimensions"
    },
    {
      "name": "Employee",
      "description": "Employee"
    },
    {
      "name": "EmployeeAccess",
      "description": "Employee Access"
    },
    {
      "name": "EmployeeBankAccount",
      "description": "Employee Bank Accounts"
    },
    {
      "name": "EmployeeBenefitCategory",
      "description": "Employee Benefit Categories"
    },
    {
      "name": "EmployeeBenefitsInKind",
      "description": "Employee Benefits In Kind"
    },
    {
      "name": "EmployeeDocument",
      "description": "Employee Documents"
    },
    {
      "name": "EmployeeEarningsLineSplit",
      "description": "Employee Earnings Line Split"
    },
    {
      "name": "EmployeeExpenseCategories",
      "description": "Employee Expense Categories"
    },
    {
      "name": "EmployeeExpenseRequest",
      "description": "Employee Expense Requests"
    },
    {
      "name": "EmployeeGainsOrProfitsEmployeeSharePlan",
      "description": "Employee Gains Or Profits Employee Share Plan"
    },
    {
      "name": "EmployeeGroups",
      "description": "Employee Groups"
    },
    {
      "name": "EmployeeIncomeFromOverseasSubjectToTaxRemission",
      "description": "Employee Income From Overseas Subject To Tax Remission"
    },
    {
      "name": "EmployeeIncomeTaxBorneByEmployer",
      "description": "Employee Income Tax Borne By Employer"
    },
    {
      "name": "EmployeeIrasLumpSum",
      "description": "Employee Iras Lump Sum"
    },
    {
      "name": "EmployeeLeaveAllowances",
      "description": "Employee Leave Allowances"
    },
    {
      "name": "EmployeeOnboarding",
      "description": "Employee Onboarding"
    },
    {
      "name": "EmployeePayRateSchedule",
      "description": "Employee Pay Rate Schedule"
    },
    {
      "name": "EmployeeQualifications",
      "description": "Employee Qualifications"
    },
    {
      "name": "EmployeeReportingDimensionEarningsLineSplit",
      "description": "Employee Reporting Dimension Earnings Line Split"
    },
    {
      "name": "EmployeeSelfManagedSuperFund",
      "description": "Employee Self Managed Super Funds"
    },
    {
      "name": "Ess",
      "description": "Employee Self Setup"
    },
    {
      "name": "EmployeeSuperFund",
      "description": "Employee Super Funds"
    },
    {
      "name": "EmployerLiabilityCategories",
      "description": "Employer Liability Categories"
    },
    {
      "name": "EmployingEntities",
      "description": "Employing Entities"
    },
    {
      "name": "EmploymentAgreement",
      "description": "Employment Agreement"
    },
    {
      "name": "Instapay",
      "description": "Instapay"
    },
    {
      "name": "InstapayDeduction",
      "description": "InstapayDeduction"
    },
    {
      "name": "Invoices",
      "description": "Invoices"
    },
    {
      "name": "LeaveAllowance",
      "description": "Leave Allowances"
    },
    {
      "name": "LeaveCategories",
      "description": "Leave Categories"
    },
    {
      "name": "LeaveRequests",
      "description": "Leave Requests"
    },
    {
      "name": "Location",
      "description": "Location"
    },
    {
      "name": "LookupData",
      "description": "Lookup Data"
    },
    {
      "name": "Manager",
      "description": "Manager"
    },
    {
      "name": "P11d",
      "description": "P11ds"
    },
    {
      "name": "PayCategory",
      "description": "Pay Category"
    },
    {
      "name": "PayRateTemplate",
      "description": "Pay Rate Templates"
    },
    {
      "name": "PayRun",
      "description": "Pay Run"
    },
    {
      "name": "EmployeeRecurringTransactions",
      "description": "Pay Run Inclusions"
    },
    {
      "name": "PaySchedule",
      "description": "Pay Schedules"
    },
    {
      "name": "PaymentSummary",
      "description": "Payment Summaries"
    },
    {
      "name": "PensionSettings",
      "description": "Pension Settings"
    },
    {
      "name": "PublicHoliday",
      "description": "Public Holiday"
    },
    {
      "name": "Qualifications",
      "description": "Qualifications"
    },
    {
      "name": "Reporting",
      "description": "Reporting"
    },
    {
      "name": "Reseller",
      "description": "Reseller"
    },
    {
      "name": "RosterShift",
      "description": "Roster Shifts"
    },
    {
      "name": "Subcontractor",
      "description": "Subcontractor"
    },
    {
      "name": "SuperFund",
      "description": "Super Funds"
    },
    {
      "name": "TieredLeaveAllowance",
      "description": "Tiered Leave Allowances"
    },
    {
      "name": "TimeAndAttendance",
      "description": "Time and Attendance"
    },
    {
      "name": "Timesheets",
      "description": "Timesheets"
    },
    {
      "name": "Unavailability",
      "description": "Unavailability"
    },
    {
      "name": "User",
      "description": "User"
    },
    {
      "name": "Webhook",
      "description": "Webhook"
    },
    {
      "name": "WhiteLabel",
      "description": "White Label"
    },
    {
      "name": "WorkType",
      "description": "Work Types"
    }
  ],
  "x-navigateMethodsByName": true
}